<?page title="ZHighCharts Demo" contentType="text/html;charset=UTF-8"?>
<zk>

	
	<window title="ZHighCharts Demo" border="normal" width="100%"
		use="ctrl.DemoComposer">
		<script src='http://alexgorbatchev.com/pub/sh/2.1.382/scripts/shCore.js' type='text/javascript'/>
		<script src='http://alexgorbatchev.com/pub/sh/2.1.382/scripts/shBrushCss.js' type='text/javascript'/>
		<script src='http://alexgorbatchev.com/pub/sh/2.1.382/scripts/shBrushJava.js' type='text/javascript'/>
		<script src='http://alexgorbatchev.com/pub/sh/2.1.382/scripts/shBrushJScript.js' type='text/javascript'/>
		<script src='http://alexgorbatchev.com/pub/sh/2.1.382/scripts/shBrushXml.js' type='text/javascript'/>        
		<script>
		SyntaxHighlighter.config.bloggerMode = false;
		SyntaxHighlighter.config.clipboardSwf = "http://alexgorbatchev.com/pub/sh/2.1.382/scripts/clipboard.swf";
		SyntaxHighlighter.all();
		</script>
		<style src='http://alexgorbatchev.com/pub/sh/2.1.382/styles/shCore.css'/>
		<style src='http://alexgorbatchev.com/pub/sh/2.1.382/styles/shThemeEclipse.css'/>
		<style>
		/* Liens non soulignés */
		.syntaxhighlighter .string a,.syntaxhighlighter .plain a
		{
		 text-decoration: none;
		 /* hauterur de la ligne par défaut, Correction pour certains thèmes blogger */
		 line-height: 100%;
		}
		/* Liens soulignés au survol */ 
		.syntaxhighlighter .string a:hover,.syntaxhighlighter .plain a:hover
		{
		 text-decoration: underline;
		}
		/* Coloration alternée des lignes , correction pour le thème Eclipse */
		.syntaxhighlighter .line.alt2
		{
		 background-color: #F8F8F8 !important;
		}
		/* Éliminer la couleur jaune phosphorescent du thème Eclipse*/
		.syntaxhighlighter .script {
		background-color: transparent !important;
		}
		</style>
	
		<label value="Line and scatter charts" style="font-size:2em;"/>
		<groupbox mold="3d" width="100%" open="false">
			<caption label="Basic Line" />
			<tabbox>
				<tabs>
					<tab label="Overview" />
					<tab label="demo.zul" />
					<tab label="DemoComposer.java" />
				</tabs>
				<tabpanels>
					<tabpanel><zhighcharts id="chartComp" /></tabpanel>
					<tabpanel><html><![CDATA[ 
						<pre class="brush:xml">
&lt;window title=&quot;Basic Line&quot; border=&quot;normal&quot; width=&quot;100%&quot;
	use=&quot;ctrl.DemoComposer&quot;&gt;
	&lt;zhighcharts id=&quot;chartComp&quot; /&gt;
&lt;/window&gt;
						</pre> ]]></html>
					</tabpanel>
					<tabpanel><html><![CDATA[ <pre class="brush:java">
package ctrl;

import java.util.HashMap;
import java.util.Map;

import org.ngi.zhighcharts.SimpleExtXYModel;
import org.ngi.zhighcharts.ZHighCharts;
import org.zkoss.util.logging.Log;
import org.zkoss.zk.ui.event.Event;
import org.zkoss.zk.ui.event.EventListener;
import org.zkoss.zul.SimplePieModel;
import org.zkoss.zul.Window;

public class DemoComposer extends Window implements EventListener {
	protected Log logger = Log.lookup(this.getClass());
	
	//Basic Line	
	private ZHighCharts chartComp;
	private SimpleExtXYModel dataChartModel = new SimpleExtXYModel();
							
	public void onCreate() throws Exception {

		//================================================================================
	    // Basic Line
	    //================================================================================

		chartComp = (ZHighCharts) getFellow(&quot;chartComp&quot;);
		chartComp.setTitle(&quot;Monthly Average Temperature&quot;);
		chartComp.setSubTitle(&quot;Source: WorldClimate.com&quot;);
		chartComp.setType(&quot;line&quot;);
		chartComp.setXAxisTitle(&quot;Months&quot;);
		chartComp.setxAxisOptions(&quot;{&quot; +
					&quot;categories: [&quot; +
						&quot;'Jan', &quot; +
						&quot;'Feb', &quot; +
						&quot;'Mar', &quot; +
						&quot;'Apr', &quot; +
						&quot;'May', &quot; +
						&quot;'Jun', &quot; +
						&quot;'Jul', &quot; +
						&quot;'Aug', &quot; +
						&quot;'Sep', &quot; +
						&quot;'Oct', &quot; +
						&quot;'Nov', &quot; +
						&quot;'Dec'&quot; +
					&quot;]&quot; +
				&quot;}&quot;);
		chartComp.setYAxisTitle(&quot;Temperature (&#x00b0;C)&quot;);
		chartComp.setyAxisOptions(&quot;{&quot; +
					&quot;plotLines: [&quot; +
					&quot;{&quot; +
						&quot;value: 0, &quot; +
						&quot;width: 1,&quot; +
						&quot;color: '#808080' &quot; +
					&quot;}]&quot; +
				&quot;}&quot;);
		chartComp.setLegend(&quot;{&quot; +
					&quot;layout: 'vertical',&quot; +
					&quot;align: 'right',&quot; +
					&quot;verticalAlign: 'top',&quot; +
					&quot;x: -10,&quot; +
					&quot;y: 100,&quot; +
					&quot;borderWidth: 0&quot; +
				&quot;}&quot;);
		chartComp.setPlotOptions(&quot;{&quot; +
				&quot;series:{&quot; +
					&quot;dataLabels:{&quot; +
						&quot;formatter: function (){return this.y +'&#x00b0;C';},&quot; + 
						&quot;enabled: true&quot; +
					&quot;}&quot; +
				&quot;}&quot; +
			&quot;}&quot;);
		chartComp.setTooltipFormatter(&quot;function formatTooltip(obj){ &quot; +
					&quot;return '&lt;b&gt;'+ obj.series.name +'&lt;/b&gt;&quot; +
					&quot;&lt;br/&gt;'+ obj.x +': '+ obj.y +'&#x00b0;C';&quot; +
				&quot;}&quot;);
		
		chartComp.setModel(dataChartModel);
		
		//Adding some data to the model
		dataChartModel.addValue(&quot;Tokyo&quot;, 0, 7);
		dataChartModel.addValue(&quot;Tokyo&quot;, 1, 6.9);
		dataChartModel.addValue(&quot;Tokyo&quot;, 2, 9.5);
		dataChartModel.addValue(&quot;Tokyo&quot;, 3, 14.5);
		dataChartModel.addValue(&quot;Tokyo&quot;, 4, 18.2);
		dataChartModel.addValue(&quot;Tokyo&quot;, 5, 21.5);
		dataChartModel.addValue(&quot;Tokyo&quot;, 6, 25.2);
		dataChartModel.addValue(&quot;Tokyo&quot;, 7, 26.5);
		dataChartModel.addValue(&quot;Tokyo&quot;, 8, 23.3);
		dataChartModel.addValue(&quot;Tokyo&quot;, 9, 18.3);
		dataChartModel.addValue(&quot;Tokyo&quot;, 10, 13.9);
		dataChartModel.addValue(&quot;Tokyo&quot;, 11, 9.6);

		dataChartModel.addValue(&quot;New York&quot;, 0, -0.2);
		dataChartModel.addValue(&quot;New York&quot;, 1, 0.8);
		dataChartModel.addValue(&quot;New York&quot;, 2, 5.7);
		dataChartModel.addValue(&quot;New York&quot;, 3, 11.3);
		dataChartModel.addValue(&quot;New York&quot;, 4, 17.0);
		dataChartModel.addValue(&quot;New York&quot;, 5, 22.0);
		dataChartModel.addValue(&quot;New York&quot;, 6, 24.8);
		dataChartModel.addValue(&quot;New York&quot;, 7, 24.1);
		dataChartModel.addValue(&quot;New York&quot;, 8, 20.1);
		dataChartModel.addValue(&quot;New York&quot;, 9, 14.1);
		dataChartModel.addValue(&quot;New York&quot;, 10, 8.6);
		dataChartModel.addValue(&quot;New York&quot;, 11, 2.5);
		
		dataChartModel.addValue(&quot;Berlin&quot;, 0, -0.9);
		dataChartModel.addValue(&quot;Berlin&quot;, 1, 0.6);
		dataChartModel.addValue(&quot;Berlin&quot;, 2, 3.5);
		dataChartModel.addValue(&quot;Berlin&quot;, 3, 8.4);
		dataChartModel.addValue(&quot;Berlin&quot;, 4, 13.5);
		dataChartModel.addValue(&quot;Berlin&quot;, 5, 17.0);
		dataChartModel.addValue(&quot;Berlin&quot;, 6, 18.6);
		dataChartModel.addValue(&quot;Berlin&quot;, 7, 17.9);
		dataChartModel.addValue(&quot;Berlin&quot;, 8, 14.3);
		dataChartModel.addValue(&quot;Berlin&quot;, 9, 9.0);
		dataChartModel.addValue(&quot;Berlin&quot;, 10, 3.9);
		dataChartModel.addValue(&quot;Berlin&quot;, 11, 1.0);
		
		dataChartModel.addValue(&quot;London&quot;, 0, 3.9);
		dataChartModel.addValue(&quot;London&quot;, 1, 4.2);
		dataChartModel.addValue(&quot;London&quot;, 2, 5.7);
		dataChartModel.addValue(&quot;London&quot;, 3, 8.5);
		dataChartModel.addValue(&quot;London&quot;, 4, 11.9);
		dataChartModel.addValue(&quot;London&quot;, 5, 15.2);
		dataChartModel.addValue(&quot;London&quot;, 6, 17.0);
		dataChartModel.addValue(&quot;London&quot;, 7, 16.6);
		dataChartModel.addValue(&quot;London&quot;, 8, 14.2);
		dataChartModel.addValue(&quot;London&quot;, 9, 10.3);
		dataChartModel.addValue(&quot;London&quot;, 10, 6.6);
		dataChartModel.addValue(&quot;London&quot;, 11, 4.8);
			
	}
	
	@Override
	public void onEvent(Event arg0) throws Exception {
		// TODO Auto-generated method stub
		
	}
	
	/**
	 * internal method to convert date&amp;amp;time from string to epoch milliseconds
	 * 
	 * @param date
	 * @return
	 * @throws Exception
	 */
	private long getDateTime(String date) throws Exception {
		return sdf.parse(date).getTime();
	}

}
 </pre>]]></html></tabpanel>
			</tabpanels>
			</tabbox>
		</groupbox>
		<groupbox mold="3d" width="100%" open="false">
			<caption label="Shared Tooltip, Clickable points" />
			<tabbox>
				<tabs>
					<tab label="Overview" />
					<tab label="demo.zul" />
					<tab label="DemoComposer.java" />
				</tabs>
				<tabpanels>
					<tabpanel><zhighcharts id="chartComp3" /></tabpanel>
					<tabpanel><html><![CDATA[ 
						<pre class="brush:xml">
&lt;script type=&quot;text/javascript&quot; src=&quot;http://www.highcharts.com/highslide/highslide-full.min.js&quot;/&gt;
&lt;script type=&quot;text/javascript&quot; src=&quot;http://www.highcharts.com/highslide/highslide.config.js&quot; charset=&quot;utf-8&quot;/&gt;
&lt;style src=&quot;http://www.highcharts.com/highslide/highslide.css&quot; /&gt;
	
&lt;window title=&quot;Shared Tooltip, Clickable points&quot; border=&quot;normal&quot; width=&quot;100%&quot;
	use=&quot;ctrl.DemoComposer&quot;&gt;
	&lt;zhighcharts id=&quot;chartComp3&quot; /&gt;
&lt;/window&gt;
						</pre>]]></html>
					</tabpanel>
					<tabpanel><html><![CDATA[ <pre class="brush:java">
package ctrl;

import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.HashMap;
import java.util.Map;

import org.ngi.zhighcharts.SimpleExtXYModel;
import org.ngi.zhighcharts.ZHighCharts;
import org.zkoss.util.logging.Log;
import org.zkoss.zk.ui.event.Event;
import org.zkoss.zk.ui.event.EventListener;
import org.zkoss.zul.SimplePieModel;
import org.zkoss.zul.Window;

public class DemoComposer extends Window implements EventListener {
	protected Log logger = Log.lookup(this.getClass());
	
	//Shared Tooltip, Clickable points
	private ZHighCharts chartComp3;
	private SimpleExtXYModel dataChartModel3 = new SimpleExtXYModel();	

	// date format used to capture date time
	private SimpleDateFormat sdf = new SimpleDateFormat(&quot;yyyy-MM-dd HH:mm:ss z&quot;);
	
	public void onCreate() throws Exception {

		//================================================================================
	    // Shared Tooltip, Clickable points
	    //================================================================================

		chartComp3 = (ZHighCharts) getFellow(&quot;chartComp3&quot;);
		chartComp3.setTitle(&quot;Daily visits at www.highcharts.com&quot;);
		chartComp3.setSubTitle(&quot;Source: Google Analytics&quot;);
		chartComp3.setType(&quot;line&quot;);
		chartComp3.setxAxisOptions(&quot;{&quot; +
				&quot;type: 'datetime',&quot; +
				&quot;tickInterval: 7 * 86400000,&quot; +
				&quot;tickWidth: 0,&quot; +
				&quot;gridLineWidth: 1,&quot; +
				&quot;labels: {align: 'left',&quot; +
							&quot;x: 3,&quot; +
							&quot;y: -3&quot; +
						&quot;}&quot; +
				&quot;}&quot;);
		chartComp3.setyAxisOptions(&quot;[&quot; +
				&quot;{&quot; +
					&quot;labels: {&quot; +
						&quot;align: 'left',&quot; +
						&quot;x: 3,&quot; +
						&quot;y: 16,&quot; +
						&quot;formatter: function() {&quot; +
							&quot;return Highcharts.numberFormat(this.value, 0);&quot; +
						&quot;}&quot; +
					&quot;},&quot; +
					&quot;showFirstLabel: false&quot; +
				&quot;}, &quot; +
				&quot;{&quot; +
					&quot;linkedTo: 0,&quot; +
					&quot;gridLineWidth: 0,&quot; +
					&quot;opposite: true,&quot; +
					&quot;title: {text: null},&quot; +
					&quot;labels: {&quot; +
						&quot;align: 'right',&quot; +
						&quot;x: -3,&quot; +
						&quot;y: 16,&quot; +
						&quot;formatter: function() {&quot; +
							&quot;return Highcharts.numberFormat(this.value, 0);&quot; +
						&quot;}&quot; +
					&quot;},&quot; +
					&quot;showFirstLabel: false&quot; +
				&quot;}]&quot;);
		chartComp3.setLegend(&quot;{&quot; +
								&quot;align: 'left',&quot; +
								&quot;verticalAlign: 'top',&quot; +
								&quot;y: 20,&quot; +
								&quot;floating: true,&quot; +
								&quot;borderWidth: 0&quot; +
							&quot;}&quot;);
		chartComp3.setTooltipOptions(&quot;{&quot; +
					&quot;shared: true,&quot; +
					&quot;crosshairs: true&quot; +
				&quot;}&quot;);
		chartComp3.setTooltipFormatter(&quot;function formatTooltip(obj){&quot; +
					&quot;return Highcharts.dateFormat('%A, %b %d, %Y', obj.x) + '&lt;br/&gt;&quot; +
					&quot;&lt;span style=\&quot;color:'+ obj.points[0].series.color +';\&quot;&gt;'+ obj.points[0].series.name +'&lt;/span&gt; : &lt;b&gt;'+ obj.points[0].y +'&lt;/b&gt;&lt;br/&gt;&quot; +
					&quot;&lt;span style=\&quot;color:'+ obj.points[1].series.color +';\&quot;&gt;'+ obj.points[1].series.name +'&lt;/span&gt; : &lt;b&gt;'+ obj.points[1].y +'&lt;/b&gt;';&quot; +
				&quot;}&quot;);
		chartComp3.setPlotOptions(&quot;{ &quot; +
					&quot;series:{ &quot; +
						&quot;cursor:'pointer',&quot; +
						&quot;point:{&quot; +
							&quot;events:{ &quot; +
								&quot;click:function(){ &quot; +
									&quot;hs.htmlExpand(null,{ &quot; +
										&quot;pageOrigin:{ x:this.pageX, y:this.pageY },&quot; +
										&quot;headingText:this.series.name, &quot; +
										&quot;maincontentText:Highcharts.dateFormat('%A,%b%e,%Y',this.x)+':&lt;br/&gt;'+ this.y+'visits', &quot; +
										&quot;width:200 &quot; +
									&quot;}); &quot; +
								&quot;} &quot; +
							&quot;} &quot; +
						&quot;}, &quot; +
						&quot;marker:{ &quot; +
							&quot;lineWidth:1 &quot; +
						&quot;} &quot; +
					&quot;} &quot; +
				&quot;}&quot;);
		
		//Setting some style to the series &quot;All Visits&quot;
		Map style = new HashMap();
		style.put(&quot;lineWidth&quot;, 4);
		Map marker = new HashMap();
		marker.put(&quot;radius&quot;, 4);
		style.put(&quot;marker&quot;, marker);
		chartComp3.setSeriesOptions(&quot;All Visits&quot;, style);
		
		chartComp3.setModel(dataChartModel3);
		
		//Adding some data to the model
		dataChartModel3.addValue(&quot;All Visits&quot;, getDateTime(&quot;2012-09-05 00:00:00 GMT&quot;), 966);
		dataChartModel3.addValue(&quot;All Visits&quot;, getDateTime(&quot;2012-09-06 00:00:00 GMT&quot;), 2475);
		dataChartModel3.addValue(&quot;All Visits&quot;, getDateTime(&quot;2012-09-07 00:00:00 GMT&quot;), 3336);
		dataChartModel3.addValue(&quot;All Visits&quot;, getDateTime(&quot;2012-09-08 00:00:00 GMT&quot;), 3211);
		dataChartModel3.addValue(&quot;All Visits&quot;, getDateTime(&quot;2012-09-09 00:00:00 GMT&quot;), 3229);
		dataChartModel3.addValue(&quot;All Visits&quot;, getDateTime(&quot;2012-09-10 00:00:00 GMT&quot;), 2808);
		dataChartModel3.addValue(&quot;All Visits&quot;, getDateTime(&quot;2012-09-11 00:00:00 GMT&quot;), 1168);
		dataChartModel3.addValue(&quot;All Visits&quot;, getDateTime(&quot;2012-09-12 00:00:00 GMT&quot;), 1110);
		dataChartModel3.addValue(&quot;All Visits&quot;, getDateTime(&quot;2012-09-13 00:00:00 GMT&quot;), 3112);
		dataChartModel3.addValue(&quot;All Visits&quot;, getDateTime(&quot;2012-09-14 00:00:00 GMT&quot;), 3590);
		dataChartModel3.addValue(&quot;All Visits&quot;, getDateTime(&quot;2012-09-15 00:00:00 GMT&quot;), 3529);
		dataChartModel3.addValue(&quot;All Visits&quot;, getDateTime(&quot;2012-09-16 00:00:00 GMT&quot;), 3519);
		dataChartModel3.addValue(&quot;All Visits&quot;, getDateTime(&quot;2012-09-17 00:00:00 GMT&quot;), 3696);
		dataChartModel3.addValue(&quot;All Visits&quot;, getDateTime(&quot;2012-09-18 00:00:00 GMT&quot;), 1400);
		dataChartModel3.addValue(&quot;All Visits&quot;, getDateTime(&quot;2012-09-19 00:00:00 GMT&quot;), 1302);
		dataChartModel3.addValue(&quot;All Visits&quot;, getDateTime(&quot;2012-09-20 00:00:00 GMT&quot;), 3348);
		dataChartModel3.addValue(&quot;All Visits&quot;, getDateTime(&quot;2012-09-21 00:00:00 GMT&quot;), 3606);
		dataChartModel3.addValue(&quot;All Visits&quot;, getDateTime(&quot;2012-09-22 00:00:00 GMT&quot;), 3320);
		dataChartModel3.addValue(&quot;All Visits&quot;, getDateTime(&quot;2012-09-23 00:00:00 GMT&quot;), 2677);
		dataChartModel3.addValue(&quot;All Visits&quot;, getDateTime(&quot;2012-09-24 00:00:00 GMT&quot;), 2795);
		dataChartModel3.addValue(&quot;All Visits&quot;, getDateTime(&quot;2012-09-25 00:00:00 GMT&quot;), 1299);
		dataChartModel3.addValue(&quot;All Visits&quot;, getDateTime(&quot;2012-09-26 00:00:00 GMT&quot;), 1189);
		dataChartModel3.addValue(&quot;All Visits&quot;, getDateTime(&quot;2012-09-27 00:00:00 GMT&quot;), 3189);
		dataChartModel3.addValue(&quot;All Visits&quot;, getDateTime(&quot;2012-09-28 00:00:00 GMT&quot;), 3223);
		dataChartModel3.addValue(&quot;All Visits&quot;, getDateTime(&quot;2012-09-29 00:00:00 GMT&quot;), 3231);
		dataChartModel3.addValue(&quot;All Visits&quot;, getDateTime(&quot;2012-09-30 00:00:00 GMT&quot;), 3608);
		dataChartModel3.addValue(&quot;All Visits&quot;, getDateTime(&quot;2012-10-01 00:00:00 GMT&quot;), 2945);
		dataChartModel3.addValue(&quot;All Visits&quot;, getDateTime(&quot;2012-10-02 00:00:00 GMT&quot;), 1508);
		dataChartModel3.addValue(&quot;All Visits&quot;, getDateTime(&quot;2012-10-03 00:00:00 GMT&quot;), 1114);
		dataChartModel3.addValue(&quot;All Visits&quot;, getDateTime(&quot;2012-10-04 00:00:00 GMT&quot;), 2774);
		dataChartModel3.addValue(&quot;All Visits&quot;, getDateTime(&quot;2012-10-05 00:00:00 GMT&quot;), 2679);
		
		dataChartModel3.addValue(&quot;New Visitors&quot;, getDateTime(&quot;2012-09-05 00:00:00 GMT&quot;), 433);
		dataChartModel3.addValue(&quot;New Visitors&quot;, getDateTime(&quot;2012-09-06 00:00:00 GMT&quot;), 983);
		dataChartModel3.addValue(&quot;New Visitors&quot;, getDateTime(&quot;2012-09-07 00:00:00 GMT&quot;), 1463);
		dataChartModel3.addValue(&quot;New Visitors&quot;, getDateTime(&quot;2012-09-08 00:00:00 GMT&quot;), 1316);
		dataChartModel3.addValue(&quot;New Visitors&quot;, getDateTime(&quot;2012-09-09 00:00:00 GMT&quot;), 1351);
		dataChartModel3.addValue(&quot;New Visitors&quot;, getDateTime(&quot;2012-09-10 00:00:00 GMT&quot;), 1270);
		dataChartModel3.addValue(&quot;New Visitors&quot;, getDateTime(&quot;2012-09-11 00:00:00 GMT&quot;), 604);
		dataChartModel3.addValue(&quot;New Visitors&quot;, getDateTime(&quot;2012-09-12 00:00:00 GMT&quot;), 498);
		dataChartModel3.addValue(&quot;New Visitors&quot;, getDateTime(&quot;2012-09-13 00:00:00 GMT&quot;), 1352);
		dataChartModel3.addValue(&quot;New Visitors&quot;, getDateTime(&quot;2012-09-14 00:00:00 GMT&quot;), 1626);
		dataChartModel3.addValue(&quot;New Visitors&quot;, getDateTime(&quot;2012-09-15 00:00:00 GMT&quot;), 1549);
		dataChartModel3.addValue(&quot;New Visitors&quot;, getDateTime(&quot;2012-09-16 00:00:00 GMT&quot;), 1574);
		dataChartModel3.addValue(&quot;New Visitors&quot;, getDateTime(&quot;2012-09-17 00:00:00 GMT&quot;), 1680);
		dataChartModel3.addValue(&quot;New Visitors&quot;, getDateTime(&quot;2012-09-18 00:00:00 GMT&quot;), 677);
		dataChartModel3.addValue(&quot;New Visitors&quot;, getDateTime(&quot;2012-09-19 00:00:00 GMT&quot;), 603);
		dataChartModel3.addValue(&quot;New Visitors&quot;, getDateTime(&quot;2012-09-20 00:00:00 GMT&quot;), 1472);
		dataChartModel3.addValue(&quot;New Visitors&quot;, getDateTime(&quot;2012-09-21 00:00:00 GMT&quot;), 1570);
		dataChartModel3.addValue(&quot;New Visitors&quot;, getDateTime(&quot;2012-09-22 00:00:00 GMT&quot;), 1438);
		dataChartModel3.addValue(&quot;New Visitors&quot;, getDateTime(&quot;2012-09-23 00:00:00 GMT&quot;), 1140);
		dataChartModel3.addValue(&quot;New Visitors&quot;, getDateTime(&quot;2012-09-24 00:00:00 GMT&quot;), 1256);
		dataChartModel3.addValue(&quot;New Visitors&quot;, getDateTime(&quot;2012-09-25 00:00:00 GMT&quot;), 589);
		dataChartModel3.addValue(&quot;New Visitors&quot;, getDateTime(&quot;2012-09-26 00:00:00 GMT&quot;), 533);
		dataChartModel3.addValue(&quot;New Visitors&quot;, getDateTime(&quot;2012-09-27 00:00:00 GMT&quot;), 1253);
		dataChartModel3.addValue(&quot;New Visitors&quot;, getDateTime(&quot;2012-09-28 00:00:00 GMT&quot;), 1266);
		dataChartModel3.addValue(&quot;New Visitors&quot;, getDateTime(&quot;2012-09-29 00:00:00 GMT&quot;), 1249);
		dataChartModel3.addValue(&quot;New Visitors&quot;, getDateTime(&quot;2012-09-30 00:00:00 GMT&quot;), 1684);
		dataChartModel3.addValue(&quot;New Visitors&quot;, getDateTime(&quot;2012-10-01 00:00:00 GMT&quot;), 1185);
		dataChartModel3.addValue(&quot;New Visitors&quot;, getDateTime(&quot;2012-10-02 00:00:00 GMT&quot;), 460);
		dataChartModel3.addValue(&quot;New Visitors&quot;, getDateTime(&quot;2012-10-03 00:00:00 GMT&quot;), 499);
		dataChartModel3.addValue(&quot;New Visitors&quot;, getDateTime(&quot;2012-10-04 00:00:00 GMT&quot;), 1131);
		dataChartModel3.addValue(&quot;New Visitors&quot;, getDateTime(&quot;2012-10-05 00:00:00 GMT&quot;), 1047);

			
			
	}
	
	@Override
	public void onEvent(Event arg0) throws Exception {
		// TODO Auto-generated method stub
		
	}
	
	/**
	 * internal method to convert date&amp;amp;time from string to epoch milliseconds
	 * 
	 * @param date
	 * @return
	 * @throws Exception
	 */
	private long getDateTime(String date) throws Exception {
		return sdf.parse(date).getTime();
	}

}
 </pre>]]></html></tabpanel>
			</tabpanels>
			</tabbox>
		</groupbox>
		<groupbox mold="3d" width="100%" open="false">
			<caption label="Time series, zoomable" />
			<tabbox>
				<tabs>
					<tab label="Overview" />
					<tab label="demo.zul" />
					<tab label="DemoComposer.java" />
				</tabs>
				<tabpanels>
					<tabpanel><zhighcharts id="chartComp4" /></tabpanel>
					<tabpanel><html><![CDATA[ 
						<pre class="brush:xml">
&lt;window title=&quot;Time series, zoomable&quot; border=&quot;normal&quot; width=&quot;100%&quot;
	use=&quot;ctrl.DemoComposer&quot;&gt;
	&lt;zhighcharts id=&quot;chartComp4&quot; /&gt;
&lt;/window&gt;
						</pre>]]></html>
					</tabpanel>
					<tabpanel><html><![CDATA[ <pre class="brush:java">
package ctrl;

import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.HashMap;
import java.util.Map;

import org.ngi.zhighcharts.SimpleExtXYModel;
import org.ngi.zhighcharts.ZHighCharts;
import org.zkoss.util.logging.Log;
import org.zkoss.zk.ui.event.Event;
import org.zkoss.zk.ui.event.EventListener;
import org.zkoss.zul.SimplePieModel;
import org.zkoss.zul.Window;

public class DemoComposer extends Window implements EventListener {
	protected Log logger = Log.lookup(this.getClass());
	
	//Time series, zoomable
	private ZHighCharts chartComp4;
	private SimpleExtXYModel dataChartModel4 = new SimpleExtXYModel();	

	// date format used to capture date time
	private SimpleDateFormat sdf = new SimpleDateFormat(&quot;yyyy-MM-dd HH:mm:ss z&quot;);
	
	public void onCreate() throws Exception {

		//================================================================================
	    // Time series, zoomable
	    //================================================================================

		chartComp4 = (ZHighCharts) getFellow(&quot;chartComp4&quot;);
		chartComp4.setType(&quot;area&quot;);
		chartComp4.setOptions(&quot;{&quot; +
					&quot;zoomType: 'x',&quot; +
					&quot;spacingRight: 20&quot; +
				&quot;}&quot;);
		chartComp4.setTitle(&quot;USD to EUR exchange rate from 2006 through 2008&quot;);
		chartComp4.setSubTitle(&quot;'Click and drag in the plot area to zoom in' :&quot;);
		chartComp4.setxAxisOptions(&quot;{&quot; +
					&quot;type: 'datetime',&quot; +
					&quot;maxZoom: 14 * 24 * 3600000&quot; +
				&quot;}&quot;);
		chartComp4.setyAxisOptions(&quot;{&quot; +
					&quot;min: 0.6,&quot; +
					&quot;startOnTick: false,&quot; +
					&quot;showFirstLabel: false&quot; +
				&quot;}&quot;);
		chartComp4.setYAxisTitle(&quot;Exchange rate&quot;);
		chartComp4.setLegend(&quot;{&quot; +
					&quot;enabled: false&quot; +
				&quot;}&quot;);
		chartComp4.setTooltipOptions(&quot;{&quot; +
					&quot;shared: true&quot; +
				&quot;}&quot;);
		chartComp4.setTooltipFormatter(&quot;function formatTooltip(obj){&quot; +
					&quot;return Highcharts.dateFormat('%A, %b %d, %Y', obj.x) + '&lt;br/&gt;&quot; +
					&quot;&lt;span style=\&quot;color:'+ obj.points[0].series.color +';\&quot;&gt;'+ obj.points[0].series.name +'&lt;/span&gt; : &lt;b&gt;'+ obj.points[0].y +'&lt;/b&gt;';&quot; +
				&quot;}&quot;);
		chartComp4.setPlotOptions(&quot;{&quot; +
					&quot;area:{&quot; +
						&quot;fillColor:{&quot; +
							&quot;linearGradient:{&quot; +
								&quot;x1:0,&quot; +
								&quot;y1:0,&quot; +
								&quot;x2:0,&quot; +
								&quot;y2:1&quot; +
							&quot;},&quot; +
							&quot;stops:[&quot; +
								&quot;[0,Highcharts.getOptions().colors[0]],&quot; +
								&quot;[1,'rgba(2,0,0,0)']&quot; +
							&quot;]&quot; +
						&quot;},&quot; +
						&quot;lineWidth:1,&quot; +
						&quot;marker:{&quot; +
							&quot;enabled:false,&quot; +
							&quot;states:{&quot; +
								&quot;hover:{&quot; +
									&quot;enabled:true,&quot; +
									&quot;radius:5&quot; +
								&quot;}&quot; +
							&quot;}&quot; +
						&quot;},&quot; +
						&quot;shadow:false,&quot; +
						&quot;states:{&quot; +
							&quot;hover:{&quot; +
								&quot;lineWidth:1&quot; +
							&quot;}&quot; +
						&quot;}&quot; +
					&quot;}&quot; +
				&quot;}&quot;);
				
		chartComp4.setModel(dataChartModel4);
		
		//Adding some data to the model
		Number dataChartTab4[] = {0.8446, 0.8445, 0.8444, 0.8451, 0.8418, 0.8264, 0.8258, 0.8232, 0.8233, 0.8258, 0.8283, 0.8278, 0.8256, 0.8292, 0.8239, 0.8239, 0.8245, 0.8265, 0.8261, 0.8269, 0.8273, 0.8244, 
				0.8244, 0.8172, 0.8139, 0.8146, 0.8164, 0.82,  0.8269, 0.8269, 0.8269, 0.8258, 0.8247, 0.8286, 0.8289, 0.8316, 0.832, 0.8333, 0.8352, 0.8357, 0.8355, 0.8354, 0.8403, 0.8403, 0.8406, 0.8403, 
				0.8396, 0.8418, 0.8409, 0.8384, 0.8386, 0.8372, 0.839, 0.84, 0.8389, 0.84, 0.8423, 0.8423, 0.8435, 0.8422, 0.838, 0.8373, 0.8316, 0.8303, 0.8303, 0.8302, 0.8369, 0.84, 0.8385, 0.84, 0.8401, 
				0.8402, 0.8381, 0.8351, 0.8314, 0.8273, 0.8213, 0.8207, 0.8207, 0.8215, 0.8242, 0.8273, 0.8301, 0.8346, 0.8312, 0.8312, 0.8312, 0.8306, 0.8327, 0.8282, 0.824, 0.8255, 0.8256, 0.8273, 0.8209, 
				0.8151, 0.8149, 0.8213, 0.8273, 0.8273, 0.8261, 0.8252, 0.824, 0.8262, 0.8258, 0.8261, 0.826, 0.8199, 0.8153, 0.8097, 0.8101, 0.8119, 0.8107, 0.8105, 0.8084, 0.8069, 0.8047, 0.8023, 0.7965, 
				0.7919, 0.7921, 0.7922, 0.7934, 0.7918, 0.7915, 0.787, 0.7861, 0.7861, 0.7853, 0.7867, 0.7827, 0.7834, 0.7766, 0.7751, 0.7739, 0.7767, 0.7802, 0.7788, 0.7828, 0.7816, 0.7829, 0.783, 0.7829, 
				0.7781, 0.7811, 0.7831, 0.7826, 0.7855, 0.7855, 0.7845, 0.7798, 0.7777, 0.7822, 0.7785, 0.7744, 0.7743, 0.7726, 0.7766, 0.7806, 0.785, 0.7907, 0.7912, 0.7913, 0.7931, 0.7952, 0.7951, 0.7928, 
				0.791, 0.7913, 0.7912, 0.7941, 0.7953, 0.7921, 0.7919, 0.7968, 0.7999, 0.7999, 0.7974, 0.7942, 0.796, 0.7969, 0.7862, 0.7821, 0.7821, 0.7821, 0.7811, 0.7833, 0.7849, 0.7819, 0.7809, 0.7809,
				0.7827, 0.7848, 0.785, 0.7873, 0.7894, 0.7907, 0.7909, 0.7947, 0.7987, 0.799, 0.7927, 0.79, 0.7878, 0.7878, 0.7907, 0.7922, 0.7937, 0.786, 0.787, 0.7838, 0.7838, 0.7837, 0.7836, 0.7806,
				0.7825, 0.7798, 0.777, 0.777, 0.7772, 0.7793, 0.7788, 0.7785, 0.7832, 0.7865, 0.7865, 0.7853, 0.7847, 0.7809, 0.778, 0.7799, 0.78, 0.7801, 0.7765, 0.7785, 0.7811, 0.782, 0.7835, 0.7845, 
				0.7844, 0.782, 0.7811, 0.7795, 0.7794, 0.7806, 0.7794, 0.7794, 0.7778, 0.7793, 0.7808, 0.7824, 0.787, 0.7894, 0.7893, 0.7882, 0.7871, 0.7882, 0.7871, 0.7878, 0.79, 0.7901, 0.7898, 0.7879, 
				0.7886, 0.7858, 0.7814, 0.7825, 0.7826, 0.7826, 0.786, 0.7878, 0.7868, 0.7883, 0.7893, 0.7892, 0.7876, 0.785, 0.787, 0.7873, 0.7901, 0.7936, 0.7939, 0.7938, 0.7956, 0.7975, 0.7978, 0.7972, 
				0.7995, 0.7995, 0.7994, 0.7976, 0.7977, 0.796, 0.7922, 0.7928, 0.7929, 0.7948, 0.797, 0.7953, 0.7907, 0.7872, 0.7852, 0.7852, 0.786, 0.7862, 0.7836, 0.7837, 0.784, 0.7867, 0.7867, 0.7869, 
				0.7837, 0.7827, 0.7825, 0.7779, 0.7791, 0.779, 0.7787, 0.78, 0.7807, 0.7803, 0.7817, 0.7799, 0.7799, 0.7795, 0.7801, 0.7765, 0.7725, 0.7683, 0.7641, 0.7639, 0.7616, 0.7608, 0.759, 0.7582, 
				0.7539, 0.75, 0.75, 0.7507, 0.7505, 0.7516, 0.7522, 0.7531, 0.7577, 0.7577, 0.7582, 0.755, 0.7542, 0.7576, 0.7616, 0.7648, 0.7648, 0.7641, 0.7614, 0.757, 0.7587, 0.7588, 0.762, 0.762, 0.7617,
				0.7618, 0.7615, 0.7612, 0.7596, 0.758, 0.758, 0.758, 0.7547, 0.7549, 0.7613, 0.7655, 0.7693, 0.7694, 0.7688, 0.7678, 0.7708, 0.7727, 0.7749, 0.7741, 0.7741, 0.7732, 0.7727, 0.7737, 0.7724, 
				0.7712, 0.772, 0.7721, 0.7717, 0.7704, 0.769, 0.7711, 0.774, 0.7745, 0.7745, 0.774, 0.7716, 0.7713, 0.7678, 0.7688, 0.7718, 0.7718, 0.7728, 0.7729, 0.7698, 0.7685, 0.7681, 0.769, 0.769, 0.7698, 
				0.7699, 0.7651, 0.7613, 0.7616, 0.7614, 0.7614, 0.7607, 0.7602, 0.7611, 0.7622, 0.7615, 0.7598, 0.7598, 0.7592, 0.7573, 0.7566, 0.7567, 0.7591, 0.7582, 0.7585, 0.7613, 0.7631, 0.7615, 0.76,
				0.7613, 0.7627, 0.7627, 0.7608, 0.7583, 0.7575, 0.7562, 0.752, 0.7512, 0.7512, 0.7517, 0.752,  0.7511, 0.748, 0.7509, 0.7531, 0.7531, 0.7527, 0.7498, 0.7493, 0.7504, 0.75, 0.7491, 0.7491, 
				0.7485, 0.7484, 0.7492, 0.7471, 0.7459, 0.7477, 0.7477, 0.7483, 0.7458, 0.7448, 0.743, 0.7399,  0.7395, 0.7395, 0.7378, 0.7382, 0.7362, 0.7355, 0.7348, 0.7361, 0.7361, 0.7365, 0.7362, 
				0.7331, 0.7339, 0.7344, 0.7327, 0.7327, 0.7336, 0.7333, 0.7359, 0.7359, 0.7372, 0.736, 0.736, 0.735, 0.7365, 0.7384, 0.7395, 0.7413, 0.7397, 0.7396, 0.7385, 0.7378, 0.7366, 0.74, 0.7411,
				0.7406, 0.7405, 0.7414, 0.7431, 0.7431, 0.7438, 0.7443, 0.7443, 0.7443, 0.7434, 0.7429, 0.7442, 0.744, 0.7439, 0.7437, 0.7437, 0.7429, 0.7403, 0.7399, 0.7418, 0.7468, 0.748, 0.748, 0.749, 
				0.7494, 0.7522, 0.7515, 0.7502, 0.7472, 0.7472, 0.7462, 0.7455, 0.7449, 0.7467, 0.7458, 0.7427, 0.7427, 0.743, 0.7429, 0.744, 0.743, 0.7422, 0.7388, 0.7388, 0.7369, 0.7345, 0.7345, 0.7345,
				0.7352, 0.7341, 0.7341, 0.734, 0.7324, 0.7272, 0.7264, 0.7255, 0.7258, 0.7258, 0.7256, 0.7257, 0.7247, 0.7243, 0.7244, 0.7235, 0.7235, 0.7235, 0.7235, 0.7262, 0.7288, 0.7301, 0.7337, 0.7337,
				0.7324, 0.7297, 0.7317, 0.7315, 0.7288, 0.7263, 0.7263, 0.7242, 0.7253, 0.7264, 0.727, 0.7312, 0.7305, 0.7305, 0.7318, 0.7358, 0.7409, 0.7454, 0.7437, 0.7424, 0.7424, 0.7415, 0.7419, 0.7414, 
				0.7377, 0.7355, 0.7315, 0.7315, 0.732, 0.7332, 0.7346, 0.7328, 0.7323, 0.734, 0.734, 0.7336, 0.7351, 0.7346, 0.7321, 0.7294, 0.7266, 0.7266, 0.7254, 0.7242, 0.7213, 0.7197, 0.7209, 0.721, 
				0.721, 0.721, 0.7209, 0.7159, 0.7133, 0.7105, 0.7099, 0.7099, 0.7093, 0.7093, 0.7076, 0.707, 0.7049, 0.7012, 0.7011, 0.7019, 0.7046, 0.7063, 0.7089, 0.7077, 0.7077, 0.7077, 0.7091, 0.7118, 
				0.7079, 0.7053, 0.705, 0.7055, 0.7055, 0.7045, 0.7051, 0.7051, 0.7017, 0.7, 0.6995, 0.6994, 0.7014, 0.7036, 0.7021, 0.7002, 0.6967, 0.695, 0.695, 0.6939, 0.694, 0.6922, 0.6919, 0.6914,
				0.6894, 0.6891, 0.6904, 0.689, 0.6834, 0.6823, 0.6807, 0.6815, 0.6815, 0.6847, 0.6859, 0.6822, 0.6827, 0.6837, 0.6823, 0.6822, 
				0.6822, 0.6792, 0.6746, 0.6735, 0.6731, 0.6742, 0.6744, 0.6739, 0.6731, 0.6761, 0.6761, 0.6785, 0.6818, 0.6836, 0.6823, 0.6805, 0.6793, 0.6849, 0.6833, 0.6825, 0.6825, 0.6816, 0.6799, 0.6813, 
				0.6809, 0.6868, 0.6933, 0.6933, 0.6945, 0.6944, 0.6946, 0.6964, 0.6965, 0.6956, 0.6956, 0.695, 0.6948, 0.6928, 0.6887, 0.6824, 0.6794, 0.6794, 0.6803, 0.6855, 0.6824, 0.6791, 0.6783, 0.6785, 
				0.6785, 0.6797, 0.68, 0.6803, 0.6805, 0.676, 0.677, 0.677, 0.6736, 0.6726, 0.6764, 0.6821, 0.6831, 0.6842, 0.6842, 0.6887, 0.6903, 0.6848, 0.6824, 0.6788, 0.6814, 0.6814, 0.6797, 0.6769, 
				0.6765, 0.6733, 0.6729, 0.6758, 0.6758, 0.675, 0.678, 0.6833, 0.6856, 0.6903, 0.6896, 0.6896, 0.6882, 0.6879, 0.6862, 0.6852, 0.6823, 0.6813, 0.6813, 0.6822, 0.6802, 0.6802, 0.6784, 0.6748, 
				0.6747, 0.6747, 0.6748, 0.6733, 0.665, 0.6611, 0.6583, 0.659, 0.659, 0.6581, 0.6578, 0.6574, 0.6532, 0.6502, 0.6514, 0.6514, 0.6507, 0.651, 0.6489, 0.6424, 0.6406, 0.6382, 0.6382, 0.6341, 
				0.6344, 0.6378, 0.6439, 0.6478, 0.6481, 0.6481, 0.6494, 0.6438, 0.6377, 0.6329, 0.6336, 0.6333, 0.6333, 0.633, 0.6371, 0.6403, 0.6396, 0.6364, 0.6356, 0.6356, 0.6368, 0.6357, 0.6354, 0.632,
				0.6332, 0.6328, 0.6331, 0.6342, 0.6321, 0.6302, 0.6278, 0.6308, 0.6324, 0.6324, 0.6307, 0.6277, 0.6269, 0.6335, 0.6392, 0.64, 0.6401, 0.6396, 0.6407, 0.6423, 0.6429, 0.6472, 0.6485, 0.6486,
				0.6467, 0.6444, 0.6467, 0.6509, 0.6478, 0.6461, 0.6461, 0.6468, 0.6449, 0.647, 0.6461, 0.6452, 0.6422, 0.6422, 0.6425, 0.6414, 0.6366, 0.6346, 0.635, 0.6346, 0.6346, 0.6343, 0.6346, 0.6379, 
				0.6416, 0.6442, 0.6431, 0.6431, 0.6435, 0.644, 0.6473, 0.6469, 0.6386, 0.6356, 0.634, 0.6346, 0.643, 0.6452, 0.6467, 0.6506, 0.6504, 0.6503, 0.6481, 0.6451, 0.645, 0.6441, 0.6414, 0.6409,
				0.6409, 0.6428, 0.6431, 0.6418, 0.6371, 0.6349, 0.6333, 0.6334, 0.6338, 0.6342, 0.632, 0.6318, 0.637, 0.6368, 0.6368, 0.6383, 0.6371, 0.6371, 0.6355, 0.632, 0.6277, 0.6276, 0.6291, 0.6274,
		}; 
		
		//Setting Start Date
		long ii=getDateTime(&quot;2006-01-01 00:00:00 GMT&quot;);
		
		for (int i = 0;i&lt;dataChartTab4.length;i++){
			dataChartModel4.addValue(&quot;USD to EUR&quot;, ii++, dataChartTab4[i]);
			ii += 86400000;// A day =  getDateTime(&quot;2006-01-02 00:00:00 GMT&quot;) - getDateTime(&quot;2006-01-01 00:00:00 GMT&quot;)
		}
			
			
	}
	
	@Override
	public void onEvent(Event arg0) throws Exception {
		// TODO Auto-generated method stub
		
	}
	
	/**
	 * internal method to convert date&amp;amp;time from string to epoch milliseconds
	 * 
	 * @param date
	 * @return
	 * @throws Exception
	 */
	private long getDateTime(String date) throws Exception {
		return sdf.parse(date).getTime();
	}

}
 </pre>]]></html></tabpanel>
			</tabpanels>
			</tabbox>
		</groupbox>
		<groupbox mold="3d" width="100%" open="false">
			<caption label="Spline with inverted axes" />
			<tabbox>
				<tabs>
					<tab label="Overview" />
					<tab label="demo.zul" />
					<tab label="DemoComposer.java" />
				</tabs>
				<tabpanels>
					<tabpanel><zhighcharts id="chartComp6" /></tabpanel>
					<tabpanel><html><![CDATA[ 
						<pre class="brush:xml">
&lt;window title=&quot;Spline with inverted axes&quot; border=&quot;normal&quot; width=&quot;100%&quot;
	use=&quot;ctrl.DemoComposer&quot;&gt;
	&lt;zhighcharts id=&quot;chartComp6&quot; /&gt;
&lt;/window&gt;
						</pre>]]></html>
					</tabpanel>
					<tabpanel><html><![CDATA[ <pre class="brush:java">
package ctrl;

import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.HashMap;
import java.util.Map;

import org.ngi.zhighcharts.SimpleExtXYModel;
import org.ngi.zhighcharts.ZHighCharts;
import org.zkoss.util.logging.Log;
import org.zkoss.zk.ui.event.Event;
import org.zkoss.zk.ui.event.EventListener;
import org.zkoss.zul.SimplePieModel;
import org.zkoss.zul.Window;

public class DemoComposer extends Window implements EventListener {
	protected Log logger = Log.lookup(this.getClass());
	
	//Spline with inverted axes
	private ZHighCharts chartComp6;
	private SimpleExtXYModel dataChartModel6 = new SimpleExtXYModel();	

	// date format used to capture date time
	private SimpleDateFormat sdf = new SimpleDateFormat(&quot;yyyy-MM-dd HH:mm:ss z&quot;);
	
	public void onCreate() throws Exception {

		//================================================================================
	    // Spline with inverted axes
	    //================================================================================
		
		chartComp6 = (ZHighCharts) getFellow(&quot;chartComp6&quot;);
		chartComp6.setType(&quot;spline&quot;);
		chartComp6.setOptions(&quot;{&quot; +
				&quot;inverted:true,&quot; +
				&quot;width: 500,&quot; +
				&quot;style: {&quot; +
					&quot;margin: '0 auto'&quot; +
					&quot;}&quot; +
				&quot;}&quot;);
		chartComp6.setTitle(&quot;Atmosphere Temperature by Altitude&quot;);
		chartComp6.setSubTitle(&quot;According to the Standard Atmosphere Model&quot;);
		chartComp6.setxAxisOptions(&quot;{&quot; +
					&quot;reversed:false,&quot; +
					&quot;labels: {&quot; +
						&quot;formatter: function() {&quot; +
							&quot;return this.value +'km';&quot; +
						&quot;}&quot; +
					&quot;},&quot; +
					&quot;maxPadding: 0.05,&quot; +
					&quot;showLastLabel: true&quot; +
				&quot;}&quot;);
		chartComp6.setyAxisOptions(&quot;{&quot; +
					&quot;labels: {&quot; +
						&quot;formatter: function() {&quot; +
							&quot;return this.value + '&#x00b0;';&quot; +
						&quot;}&quot; +
					&quot;},&quot; +
					&quot;lineWidth: 2&quot; +
				&quot;}&quot;);
		chartComp6.setTooltipFormatter(&quot;function formatTooltip(obj){&quot; +
					&quot;return ''+obj.x +' km: '+ obj.y +'&#x00b0;C';&quot; +
				&quot;}&quot;);
		chartComp6.setPlotOptions(&quot;{&quot; +
					&quot;spline: {&quot; +
						&quot;marker: {&quot; +
							&quot;enable: false&quot; +
						&quot;}&quot; +
					&quot;}&quot; +
				&quot;}&quot;);
		chartComp6.setLegend(&quot;{&quot; +
					&quot;enabled: false&quot; +
				&quot;}&quot;);
		chartComp6.setXAxisTitle(&quot;Altitude&quot;);
		chartComp6.setYAxisTitle(&quot;Temperature&quot;);
		
		chartComp6.setModel(dataChartModel6);
		
		//Adding some data to the model

		dataChartModel6.addValue(&quot;Temperature&quot;, 0, 15);
		dataChartModel6.addValue(&quot;Temperature&quot;, 10, -50);
		dataChartModel6.addValue(&quot;Temperature&quot;, 20, -56.5);
		dataChartModel6.addValue(&quot;Temperature&quot;, 30, -46.5);
		dataChartModel6.addValue(&quot;Temperature&quot;, 40, -22.1);
		dataChartModel6.addValue(&quot;Temperature&quot;, 50, -2.5);
		dataChartModel6.addValue(&quot;Temperature&quot;, 60, -27.7);
		dataChartModel6.addValue(&quot;Temperature&quot;, 70, -55.7);
		dataChartModel6.addValue(&quot;Temperature&quot;, 80, -76.5);
			
			
	}
	
	@Override
	public void onEvent(Event arg0) throws Exception {
		// TODO Auto-generated method stub
		
	}
	
	/**
	 * internal method to convert date&amp;amp;time from string to epoch milliseconds
	 * 
	 * @param date
	 * @return
	 * @throws Exception
	 */
	private long getDateTime(String date) throws Exception {
		return sdf.parse(date).getTime();
	}

}
 </pre>]]></html></tabpanel>
			</tabpanels>
			</tabbox>
		</groupbox>		
		<groupbox mold="3d" width="100%" open="false">
			<caption label="Spline with symbols" />
			<tabbox>
				<tabs>
					<tab label="Overview" />
					<tab label="demo.zul" />
					<tab label="DemoComposer.java" />
				</tabs>
				<tabpanels>
					<tabpanel><zhighcharts id="chartComp7" /></tabpanel>
					<tabpanel><html><![CDATA[ 
						<pre class="brush:xml">
&lt;window title=&quot;Spline with symbols&quot; border=&quot;normal&quot; width=&quot;100%&quot;
	use=&quot;ctrl.DemoComposer&quot;&gt;
	&lt;zhighcharts id=&quot;chartComp7&quot; /&gt;
&lt;/window&gt;
						</pre>]]></html>
					</tabpanel>
					<tabpanel><html><![CDATA[ <pre class="brush:java">
package ctrl;

import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.HashMap;
import java.util.Map;

import org.ngi.zhighcharts.SimpleExtXYModel;
import org.ngi.zhighcharts.ZHighCharts;
import org.zkoss.util.logging.Log;
import org.zkoss.zk.ui.event.Event;
import org.zkoss.zk.ui.event.EventListener;
import org.zkoss.zul.SimplePieModel;
import org.zkoss.zul.Window;

public class DemoComposer extends Window implements EventListener {
	protected Log logger = Log.lookup(this.getClass());
	
	//Spline with symbols
	private ZHighCharts chartComp7;
	private SimpleExtXYModel dataChartModel7 = new SimpleExtXYModel();	

	// date format used to capture date time
	private SimpleDateFormat sdf = new SimpleDateFormat(&quot;yyyy-MM-dd HH:mm:ss z&quot;);
	
	public void onCreate() throws Exception {

		//================================================================================
	    // Spline with symbols
	    //================================================================================
		
		
		chartComp7 = (ZHighCharts) getFellow(&quot;chartComp7&quot;);
		chartComp7.setType(&quot;spline&quot;);
		chartComp7.setTitle(&quot;Monthly Average Temperature&quot;);
		chartComp7.setSubTitle(&quot;Source: WorldClimate.com&quot;);
		chartComp7.setxAxisOptions(&quot;{ &quot; +
					&quot;categories: ['&quot; +
						&quot;Jan', &quot; +
						&quot;'Feb', &quot; +
						&quot;'Mar', &quot; +
						&quot;'Apr', &quot; +
						&quot;'May', &quot; +
						&quot;'Jun', &quot; +
						&quot;'Jul', &quot; +
						&quot;'Aug', &quot; +
						&quot;'Sep', &quot; +
						&quot;'Oct', &quot; +
						&quot;'Nov', &quot; +
						&quot;'Dec'&quot; +
					&quot;]&quot; +
				&quot;}&quot;);
		chartComp7.setyAxisOptions(&quot;{&quot; +
					&quot;labels: {&quot; +
						&quot;formatter: function() {&quot; +
							&quot;return this.value +'&#x00b0;';&quot; +
						&quot;}&quot; +
					&quot;}&quot; +
				&quot;}&quot;);
		chartComp7.setTooltipFormatter(&quot;function formatTooltip(obj){&quot; +
					&quot;return '' + obj.x + '&lt;br/&gt;&quot; +
					&quot;&lt;span style=\&quot;color:'+ obj.points[0].series.color +';\&quot;&gt;'+ obj.points[0].series.name +'&lt;/span&gt; : &lt;b&gt;'+ obj.points[0].y +'&lt;/b&gt;&lt;br/&gt;&quot; +
					&quot;&lt;span style=\&quot;color:'+ obj.points[1].series.color +';\&quot;&gt;'+ obj.points[1].series.name +'&lt;/span&gt; : &lt;b&gt;'+ obj.points[1].y +'&lt;/b&gt;';&quot; +
				&quot;}&quot;);
		chartComp7.setTooltipOptions(&quot;{&quot; +
					&quot;crosshairs: true,&quot; +
					&quot;shared: true&quot; +
				&quot;}&quot;);
		chartComp7.setPlotOptions(&quot;{&quot; +
					&quot;spline: {&quot; +
						&quot;marker: {&quot; +
							&quot;radius: 4,&quot; +
							&quot;lineColor: '#666666',&quot; +
							&quot;lineWidth: 1&quot; +
						&quot;}&quot; +
					&quot;}&quot; +
				&quot;}&quot;);
		chartComp7.setYAxisTitle(&quot;Temperature&quot;);

		chartComp7.setModel(dataChartModel7);

		//Adding some data to the model

		dataChartModel7.addValue(&quot;Tokyo&quot;, 0, 7);
		dataChartModel7.addValue(&quot;Tokyo&quot;, 1, 6.9);
		dataChartModel7.addValue(&quot;Tokyo&quot;, 2, 9.5);
		dataChartModel7.addValue(&quot;Tokyo&quot;, 3, 14.5);
		dataChartModel7.addValue(&quot;Tokyo&quot;, 4, 18.2);
		dataChartModel7.addValue(&quot;Tokyo&quot;, 5, 21.5);
		dataChartModel7.addValue(&quot;Tokyo&quot;, 6, 25.2);
		
		Map data = new HashMap();
		marker = new HashMap();
		marker.put(&quot;symbol&quot;, &quot;url(http://www.highcharts.com/demo/gfx/sun.png)&quot;);
		data.put(&quot;marker&quot;, marker);
		dataChartModel7.addValue(&quot;Tokyo&quot;, 7, 26.5, data);
		
		dataChartModel7.addValue(&quot;Tokyo&quot;, 8, 23.3);
		dataChartModel7.addValue(&quot;Tokyo&quot;, 9, 18.3);
		dataChartModel7.addValue(&quot;Tokyo&quot;, 10, 13.9);
		dataChartModel7.addValue(&quot;Tokyo&quot;, 11, 9.6);

		data = new HashMap();
		marker = new HashMap();
		marker.put(&quot;symbol&quot;, &quot;url(http://www.highcharts.com/demo/gfx/snow.png)&quot;);
		data.put(&quot;marker&quot;, marker);
		
		dataChartModel7.addValue(&quot;London&quot;, 0, 3.9, data);
		dataChartModel7.addValue(&quot;London&quot;, 1, 4.2);
		dataChartModel7.addValue(&quot;London&quot;, 2, 5.7);
		dataChartModel7.addValue(&quot;London&quot;, 3, 8.5);
		dataChartModel7.addValue(&quot;London&quot;, 4, 11.9);
		dataChartModel7.addValue(&quot;London&quot;, 5, 15.2);
		dataChartModel7.addValue(&quot;London&quot;, 6, 17.0);
		dataChartModel7.addValue(&quot;London&quot;, 7, 16.6);
		dataChartModel7.addValue(&quot;London&quot;, 8, 14.2);
		dataChartModel7.addValue(&quot;London&quot;, 9, 10.3);
		dataChartModel7.addValue(&quot;London&quot;, 10, 6.6);
		dataChartModel7.addValue(&quot;London&quot;, 11, 4.8);
		
		style = new HashMap();
		marker = new HashMap();
		marker.put(&quot;symbol&quot;, &quot;square&quot;);
		style.put(&quot;marker&quot;, marker);
		chartComp7.setSeriesOptions(&quot;Tokyo&quot;, style);
		
		style = new HashMap();
		marker = new HashMap();
		marker.put(&quot;symbol&quot;, &quot;diamond&quot;);
		style.put(&quot;marker&quot;, marker);
		chartComp7.setSeriesOptions(&quot;London&quot;, style);
			
			
	}
	
	@Override
	public void onEvent(Event arg0) throws Exception {
		// TODO Auto-generated method stub
		
	}
	
	/**
	 * internal method to convert date&amp;amp;time from string to epoch milliseconds
	 * 
	 * @param date
	 * @return
	 * @throws Exception
	 */
	private long getDateTime(String date) throws Exception {
		return sdf.parse(date).getTime();
	}

}
 </pre>]]></html></tabpanel>
			</tabpanels>
			</tabbox>
		</groupbox>	
		<groupbox mold="3d" width="100%" open="false">
			<caption label="Spline with plot bands" />
			<tabbox>
				<tabs>
					<tab label="Overview" />
					<tab label="demo.zul" />
					<tab label="DemoComposer.java" />
				</tabs>
				<tabpanels>
					<tabpanel><zhighcharts id="chartComp8" /></tabpanel>
					<tabpanel><html><![CDATA[ 
						<pre class="brush:xml">
&lt;window title=&quot;Spline with plot bands&quot; border=&quot;normal&quot; width=&quot;100%&quot;
	use=&quot;ctrl.DemoComposer&quot;&gt;
	&lt;zhighcharts id=&quot;chartComp8&quot; /&gt;
&lt;/window&gt;
						</pre>]]></html>
					</tabpanel>
					<tabpanel><html><![CDATA[ <pre class="brush:java">
package ctrl;

import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.HashMap;
import java.util.Map;

import org.ngi.zhighcharts.SimpleExtXYModel;
import org.ngi.zhighcharts.ZHighCharts;
import org.zkoss.util.logging.Log;
import org.zkoss.zk.ui.event.Event;
import org.zkoss.zk.ui.event.EventListener;
import org.zkoss.zul.SimplePieModel;
import org.zkoss.zul.Window;

public class DemoComposer extends Window implements EventListener {
	protected Log logger = Log.lookup(this.getClass());
	
	//Spline with plot bands
	private ZHighCharts chartComp8;
	private SimpleExtXYModel dataChartModel8 = new SimpleExtXYModel();	

	// date format used to capture date time
	private SimpleDateFormat sdf = new SimpleDateFormat(&quot;yyyy-MM-dd HH:mm:ss z&quot;);
	
	public void onCreate() throws Exception {

		//================================================================================
	    // Spline with plot bands
	    //================================================================================

		
		chartComp8 = (ZHighCharts) getFellow(&quot;chartComp8&quot;);
		chartComp8.setType(&quot;spline&quot;);
		chartComp8.setTitle(&quot;Wind speed during two days&quot;);
		chartComp8.setSubTitle(&quot;October 6th and 7th 2009 at two locations in Vik i Sogn, Norway&quot;);
		chartComp8.setxAxisOptions(&quot;{&quot; +
					&quot;type:'datetime'&quot; +
				&quot;}&quot;);
		chartComp8.setyAxisOptions(&quot;{&quot; +
					&quot;min:0, &quot; +
					&quot;minorGridLineWidth:0, &quot; +
					&quot;gridLineWidth:0, &quot; +
					&quot;alternateGridColor:null, &quot; +
					&quot;plotBands:[&quot; +
						&quot;{ &quot; +
							&quot;from:0.3, &quot; +
							&quot;to:1.5, &quot; +
							&quot;color:'rgba(68,170,213,0.1)', &quot; +
							&quot;label:{ &quot; +
								&quot;text:'Lightair', &quot; +
								&quot;style:{ &quot; +
									&quot;color:'#606060' &quot; +
								&quot;} &quot; +
							&quot;} &quot; +
						&quot;},&quot; +
						&quot;{ &quot; +
							&quot;from:1.5, &quot; +
							&quot;to:3.3, &quot; +
							&quot;color:'rgba(0,0,0,0)', &quot; +
							&quot;label:{ &quot; +
								&quot;text:'Lightbreeze', &quot; +
								&quot;style:{ &quot; +
									&quot;color:'#606060' &quot; +
								&quot;} &quot; +
							&quot;} &quot; +
						&quot;},&quot; +
						&quot;{ &quot; +
							&quot;from:3.3, &quot; +
							&quot;to:5.5, &quot; +
							&quot;color:'rgba(68,170,213,0.1)', &quot; +
							&quot;label:{ &quot; +
								&quot;text:'Gentlebreeze', &quot; +
								&quot;style:{ &quot; +
									&quot;color:'#606060' &quot; +
								&quot;} &quot; +
							&quot;} &quot; +
						&quot;},&quot; +
						&quot;{ &quot; +
							&quot;from:5.5, &quot; +
							&quot;to:8, &quot; +
							&quot;color:'rgba(0,0,0,0)', &quot; +
							&quot;label:{ &quot; +
								&quot;text:'Moderatebreeze', &quot; +
								&quot;style:{ &quot; +
									&quot;color:'#606060' &quot; +
								&quot;} &quot; +
							&quot;} &quot; +
						&quot;},&quot; +
						&quot;{ &quot; +
							&quot;from:8, &quot; +
							&quot;to:11, &quot; +
							&quot;color:'rgba(68,170,213,0.1)',&quot; +
							&quot;label:{ &quot; +
								&quot;text:'Freshbreeze', &quot; +
								&quot;style:{ &quot; +
									&quot;color:'#606060' &quot; +
								&quot;} &quot; +
							&quot;} &quot; +
						&quot;},&quot; +
						&quot;{ &quot; +
							&quot;from:11, &quot; +
							&quot;to:14, &quot; +
							&quot;color: 'rgba(0, 0, 0, 0)',&quot; +
							&quot;label: {&quot; +
								&quot;text: 'Strong breeze',&quot; +
								&quot;style: {&quot; +
									&quot;color: '#606060'&quot; +
								&quot;}&quot; +
							&quot;} &quot; +
						&quot;}, &quot; +
						&quot;{&quot; +
							&quot;from: 14,&quot; +
							&quot;to: 15,&quot; +
							&quot;color: 'rgba(68, 170, 213, 0.1)',&quot; +
							&quot;label: {&quot; +
								&quot;text: 'High wind',&quot; +
								&quot;style: {&quot; +
									&quot;color: '#606060'&quot; +
								&quot;}&quot; +
							&quot;}&quot; +
						&quot;}&quot; +
					&quot;]&quot; +
				&quot;}&quot;);
		chartComp8.setTooltipFormatter(&quot;function formatTooltip(obj){&quot; +
					&quot;return ''+Highcharts.dateFormat('%e. %b %Y, %H:00', obj.x) +': '+ obj.y +' m/s';&quot; +
				&quot;}&quot;);
		chartComp8.setPlotOptions(&quot;{&quot; +
					&quot;spline: {&quot; +
						&quot;lineWidth: 4,&quot; +
						&quot;states: {&quot; +
							&quot;hover: {&quot; +
								&quot;lineWidth: 5&quot; +
							&quot;}&quot; +
						&quot;}, &quot; +
						&quot;marker: {&quot; +
							&quot;enabled: false,&quot; +
							&quot;states: { &quot; +
								&quot;hover: {&quot; +
									&quot;enabled: true, &quot; +
									&quot;symbol: 'circle',&quot; +
									&quot;radius: 5,&quot; +
									&quot;lineWidth: 1&quot; +
								&quot;}&quot; +
							&quot;}&quot; +
						&quot;}&quot; +
					&quot;}&quot; +
				&quot;}&quot;);
		chartComp8.setYAxisTitle(&quot;Wind speed (m/s)&quot;);
		
		chartComp8.setModel(dataChartModel8);
		
		//Adding some data to the model
		
		Number dataHestavollane[] = {4.3, 5.1, 4.3, 5.2, 5.4, 4.7, 3.5, 4.1, 5.6, 7.4, 6.9, 7.1,
                7.9, 7.9, 7.5, 6.7, 7.7, 7.7, 7.4, 7.0, 7.1, 5.8, 5.9, 7.4,
                8.2, 8.5, 9.4, 8.1, 10.9, 10.4, 10.9, 12.4, 12.1, 9.5, 7.5,
                7.1, 7.5, 8.1, 6.8, 3.4, 2.1, 1.9, 2.8, 2.9, 1.3, 4.4, 4.2,
                3.0, 3.0};
		Number dataVoll[] = {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.3, 0.0,
                0.0, 0.4, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                0.0, 0.6, 1.2, 1.7, 0.7, 2.9, 4.1, 2.6, 3.7, 3.9, 1.7, 2.3,
                3.0, 3.3, 4.8, 5.0, 4.8, 5.0, 3.2, 2.0, 0.9, 0.4, 0.3, 0.5, 0.4};
		
		//Start Point
		long iii = getDateTime(&quot;2009-10-06 00:00:00 GMT&quot;);;
		for (int i =0;i&lt;dataHestavollane.length;i++){
			dataChartModel8.addValue(&quot;Hestavollane&quot;, iii, dataHestavollane[i]);
			iii += 3600000; //Every Hour
		}
		
		//Start Point
		long jjj = getDateTime(&quot;2009-10-06 00:00:00 GMT&quot;);;
		for (int j =0;j&lt;dataVoll.length;j++){
			dataChartModel8.addValue(&quot;Voll&quot;, jjj, dataVoll[j]);
			jjj += 3600000;

		}		
			
			
	}
	
	@Override
	public void onEvent(Event arg0) throws Exception {
		// TODO Auto-generated method stub
		
	}
	
	/**
	 * internal method to convert date&amp;amp;time from string to epoch milliseconds
	 * 
	 * @param date
	 * @return
	 * @throws Exception
	 */
	private long getDateTime(String date) throws Exception {
		return sdf.parse(date).getTime();
	}

}
 </pre>]]></html></tabpanel>
			</tabpanels>
			</tabbox>
		</groupbox>	
		<groupbox mold="3d" width="100%" open="false">
			<caption label="Time data with irregular intervals" />
			<tabbox>
				<tabs>
					<tab label="Overview" />
					<tab label="demo.zul" />
					<tab label="DemoComposer.java" />
				</tabs>
				<tabpanels>
					<tabpanel><zhighcharts id="chartComp9" /></tabpanel>
					<tabpanel><html><![CDATA[ 
						<pre class="brush:xml">
&lt;window title=&quot;Time data with irregular intervals&quot; border=&quot;normal&quot; width=&quot;100%&quot;
	use=&quot;ctrl.DemoComposer&quot;&gt;
	&lt;zhighcharts id=&quot;chartComp9&quot; /&gt;
&lt;/window&gt;
						</pre>]]></html>
					</tabpanel>
					<tabpanel><html><![CDATA[ <pre class="brush:java">
package ctrl;

import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.HashMap;
import java.util.Map;

import org.ngi.zhighcharts.SimpleExtXYModel;
import org.ngi.zhighcharts.ZHighCharts;
import org.zkoss.util.logging.Log;
import org.zkoss.zk.ui.event.Event;
import org.zkoss.zk.ui.event.EventListener;
import org.zkoss.zul.SimplePieModel;
import org.zkoss.zul.Window;

public class DemoComposer extends Window implements EventListener {
	protected Log logger = Log.lookup(this.getClass());
	
	//Time data with irregular intervals
	private ZHighCharts chartComp9;
	private SimpleExtXYModel dataChartModel9 = new SimpleExtXYModel();		

	// date format used to capture date time
	private SimpleDateFormat sdf = new SimpleDateFormat(&quot;yyyy-MM-dd HH:mm:ss z&quot;);
	
	public void onCreate() throws Exception {

		//================================================================================
	    // Time data with irregular intervals
	    //================================================================================

		
		chartComp9 = (ZHighCharts) getFellow(&quot;chartComp9&quot;);
		chartComp9.setType(&quot;spline&quot;);
		chartComp9.setTitle(&quot;Snow depth in the Vikjafjellet mountain, Norway&quot;);
		chartComp9.setSubTitle(&quot;An example of irregular time data in Highcharts JS&quot;);
		chartComp9.setxAxisOptions(&quot;{&quot; +
					&quot;type:'datetime',&quot; +
					&quot;dateTimeLabelFormats: {&quot; +
						&quot;month: '%e. %b',year: '%b'&quot; +
					&quot;}&quot; +
				&quot;}&quot;);
		chartComp9.setyAxisOptions(&quot;{&quot; +
					&quot;min:0&quot; +
				&quot;}&quot;);
		chartComp9.setTooltipFormatter(&quot;function formatTooltip(obj){&quot; +
					&quot;return '&lt;b&gt;'+ obj.series.name +'&lt;/b&gt;&lt;br/&gt;'&quot; +
					&quot;+Highcharts.dateFormat('%e. %b', obj.x) +': '+ obj.y +' m';&quot; +
				&quot;}&quot;);
		chartComp9.setYAxisTitle(&quot;Snow depth (m)&quot;);
		
		chartComp9.setModel(dataChartModel9);
		
		//Adding some data to the model

		dataChartModel9.addValue(&quot;Winter 2007-2008&quot;, getDateTime(&quot;1970-10-27 00:00:00 GMT&quot;), 0);
		dataChartModel9.addValue(&quot;Winter 2007-2008&quot;, getDateTime(&quot;1970-11-10 00:00:00 GMT&quot;), 0.6);
		dataChartModel9.addValue(&quot;Winter 2007-2008&quot;, getDateTime(&quot;1970-11-18 00:00:00 GMT&quot;), 0.7);
		dataChartModel9.addValue(&quot;Winter 2007-2008&quot;, getDateTime(&quot;1970-12-02 00:00:00 GMT&quot;), 0.8);
		dataChartModel9.addValue(&quot;Winter 2007-2008&quot;, getDateTime(&quot;1970-12-09 00:00:00 GMT&quot;), 0.6);
		dataChartModel9.addValue(&quot;Winter 2007-2008&quot;, getDateTime(&quot;1970-12-16 00:00:00 GMT&quot;), 0.6);
		dataChartModel9.addValue(&quot;Winter 2007-2008&quot;, getDateTime(&quot;1970-12-28 00:00:00 GMT&quot;), 0.67);
		dataChartModel9.addValue(&quot;Winter 2007-2008&quot;, getDateTime(&quot;1971-01-01 00:00:00 GMT&quot;), 0.81);
		dataChartModel9.addValue(&quot;Winter 2007-2008&quot;, getDateTime(&quot;1971-01-08 00:00:00 GMT&quot;), 0.78);
		dataChartModel9.addValue(&quot;Winter 2007-2008&quot;, getDateTime(&quot;1971-01-12 00:00:00 GMT&quot;), 0.98);
		dataChartModel9.addValue(&quot;Winter 2007-2008&quot;, getDateTime(&quot;1971-01-27 00:00:00 GMT&quot;), 1.84);
		dataChartModel9.addValue(&quot;Winter 2007-2008&quot;, getDateTime(&quot;1971-02-10 00:00:00 GMT&quot;), 1.80);
		dataChartModel9.addValue(&quot;Winter 2007-2008&quot;, getDateTime(&quot;1971-02-18 00:00:00 GMT&quot;), 1.80);
		dataChartModel9.addValue(&quot;Winter 2007-2008&quot;, getDateTime(&quot;1971-02-24 00:00:00 GMT&quot;), 1.92);
		dataChartModel9.addValue(&quot;Winter 2007-2008&quot;, getDateTime(&quot;1971-03-04 00:00:00 GMT&quot;), 2.49);
		dataChartModel9.addValue(&quot;Winter 2007-2008&quot;, getDateTime(&quot;1971-03-11 00:00:00 GMT&quot;), 2.79);
		dataChartModel9.addValue(&quot;Winter 2007-2008&quot;, getDateTime(&quot;1971-03-15 00:00:00 GMT&quot;), 2.73);
		dataChartModel9.addValue(&quot;Winter 2007-2008&quot;, getDateTime(&quot;1971-03-25 00:00:00 GMT&quot;), 2.61);
		dataChartModel9.addValue(&quot;Winter 2007-2008&quot;, getDateTime(&quot;1971-04-02 00:00:00 GMT&quot;), 2.76);
		dataChartModel9.addValue(&quot;Winter 2007-2008&quot;, getDateTime(&quot;1971-04-06 00:00:00 GMT&quot;), 2.82);
		dataChartModel9.addValue(&quot;Winter 2007-2008&quot;, getDateTime(&quot;1971-04-13 00:00:00 GMT&quot;), 2.8);
		dataChartModel9.addValue(&quot;Winter 2007-2008&quot;, getDateTime(&quot;1971-05-03 00:00:00 GMT&quot;), 2.1);
		dataChartModel9.addValue(&quot;Winter 2007-2008&quot;, getDateTime(&quot;1971-05-26 00:00:00 GMT&quot;), 1.1);
		dataChartModel9.addValue(&quot;Winter 2007-2008&quot;, getDateTime(&quot;1971-06-09 00:00:00 GMT&quot;), 0.25);
		dataChartModel9.addValue(&quot;Winter 2007-2008&quot;, getDateTime(&quot;1971-06-12 00:00:00 GMT&quot;), 0);
		
		dataChartModel9.addValue(&quot;Winter 2008-2009&quot;, getDateTime(&quot;1970-10-18 00:00:00 GMT&quot;), 0);
		dataChartModel9.addValue(&quot;Winter 2008-2009&quot;, getDateTime(&quot;1970-10-26 00:00:00 GMT&quot;), 0.2);
		dataChartModel9.addValue(&quot;Winter 2008-2009&quot;, getDateTime(&quot;1970-12-01 00:00:00 GMT&quot;), 0.47);
		dataChartModel9.addValue(&quot;Winter 2008-2009&quot;, getDateTime(&quot;1970-12-11 00:00:00 GMT&quot;), 0.55);
		dataChartModel9.addValue(&quot;Winter 2008-2009&quot;, getDateTime(&quot;1970-12-25 00:00:00 GMT&quot;), 1.38);
		dataChartModel9.addValue(&quot;Winter 2008-2009&quot;, getDateTime(&quot;1971-01-08 00:00:00 GMT&quot;), 1.38);
		dataChartModel9.addValue(&quot;Winter 2008-2009&quot;, getDateTime(&quot;1971-01-15 00:00:00 GMT&quot;), 1.38);
		dataChartModel9.addValue(&quot;Winter 2008-2009&quot;, getDateTime(&quot;1971-01-01 00:00:00 GMT&quot;), 1.38);
		dataChartModel9.addValue(&quot;Winter 2008-2009&quot;, getDateTime(&quot;1971-02-08 00:00:00 GMT&quot;), 1.48);
		dataChartModel9.addValue(&quot;Winter 2008-2009&quot;, getDateTime(&quot;1971-02-21 00:00:00 GMT&quot;), 1.5);
		dataChartModel9.addValue(&quot;Winter 2008-2009&quot;, getDateTime(&quot;1971-03-12 00:00:00 GMT&quot;), 1.89);
		dataChartModel9.addValue(&quot;Winter 2008-2009&quot;, getDateTime(&quot;1971-03-25 00:00:00 GMT&quot;), 2.0);
		dataChartModel9.addValue(&quot;Winter 2008-2009&quot;, getDateTime(&quot;1971-04-04 00:00:00 GMT&quot;), 1.94);
		dataChartModel9.addValue(&quot;Winter 2008-2009&quot;, getDateTime(&quot;1971-04-09 00:00:00 GMT&quot;), 1.91);
		dataChartModel9.addValue(&quot;Winter 2008-2009&quot;, getDateTime(&quot;1971-04-13 00:00:00 GMT&quot;), 1.75);
		dataChartModel9.addValue(&quot;Winter 2008-2009&quot;, getDateTime(&quot;1971-04-19 00:00:00 GMT&quot;), 1.6);
		dataChartModel9.addValue(&quot;Winter 2008-2009&quot;, getDateTime(&quot;1971-05-25 00:00:00 GMT&quot;), 0.6);
		dataChartModel9.addValue(&quot;Winter 2008-2009&quot;, getDateTime(&quot;1971-05-31 00:00:00 GMT&quot;), 0.35);
		dataChartModel9.addValue(&quot;Winter 2008-2009&quot;, getDateTime(&quot;1971-06-07 00:00:00 GMT&quot;), 0);
		
		dataChartModel9.addValue(&quot;Winter 2009-2010&quot;, getDateTime(&quot;1970-10-09 00:00:00 GMT&quot;), 0);
		dataChartModel9.addValue(&quot;Winter 2009-2010&quot;, getDateTime(&quot;1970-10-14 00:00:00 GMT&quot;), 0.15);
		dataChartModel9.addValue(&quot;Winter 2009-2010&quot;, getDateTime(&quot;1970-11-28 00:00:00 GMT&quot;), 0.35);
		dataChartModel9.addValue(&quot;Winter 2009-2010&quot;, getDateTime(&quot;1970-12-12 00:00:00 GMT&quot;), 0.46);
		dataChartModel9.addValue(&quot;Winter 2009-2010&quot;, getDateTime(&quot;1971-01-01 00:00:00 GMT&quot;), 0.59);
		dataChartModel9.addValue(&quot;Winter 2009-2010&quot;, getDateTime(&quot;1971-01-24 00:00:00 GMT&quot;), 0.58);
		dataChartModel9.addValue(&quot;Winter 2009-2010&quot;, getDateTime(&quot;1971-02-01 00:00:00 GMT&quot;), 0.62);
		dataChartModel9.addValue(&quot;Winter 2009-2010&quot;, getDateTime(&quot;1971-02-07 00:00:00 GMT&quot;), 0.65);
		dataChartModel9.addValue(&quot;Winter 2009-2010&quot;, getDateTime(&quot;1971-02-23 00:00:00 GMT&quot;), 0.77);
		dataChartModel9.addValue(&quot;Winter 2009-2010&quot;, getDateTime(&quot;1971-03-08 00:00:00 GMT&quot;), 0.77);
		dataChartModel9.addValue(&quot;Winter 2009-2010&quot;, getDateTime(&quot;1971-03-14 00:00:00 GMT&quot;), 0.79);
		dataChartModel9.addValue(&quot;Winter 2009-2010&quot;, getDateTime(&quot;1971-03-24 00:00:00 GMT&quot;), 0.86);
		dataChartModel9.addValue(&quot;Winter 2009-2010&quot;, getDateTime(&quot;1971-04-04 00:00:00 GMT&quot;), 0.8);
		dataChartModel9.addValue(&quot;Winter 2009-2010&quot;, getDateTime(&quot;1971-04-18 00:00:00 GMT&quot;), 0.94);
		dataChartModel9.addValue(&quot;Winter 2009-2010&quot;, getDateTime(&quot;1971-04-24 00:00:00 GMT&quot;), 0.9);
		dataChartModel9.addValue(&quot;Winter 2009-2010&quot;, getDateTime(&quot;1971-05-16 00:00:00 GMT&quot;), 0.39);
		dataChartModel9.addValue(&quot;Winter 2009-2010&quot;, getDateTime(&quot;1971-05-21 00:00:00 GMT&quot;), 0.6);
		
	
	}
	
	@Override
	public void onEvent(Event arg0) throws Exception {
		// TODO Auto-generated method stub
		
	}
	
	/**
	 * internal method to convert date&amp;amp;time from string to epoch milliseconds
	 * 
	 * @param date
	 * @return
	 * @throws Exception
	 */
	private long getDateTime(String date) throws Exception {
		return sdf.parse(date).getTime();
	}

}
 </pre>]]></html></tabpanel>
			</tabpanels>
			</tabbox>
		</groupbox>
		<groupbox mold="3d" width="100%" open="false">
			<caption label="Logarithmic axis" />
			<tabbox>
				<tabs>
					<tab label="Overview" />
					<tab label="demo.zul" />
					<tab label="DemoComposer.java" />
				</tabs>
				<tabpanels>
					<tabpanel><zhighcharts id="chartComp10" /></tabpanel>
					<tabpanel><html><![CDATA[ 
					<pre class="brush:xml">
&lt;window title=&quot;Logarithmic axis&quot; border=&quot;normal&quot; width=&quot;100%&quot;
	use=&quot;ctrl.DemoComposer&quot;&gt;
	&lt;zhighcharts id=&quot;chartComp10&quot; /&gt;
&lt;/window&gt;
						</pre>]]></html>
					</tabpanel>
					<tabpanel><html><![CDATA[ <pre class="brush:java">
package ctrl;

import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.HashMap;
import java.util.Map;

import org.ngi.zhighcharts.SimpleExtXYModel;
import org.ngi.zhighcharts.ZHighCharts;
import org.zkoss.util.logging.Log;
import org.zkoss.zk.ui.event.Event;
import org.zkoss.zk.ui.event.EventListener;
import org.zkoss.zul.SimplePieModel;
import org.zkoss.zul.Window;

public class DemoComposer extends Window implements EventListener {
	protected Log logger = Log.lookup(this.getClass());
	
	//Logarithmic axis
	private ZHighCharts chartComp10;
	private SimpleExtXYModel dataChartModel10 = new SimpleExtXYModel();
		

	// date format used to capture date time
	private SimpleDateFormat sdf = new SimpleDateFormat(&quot;yyyy-MM-dd HH:mm:ss z&quot;);
	
	public void onCreate() throws Exception {

		//================================================================================
	    // Logarithmic axis
	    //================================================================================


		chartComp10 = (ZHighCharts) getFellow(&quot;chartComp10&quot;);
		chartComp10.setType(&quot;line&quot;);
		chartComp10.setTitle(&quot;Logarithmic axis demo&quot;);
		chartComp10.setxAxisOptions(&quot;{&quot; +
					&quot;tickInterval: 1&quot; +
				&quot;}&quot;);
		chartComp10.setyAxisOptions(&quot;{&quot; +
					&quot;type: 'logarithmic', &quot; +
					&quot;minorTickInterval: 0.1&quot; +
				&quot;}&quot;);
		chartComp10.setTooltipFormatter(&quot;function formatTooltip(obj){ &quot; +
					&quot;return '&lt;b&gt;'+ obj.series.name +'&lt;/b&gt;&lt;br/&gt;&quot; +
					&quot;x = '+ obj.x +' , y = '+ obj.y;&quot; +
				&quot;}&quot;);
		chartComp10.setModel(dataChartModel10);

		//Adding some data to the model

		dataChartModel10.addValue(&quot;Series 1&quot;, 1, 1);
		dataChartModel10.addValue(&quot;Series 1&quot;, 2, 2);
		dataChartModel10.addValue(&quot;Series 1&quot;, 3, 4);
		dataChartModel10.addValue(&quot;Series 1&quot;, 4, 8);
		dataChartModel10.addValue(&quot;Series 1&quot;, 5, 16);
		dataChartModel10.addValue(&quot;Series 1&quot;, 6, 32);
		dataChartModel10.addValue(&quot;Series 1&quot;, 7, 64);
		dataChartModel10.addValue(&quot;Series 1&quot;, 8, 128);
		dataChartModel10.addValue(&quot;Series 1&quot;, 9, 256);
		dataChartModel10.addValue(&quot;Series 1&quot;, 10, 512);			
	}
	
	@Override
	public void onEvent(Event arg0) throws Exception {
		// TODO Auto-generated method stub
		
	}
	
	/**
	 * internal method to convert date&amp;amp;time from string to epoch milliseconds
	 * 
	 * @param date
	 * @return
	 * @throws Exception
	 */
	private long getDateTime(String date) throws Exception {
		return sdf.parse(date).getTime();
	}

}
 </pre>]]></html></tabpanel>
			</tabpanels>
			</tabbox>
		</groupbox>
		<groupbox mold="3d" width="100%" open="false">
			<caption label="Scatter plot" />
			<tabbox>
				<tabs>
					<tab label="Overview" />
					<tab label="demo.zul" />
					<tab label="DemoComposer.java" />
				</tabs>
				<tabpanels>
					<tabpanel><zhighcharts id="chartComp11" /></tabpanel>
					<tabpanel><html><![CDATA[ 
						<pre class="brush:xml">
&lt;window title=&quot;Scatter plot&quot; border=&quot;normal&quot; width=&quot;100%&quot;
	use=&quot;ctrl.DemoComposer&quot;&gt;
	&lt;zhighcharts id=&quot;chartComp11&quot; /&gt;
&lt;/window&gt;
						</pre>]]></html>
					</tabpanel>
					<tabpanel><html><![CDATA[ <pre class="brush:java">
package ctrl;

import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.HashMap;
import java.util.Map;

import org.ngi.zhighcharts.SimpleExtXYModel;
import org.ngi.zhighcharts.ZHighCharts;
import org.zkoss.util.logging.Log;
import org.zkoss.zk.ui.event.Event;
import org.zkoss.zk.ui.event.EventListener;
import org.zkoss.zul.SimplePieModel;
import org.zkoss.zul.Window;

public class DemoComposer extends Window implements EventListener {
	protected Log logger = Log.lookup(this.getClass());
	
	//Scatter plot
	private ZHighCharts chartComp11;
	private SimpleExtXYModel dataChartModel11 = new SimpleExtXYModel();	

	// date format used to capture date time
	private SimpleDateFormat sdf = new SimpleDateFormat(&quot;yyyy-MM-dd HH:mm:ss z&quot;);
	
	public void onCreate() throws Exception {

		//================================================================================
	    // Scatter plot
	    //================================================================================

		
		chartComp11 = (ZHighCharts) getFellow(&quot;chartComp11&quot;);
		chartComp11.setType(&quot;scatter&quot;);
		chartComp11.setOptions(&quot;{&quot; +
					&quot;zoomType: 'xy'&quot; +
				&quot;}&quot;);
		chartComp11.setTitle(&quot;Height Versus Weight of 507 Individuals by Gender&quot;);
		chartComp11.setSubTitle(&quot;Source: Heinz  2003&quot;);
		chartComp11.setxAxisOptions(&quot;{&quot; +
					&quot;startOnTick: true,&quot; +
					&quot;endOnTick: true,&quot; +
					&quot;showLastLabel: true&quot; +
				&quot;}&quot;);
		chartComp11.setTooltipFormatter(&quot;function formatTooltip(obj){&quot; +
					&quot;return ''+obj.x +' cm, '+ obj.y +' kg';&quot; +
				&quot;}&quot;);
		chartComp11.setYAxisTitle(&quot;Weight (kg)&quot;);
		chartComp11.setXAxisTitle(&quot;Height (cm)&quot;);
		chartComp11.setLegend(&quot;{&quot; +
					&quot;layout: 'vertical',&quot; +
					&quot;align: 'left',&quot; +
					&quot;verticalAlign: 'top',&quot; +
					&quot;x: 100, &quot; +
					&quot;y: 70,&quot; +
					&quot;floating: true,&quot; +
					&quot;backgroundColor: '#FFFFFF',&quot; +
					&quot;borderWidth: 1&quot; +
				&quot;}&quot;);
		chartComp11.setPlotOptions(&quot;{&quot; +
					&quot;scatter: {&quot; +
						&quot;marker: { &quot; +
							&quot;radius: 5,&quot; +
							&quot;states: {&quot; +
								&quot;hover: {&quot; +
									&quot;enabled: true,&quot; +
									&quot;ineColor: 'rgb(100,100,100)'&quot; +
								&quot;}&quot; +
							&quot;}&quot; +
						&quot;},&quot; +
						&quot;states: {&quot; +
							&quot;hover: {&quot; +
								&quot;marker: {&quot; +
									&quot;enabled: false&quot; +
								&quot;}&quot; +
							&quot;}&quot; +
						&quot;}&quot; +
					&quot;}&quot; +
				&quot;}&quot;);
				
		chartComp11.setModel(dataChartModel11);
		
		//Adding some data to the model
		 
		style = new HashMap();
		style.put(&quot;color&quot;, &quot;rgba(223, 83, 83, .5)&quot;);
		chartComp11.setSeriesOptions(&quot;Female&quot;, style);
		
		Number femaledata [][] = {{161.2, 51.6}, {167.5, 59.0}, {159.5, 49.2}, {157.0, 63.0}, {155.8, 53.6},
                {170.0, 59.0}, {159.1, 47.6}, {166.0, 69.8}, {176.2, 66.8}, {160.2, 75.2},
                {172.5, 55.2}, {170.9, 54.2}, {172.9, 62.5}, {153.4, 42.0}, {160.0, 50.0},
                {147.2, 49.8}, {168.2, 49.2}, {175.0, 73.2}, {157.0, 47.8}, {167.6, 68.8},
                {159.5, 50.6}, {175.0, 82.5}, {166.8, 57.2}, {176.5, 87.8}, {170.2, 72.8},
                {174.0, 54.5}, {173.0, 59.8}, {179.9, 67.3}, {170.5, 67.8}, {160.0, 47.0},
                {154.4, 46.2}, {162.0, 55.0}, {176.5, 83.0}, {160.0, 54.4}, {152.0, 45.8},
                {162.1, 53.6}, {170.0, 73.2}, {160.2, 52.1}, {161.3, 67.9}, {166.4, 56.6},
                {168.9, 62.3}, {163.8, 58.5}, {167.6, 54.5}, {160.0, 50.2}, {161.3, 60.3},
                {167.6, 58.3}, {165.1, 56.2}, {160.0, 50.2}, {170.0, 72.9}, {157.5, 59.8},
                {167.6, 61.0}, {160.7, 69.1}, {163.2, 55.9}, {152.4, 46.5}, {157.5, 54.3},
                {168.3, 54.8}, {180.3, 60.7}, {165.5, 60.0}, {165.0, 62.0}, {164.5, 60.3},
                {156.0, 52.7}, {160.0, 74.3}, {163.0, 62.0}, {165.7, 73.1}, {161.0, 80.0},
                {162.0, 54.7}, {166.0, 53.2}, {174.0, 75.7}, {172.7, 61.1}, {167.6, 55.7},
                {151.1, 48.7}, {164.5, 52.3}, {163.5, 50.0}, {152.0, 59.3}, {169.0, 62.5},
                {164.0, 55.7}, {161.2, 54.8}, {155.0, 45.9}, {170.0, 70.6}, {176.2, 67.2},
                {170.0, 69.4}, {162.5, 58.2}, {170.3, 64.8}, {164.1, 71.6}, {169.5, 52.8},
                {163.2, 59.8}, {154.5, 49.0}, {159.8, 50.0}, {173.2, 69.2}, {170.0, 55.9},
                {161.4, 63.4}, {169.0, 58.2}, {166.2, 58.6}, {159.4, 45.7}, {162.5, 52.2},
                {159.0, 48.6}, {162.8, 57.8}, {159.0, 55.6}, {179.8, 66.8}, {162.9, 59.4},
                {161.0, 53.6}, {151.1, 73.2}, {168.2, 53.4}, {168.9, 69.0}, {173.2, 58.4},
                {171.8, 56.2}, {178.0, 70.6}, {164.3, 59.8}, {163.0, 72.0}, {168.5, 65.2},
                {166.8, 56.6}, {172.7, 105.2}, {163.5, 51.8}, {169.4, 63.4}, {167.8, 59.0},
                {159.5, 47.6}, {167.6, 63.0}, {161.2, 55.2}, {160.0, 45.0}, {163.2, 54.0},
                {162.2, 50.2}, {161.3, 60.2}, {149.5, 44.8}, {157.5, 58.8}, {163.2, 56.4},
                {172.7, 62.0}, {155.0, 49.2}, {156.5, 67.2}, {164.0, 53.8}, {160.9, 54.4},
                {162.8, 58.0}, {167.0, 59.8}, {160.0, 54.8}, {160.0, 43.2}, {168.9, 60.5},
                {158.2, 46.4}, {156.0, 64.4}, {160.0, 48.8}, {167.1, 62.2}, {158.0, 55.5},
                {167.6, 57.8}, {156.0, 54.6}, {162.1, 59.2}, {173.4, 52.7}, {159.8, 53.2},
                {170.5, 64.5}, {159.2, 51.8}, {157.5, 56.0}, {161.3, 63.6}, {162.6, 63.2},
                {160.0, 59.5}, {168.9, 56.8}, {165.1, 64.1}, {162.6, 50.0}, {165.1, 72.3},
                {166.4, 55.0}, {160.0, 55.9}, {152.4, 60.4}, {170.2, 69.1}, {162.6, 84.5},
                {170.2, 55.9}, {158.8, 55.5}, {172.7, 69.5}, {167.6, 76.4}, {162.6, 61.4},
                {167.6, 65.9}, {156.2, 58.6}, {175.2, 66.8}, {172.1, 56.6}, {162.6, 58.6},
                {160.0, 55.9}, {165.1, 59.1}, {182.9, 81.8}, {166.4, 70.7}, {165.1, 56.8},
                {177.8, 60.0}, {165.1, 58.2}, {175.3, 72.7}, {154.9, 54.1}, {158.8, 49.1},
                {172.7, 75.9}, {168.9, 55.0}, {161.3, 57.3}, {167.6, 55.0}, {165.1, 65.5},
                {175.3, 65.5}, {157.5, 48.6}, {163.8, 58.6}, {167.6, 63.6}, {165.1, 55.2},
                {165.1, 62.7}, {168.9, 56.6}, {162.6, 53.9}, {164.5, 63.2}, {176.5, 73.6},
                {168.9, 62.0}, {175.3, 63.6}, {159.4, 53.2}, {160.0, 53.4}, {170.2, 55.0},
                {162.6, 70.5}, {167.6, 54.5}, {162.6, 54.5}, {160.7, 55.9}, {160.0, 59.0},
                {157.5, 63.6}, {162.6, 54.5}, {152.4, 47.3}, {170.2, 67.7}, {165.1, 80.9},
                {172.7, 70.5}, {165.1, 60.9}, {170.2, 63.6}, {170.2, 54.5}, {170.2, 59.1},
                {161.3, 70.5}, {167.6, 52.7}, {167.6, 62.7}, {165.1, 86.3}, {162.6, 66.4},
                {152.4, 67.3}, {168.9, 63.0}, {170.2, 73.6}, {175.2, 62.3}, {175.2, 57.7},
                {160.0, 55.4}, {165.1, 104.1}, {174.0, 55.5}, {170.2, 77.3}, {160.0, 80.5},
                {167.6, 64.5}, {167.6, 72.3}, {167.6, 61.4}, {154.9, 58.2}, {162.6, 81.8},
                {175.3, 63.6}, {171.4, 53.4}, {157.5, 54.5}, {165.1, 53.6}, {160.0, 60.0},
                {174.0, 73.6}, {162.6, 61.4}, {174.0, 55.5}, {162.6, 63.6}, {161.3, 60.9},
                {156.2, 60.0}, {149.9, 46.8}, {169.5, 57.3}, {160.0, 64.1}, {175.3, 63.6},
                {169.5, 67.3}, {160.0, 75.5}, {172.7, 68.2}, {162.6, 61.4}, {157.5, 76.8},
                {176.5, 71.8}, {164.4, 55.5}, {160.7, 48.6}, {174.0, 66.4}, {163.8, 67.3}};
		
		for(int f = 0 ; f&lt;femaledata.length ; f++)
			dataChartModel11.addValue(&quot;Female&quot;, femaledata[f][0], femaledata[f][1]);
		
		style = new HashMap();
		style.put(&quot;color&quot;, &quot;rgba(119, 152, 191, .5)&quot;);
		chartComp11.setSeriesOptions(&quot;Male&quot;, style);
		
		Number maledata [][] = {{174.0, 65.6}, {175.3, 71.8}, {193.5, 80.7}, {186.5, 72.6}, {187.2, 78.8},
                {181.5, 74.8}, {184.0, 86.4}, {184.5, 78.4}, {175.0, 62.0}, {184.0, 81.6},
                {180.0, 76.6}, {177.8, 83.6}, {192.0, 90.0}, {176.0, 74.6}, {174.0, 71.0},
                {184.0, 79.6}, {192.7, 93.8}, {171.5, 70.0}, {173.0, 72.4}, {176.0, 85.9},
                {176.0, 78.8}, {180.5, 77.8}, {172.7, 66.2}, {176.0, 86.4}, {173.5, 81.8},
                {178.0, 89.6}, {180.3, 82.8}, {180.3, 76.4}, {164.5, 63.2}, {173.0, 60.9},
                {183.5, 74.8}, {175.5, 70.0}, {188.0, 72.4}, {189.2, 84.1}, {172.8, 69.1},
                {170.0, 59.5}, {182.0, 67.2}, {170.0, 61.3}, {177.8, 68.6}, {184.2, 80.1},
                {186.7, 87.8}, {171.4, 84.7}, {172.7, 73.4}, {175.3, 72.1}, {180.3, 82.6},
                {182.9, 88.7}, {188.0, 84.1}, {177.2, 94.1}, {172.1, 74.9}, {167.0, 59.1},
                {169.5, 75.6}, {174.0, 86.2}, {172.7, 75.3}, {182.2, 87.1}, {164.1, 55.2},
                {163.0, 57.0}, {171.5, 61.4}, {184.2, 76.8}, {174.0, 86.8}, {174.0, 72.2},
                {177.0, 71.6}, {186.0, 84.8}, {167.0, 68.2}, {171.8, 66.1}, {182.0, 72.0},
                {167.0, 64.6}, {177.8, 74.8}, {164.5, 70.0}, {192.0, 101.6}, {175.5, 63.2},
                {171.2, 79.1}, {181.6, 78.9}, {167.4, 67.7}, {181.1, 66.0}, {177.0, 68.2},
                {174.5, 63.9}, {177.5, 72.0}, {170.5, 56.8}, {182.4, 74.5}, {197.1, 90.9},
                {180.1, 93.0}, {175.5, 80.9}, {180.6, 72.7}, {184.4, 68.0}, {175.5, 70.9},
                {180.6, 72.5}, {177.0, 72.5}, {177.1, 83.4}, {181.6, 75.5}, {176.5, 73.0},
                {175.0, 70.2}, {174.0, 73.4}, {165.1, 70.5}, {177.0, 68.9}, {192.0, 102.3},
                {176.5, 68.4}, {169.4, 65.9}, {182.1, 75.7}, {179.8, 84.5}, {175.3, 87.7},
                {184.9, 86.4}, {177.3, 73.2}, {167.4, 53.9}, {178.1, 72.0}, {168.9, 55.5},
                {157.2, 58.4}, {180.3, 83.2}, {170.2, 72.7}, {177.8, 64.1}, {172.7, 72.3},
                {165.1, 65.0}, {186.7, 86.4}, {165.1, 65.0}, {174.0, 88.6}, {175.3, 84.1},
                {185.4, 66.8}, {177.8, 75.5}, {180.3, 93.2}, {180.3, 82.7}, {177.8, 58.0},
                {177.8, 79.5}, {177.8, 78.6}, {177.8, 71.8}, {177.8, 116.4}, {163.8, 72.2},
                {188.0, 83.6}, {198.1, 85.5}, {175.3, 90.9}, {166.4, 85.9}, {190.5, 89.1},
                {166.4, 75.0}, {177.8, 77.7}, {179.7, 86.4}, {172.7, 90.9}, {190.5, 73.6},
                {185.4, 76.4}, {168.9, 69.1}, {167.6, 84.5}, {175.3, 64.5}, {170.2, 69.1},
                {190.5, 108.6}, {177.8, 86.4}, {190.5, 80.9}, {177.8, 87.7}, {184.2, 94.5},
                {176.5, 80.2}, {177.8, 72.0}, {180.3, 71.4}, {171.4, 72.7}, {172.7, 84.1},
                {172.7, 76.8}, {177.8, 63.6}, {177.8, 80.9}, {182.9, 80.9}, {170.2, 85.5},
                {167.6, 68.6}, {175.3, 67.7}, {165.1, 66.4}, {185.4, 102.3}, {181.6, 70.5},
                {172.7, 95.9}, {190.5, 84.1}, {179.1, 87.3}, {175.3, 71.8}, {170.2, 65.9},
                {193.0, 95.9}, {171.4, 91.4}, {177.8, 81.8}, {177.8, 96.8}, {167.6, 69.1},
                {167.6, 82.7}, {180.3, 75.5}, {182.9, 79.5}, {176.5, 73.6}, {186.7, 91.8},
                {188.0, 84.1}, {188.0, 85.9}, {177.8, 81.8}, {174.0, 82.5}, {177.8, 80.5},
                {171.4, 70.0}, {185.4, 81.8}, {185.4, 84.1}, {188.0, 90.5}, {188.0, 91.4},
                {182.9, 89.1}, {176.5, 85.0}, {175.3, 69.1}, {175.3, 73.6}, {188.0, 80.5},
                {188.0, 82.7}, {175.3, 86.4}, {170.5, 67.7}, {179.1, 92.7}, {177.8, 93.6},
                {175.3, 70.9}, {182.9, 75.0}, {170.8, 93.2}, {188.0, 93.2}, {180.3, 77.7},
                {177.8, 61.4}, {185.4, 94.1}, {168.9, 75.0}, {185.4, 83.6}, {180.3, 85.5},
                {174.0, 73.9}, {167.6, 66.8}, {182.9, 87.3}, {160.0, 72.3}, {180.3, 88.6},
                {167.6, 75.5}, {186.7, 101.4}, {175.3, 91.1}, {175.3, 67.3}, {175.9, 77.7},
                {175.3, 81.8}, {179.1, 75.5}, {181.6, 84.5}, {177.8, 76.6}, {182.9, 85.0},
                {177.8, 102.5}, {184.2, 77.3}, {179.1, 71.8}, {176.5, 87.9}, {188.0, 94.3},
                {174.0, 70.9}, {167.6, 64.5}, {170.2, 77.3}, {167.6, 72.3}, {188.0, 87.3},
                {174.0, 80.0}, {176.5, 82.3}, {180.3, 73.6}, {167.6, 74.1}, {188.0, 85.9},
                {180.3, 73.2}, {167.6, 76.3}, {183.0, 65.9}, {183.0, 90.9}, {179.1, 89.1},
                {170.2, 62.3}, {177.8, 82.7}, {179.1, 79.1}, {190.5, 98.2}, {177.8, 84.1},
                {180.3, 83.2}, {180.3, 83.2}};
		
		for(int m = 0 ; m&lt;maledata.length ; m++)
			dataChartModel11.addValue(&quot;Male&quot;, maledata[m][0], maledata[m][1]);
			
	}
	
	@Override
	public void onEvent(Event arg0) throws Exception {
		// TODO Auto-generated method stub
		
	}
	
	/**
	 * internal method to convert date&amp;amp;time from string to epoch milliseconds
	 * 
	 * @param date
	 * @return
	 * @throws Exception
	 */
	private long getDateTime(String date) throws Exception {
		return sdf.parse(date).getTime();
	}

}
 </pre>]]></html></tabpanel>
			</tabpanels>
			</tabbox>
		</groupbox>
		
		<label value="Area charts" style="font-size:2em;"/>
		<groupbox mold="3d" width="100%" open="false">
			<caption label="Basic area" />
			<tabbox>
				<tabs>
					<tab label="Overview" />
					<tab label="demo.zul" />
					<tab label="DemoComposer.java" />
				</tabs>
				<tabpanels>
					<tabpanel><zhighcharts id="chartComp5" /></tabpanel>
					<tabpanel><html><![CDATA[ 
						<pre class="brush:xml">
&lt;window title=&quot;Basic area&quot; border=&quot;normal&quot; width=&quot;100%&quot;
	use=&quot;ctrl.DemoComposer&quot;&gt;
	&lt;zhighcharts id=&quot;chartComp5&quot; /&gt;
&lt;/window&gt;
						</pre>]]></html>
					</tabpanel>
					<tabpanel><html><![CDATA[ <pre class="brush:java">
package ctrl;

import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.HashMap;
import java.util.Map;

import org.ngi.zhighcharts.SimpleExtXYModel;
import org.ngi.zhighcharts.ZHighCharts;
import org.zkoss.util.logging.Log;
import org.zkoss.zk.ui.event.Event;
import org.zkoss.zk.ui.event.EventListener;
import org.zkoss.zul.SimplePieModel;
import org.zkoss.zul.Window;

public class DemoComposer extends Window implements EventListener {
	protected Log logger = Log.lookup(this.getClass());
	
	//Basic area
	private ZHighCharts chartComp5;
	private SimpleExtXYModel dataChartModel5 = new SimpleExtXYModel();	

	// date format used to capture date time
	private SimpleDateFormat sdf = new SimpleDateFormat(&quot;yyyy-MM-dd HH:mm:ss z&quot;);
	
	public void onCreate() throws Exception {

		//================================================================================
	    // Basic area
	    //================================================================================
		
		chartComp5 = (ZHighCharts) getFellow(&quot;chartComp5&quot;);
		chartComp5.setType(&quot;area&quot;);
		chartComp5.setTitle(&quot;US and USSR nuclear stockpiles&quot;);
		chartComp5.setSubTitle(&quot;Source: &lt;a href='http://thebulletin.metapress.com/content/c4120650912x74k7/fulltext.pdf'&gt;thebulletin.metapress.com&lt;/a&gt;&quot;);
		chartComp5.setxAxisOptions(&quot;{&quot; +
					&quot;labels: {&quot; +
						&quot;formatter: function() {&quot; +
							&quot;return this.value;&quot; +
						&quot;}&quot; +
					&quot;}&quot; +
				&quot;}&quot;);
		chartComp5.setyAxisOptions(&quot;{&quot; +
					&quot;labels: {&quot; +
						&quot;formatter: function() {&quot; +
							&quot;return this.value / 1000 +'k';&quot; +
						&quot;}&quot; +
					&quot;}&quot; +
				&quot;}&quot;);
		chartComp5.setTooltipFormatter(&quot;function formatTooltip(obj){&quot; +
					&quot;return obj.series.name +' produced &lt;b&gt;'+Highcharts.numberFormat(obj.y, 0) +'&lt;/b&gt;&lt;br/&gt;&quot; +
					&quot;warheads in '+ obj.x;&quot; +
				&quot;}&quot;);
		chartComp5.setPlotOptions(&quot;{&quot; +
					&quot;area: {&quot; +
						&quot;marker: {&quot; +
							&quot;enabled: false,&quot; +
							&quot;symbol: 'circle',&quot; +
							&quot;radius: 2,&quot; +
							&quot;states: {&quot; +
								&quot;hover: {&quot; +
								&quot;	enabled: true&quot; +
								&quot;}&quot; +
							&quot;}&quot; +
						&quot;}&quot; +
					&quot;}&quot; +
				&quot;}&quot;);
		
		chartComp5.setYAxisTitle(&quot;Nuclear weapon states&quot;);
		
		
		chartComp5.setModel(dataChartModel5);
		
		
		//Adding some data to the model
		Number dataUSA[] = {null, null, null, null, null, 6 , 11, 32, 110, 235, 369, 640,
                1005, 1436, 2063, 3057, 4618, 6444, 9822, 15468, 20434, 24126,
                27387, 29459, 31056, 31982, 32040, 31233, 29224, 27342, 26662,
                26956, 27912, 28999, 28965, 27826, 25579, 25722, 24826, 24605,
                24304, 23464, 23708, 24099, 24357, 24237, 24401, 24344, 23586,
                22380, 21004, 17287, 14747, 13076, 12555, 12144, 11009, 10950,
                10871, 10824, 10577, 10527, 10475, 10421, 10358, 10295, 10104};
		
		Number dataUSSR[] = {
				null, null, null, null, null, null, null , null , null ,null,
                5, 25, 50, 120, 150, 200, 426, 660, 869, 1060, 1605, 2471, 3322,
                4238, 5221, 6129, 7089, 8339, 9399, 10538, 11643, 13092, 14478,
                15915, 17385, 19055, 21205, 23044, 25393, 27935, 30062, 32049,
                33952, 35804, 37431, 39197, 45000, 43000, 41000, 39000, 37000,
                35000, 33000, 31000, 29000, 27000, 25000, 24000, 23000, 22000,
                21000, 20000, 19000, 18000, 18000, 17000, 16000
		};
		int startpoint = 1940;
		for (int i =0;i&lt;dataUSA.length;i++){
			dataChartModel5.addValue(&quot;USA&quot;, startpoint++, dataUSA[i]);
		}
			
		startpoint = 1940;
		for (int j =0;j&lt;dataUSA.length;j++)
			dataChartModel5.addValue(&quot;USSR&quot;, startpoint++, dataUSSR[j]);
		
					
	}
	
	@Override
	public void onEvent(Event arg0) throws Exception {
		// TODO Auto-generated method stub
		
	}
	
	/**
	 * internal method to convert date&amp;amp;time from string to epoch milliseconds
	 * 
	 * @param date
	 * @return
	 * @throws Exception
	 */
	private long getDateTime(String date) throws Exception {
		return sdf.parse(date).getTime();
	}

}
 </pre>]]></html></tabpanel>
			</tabpanels>
			</tabbox>
		</groupbox>
		<groupbox mold="3d" width="100%" open="false">
			<caption label="Area with negative values" />
			<tabbox>
				<tabs>
					<tab label="Overview" />
					<tab label="demo.zul" />
					<tab label="DemoComposer.java" />
				</tabs>
				<tabpanels>
					<tabpanel><zhighcharts id="chartComp12" /></tabpanel>
					<tabpanel><html><![CDATA[ 
						<pre class="brush:xml">
&lt;window title=&quot;Area with negative values&quot; border=&quot;normal&quot; width=&quot;100%&quot;
	use=&quot;ctrl.DemoComposer&quot;&gt;
	&lt;zhighcharts id=&quot;chartComp12&quot; /&gt;
&lt;/window&gt;
						</pre>]]></html>
					</tabpanel>
					<tabpanel><html><![CDATA[ <pre class="brush:java">
package ctrl;

import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.HashMap;
import java.util.Map;

import org.ngi.zhighcharts.SimpleExtXYModel;
import org.ngi.zhighcharts.ZHighCharts;
import org.zkoss.util.logging.Log;
import org.zkoss.zk.ui.event.Event;
import org.zkoss.zk.ui.event.EventListener;
import org.zkoss.zul.SimplePieModel;
import org.zkoss.zul.Window;

public class DemoComposer extends Window implements EventListener {
	protected Log logger = Log.lookup(this.getClass());
	
	//Area with negative values
	private ZHighCharts chartComp12;
	private SimpleExtXYModel dataChartModel12 = new SimpleExtXYModel();	

	// date format used to capture date time
	private SimpleDateFormat sdf = new SimpleDateFormat(&quot;yyyy-MM-dd HH:mm:ss z&quot;);
	
	public void onCreate() throws Exception {

		//================================================================================
	    // Area with negative values
	    //================================================================================

		
		chartComp12 = (ZHighCharts) getFellow("chartComp12");
		chartComp12.setType("area");
		chartComp12.setTitle("Area chart with negative values");
		chartComp12.setxAxisOptions("{" +
					"categories: ['" +
						"Apples', " +
						"'Oranges', " +
						"'Pears', " +
						"'Grapes', " +
						"'Bananas'" +
					"]" +
				"}");
		chartComp12.setTooltipFormatter("function formatTooltip(obj){" +
					"return '' + obj.series.name +': '+ obj.y +'';" +
				"}");
		
		chartComp12.setModel(dataChartModel12);
		
		//Adding some data to the model

		dataChartModel12.addValue("John", 0, 5);
		dataChartModel12.addValue("John", 1, 3);
		dataChartModel12.addValue("John", 2, 4);
		dataChartModel12.addValue("John", 3, 7);
		dataChartModel12.addValue("John", 4, 2);
		
		dataChartModel12.addValue("Jane", 0, 2);
		dataChartModel12.addValue("Jane", 1, -2);
		dataChartModel12.addValue("Jane", 2, -3);
		dataChartModel12.addValue("Jane", 3, 2);
		dataChartModel12.addValue("Jane", 4, 1);
		
		dataChartModel12.addValue("Joe", 0, 3);
		dataChartModel12.addValue("Joe", 1, 4);
		dataChartModel12.addValue("Joe", 2, 4);
		dataChartModel12.addValue("Joe", 3, -2);
		dataChartModel12.addValue("Joe", 4, 5);			
	}
	
	@Override
	public void onEvent(Event arg0) throws Exception {
		// TODO Auto-generated method stub
		
	}
	
	/**
	 * internal method to convert date&amp;time from string to epoch milliseconds
	 * 
	 * @param date
	 * @return
	 * @throws Exception
	 */
	private long getDateTime(String date) throws Exception {
		return sdf.parse(date).getTime();
	}

}
 </pre>]]></html></tabpanel>
			</tabpanels>
			</tabbox>
		</groupbox>
		<groupbox mold="3d" width="100%" open="false">
			<caption label="Stacked area" />
			<tabbox>
				<tabs>
					<tab label="Overview" />
					<tab label="demo.zul" />
					<tab label="DemoComposer.java" />
				</tabs>
				<tabpanels>
					<tabpanel><zhighcharts id="chartComp13" /></tabpanel>
					<tabpanel><html><![CDATA[ 
						<pre class="brush:xml">
&lt;window title=&quot;Stacked area&quot; border=&quot;normal&quot; width=&quot;100%&quot;
	use=&quot;ctrl.DemoComposer&quot;&gt;
	&lt;zhighcharts id=&quot;chartComp13&quot; /&gt;
&lt;/window&gt;
						</pre>]]></html>
					</tabpanel>
					<tabpanel><html><![CDATA[ <pre class="brush:java">
package ctrl;

import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.HashMap;
import java.util.Map;

import org.ngi.zhighcharts.SimpleExtXYModel;
import org.ngi.zhighcharts.ZHighCharts;
import org.zkoss.util.logging.Log;
import org.zkoss.zk.ui.event.Event;
import org.zkoss.zk.ui.event.EventListener;
import org.zkoss.zul.SimplePieModel;
import org.zkoss.zul.Window;

public class DemoComposer extends Window implements EventListener {
	protected Log logger = Log.lookup(this.getClass());
	
	//Stacked area
	private ZHighCharts chartComp13;
	private SimpleExtXYModel dataChartModel13 = new SimpleExtXYModel();
		

	// date format used to capture date time
	private SimpleDateFormat sdf = new SimpleDateFormat(&quot;yyyy-MM-dd HH:mm:ss z&quot;);
	
	public void onCreate() throws Exception {

		//================================================================================
	    // Stacked area
	    //================================================================================

		
		chartComp13 = (ZHighCharts) getFellow(&quot;chartComp13&quot;);
		chartComp13.setType(&quot;area&quot;);
		chartComp13.setTitle(&quot;Historic and Estimated Worldwide Population Growth by Region&quot;);
		chartComp13.setSubTitle(&quot;Source: Wikipedia.org&quot;);
		chartComp13.setxAxisOptions(&quot;{&quot; +
					&quot;categories: [&quot; +
						&quot;'1750', &quot; +
						&quot;'1800', &quot; +
						&quot;'1850', &quot; +
						&quot;'1900', &quot; +
						&quot;'1950', &quot; +
						&quot;'1999', &quot; +
						&quot;'2050'&quot; +
					&quot;],&quot; +
					&quot;tickmarkPlacement: 'on',&quot; +
					&quot;title: {&quot; +
						&quot;enabled: false&quot; +
					&quot;}&quot; +
				&quot;}&quot;);
		chartComp13.setyAxisOptions(&quot;{&quot; +
					&quot;labels: {&quot; +
						&quot;formatter: function() {&quot; +
							&quot;return this.value / 1000;&quot; +
						&quot;}&quot; +
					&quot;}&quot; +
				&quot;}&quot;);
		chartComp13.setTooltipFormatter(&quot;function formatTooltip(obj){&quot; +
					&quot;return ''+obj.x +': '+ Highcharts.numberFormat(obj.y, 0, ',') +' millions';&quot; +
				&quot;}&quot;);
		chartComp13.setYAxisTitle(&quot;Billions&quot;);
		chartComp13.setLegend(&quot;{&quot; +
					&quot;layout: 'vertical',&quot; +
					&quot;align: 'left',&quot; +
					&quot;verticalAlign: 'top',&quot; +
					&quot;x: 100, &quot; +
					&quot;y: 70,&quot; +
					&quot;floating: true,&quot; +
					&quot;backgroundColor: '#FFFFFF',&quot; +
					&quot;borderWidth: 1&quot; +
				&quot;}&quot;);
		chartComp13.setPlotOptions(&quot;{&quot; +
					&quot;area: {&quot; +
						&quot;stacking: 'normal',&quot; +
						&quot;lineColor: '#666666', &quot; +
						&quot;lineWidth: 1,&quot; +
						&quot;marker: {&quot; +
							&quot;lineWidth: 1, &quot; +
							&quot;lineColor: '#666666'&quot; +
						&quot;}&quot; +
					&quot;}&quot; +
				&quot;}&quot;);
				
		chartComp13.setModel(dataChartModel13);
		
		//Adding some data to the model

		dataChartModel13.addValue(&quot;Asia&quot;, 0, 502);
		dataChartModel13.addValue(&quot;Asia&quot;, 1, 635);
		dataChartModel13.addValue(&quot;Asia&quot;, 2, 809);
		dataChartModel13.addValue(&quot;Asia&quot;, 3, 947);
		dataChartModel13.addValue(&quot;Asia&quot;, 4, 1402);
		dataChartModel13.addValue(&quot;Asia&quot;, 5, 3634);
		dataChartModel13.addValue(&quot;Asia&quot;, 6, 5268);
		
		dataChartModel13.addValue(&quot;Africa&quot;, 0, 106);
		dataChartModel13.addValue(&quot;Africa&quot;, 1, 107);
		dataChartModel13.addValue(&quot;Africa&quot;, 2, 111);
		dataChartModel13.addValue(&quot;Africa&quot;, 3, 133);
		dataChartModel13.addValue(&quot;Africa&quot;, 4, 224);
		dataChartModel13.addValue(&quot;Africa&quot;, 5, 767);
		dataChartModel13.addValue(&quot;Africa&quot;, 6, 1766);
		
		dataChartModel13.addValue(&quot;Europe&quot;, 0, 163);
		dataChartModel13.addValue(&quot;Europe&quot;, 1, 203);
		dataChartModel13.addValue(&quot;Europe&quot;, 2, 276);
		dataChartModel13.addValue(&quot;Europe&quot;, 3, 408);
		dataChartModel13.addValue(&quot;Europe&quot;, 4, 547);
		dataChartModel13.addValue(&quot;Europe&quot;, 5, 729);
		dataChartModel13.addValue(&quot;Europe&quot;, 6, 628);
		
		dataChartModel13.addValue(&quot;America&quot;, 0, 18);
		dataChartModel13.addValue(&quot;America&quot;, 1, 31);
		dataChartModel13.addValue(&quot;America&quot;, 2, 54);
		dataChartModel13.addValue(&quot;America&quot;, 3, 156);
		dataChartModel13.addValue(&quot;America&quot;, 4, 339);
		dataChartModel13.addValue(&quot;America&quot;, 5, 818);
		dataChartModel13.addValue(&quot;America&quot;, 6, 1201);
		
		dataChartModel13.addValue(&quot;Oceania&quot;, 0, 2);
		dataChartModel13.addValue(&quot;Oceania&quot;, 1, 2);
		dataChartModel13.addValue(&quot;Oceania&quot;, 2, 2);
		dataChartModel13.addValue(&quot;Oceania&quot;, 3, 3);
		dataChartModel13.addValue(&quot;Oceania&quot;, 4, 13);
		dataChartModel13.addValue(&quot;Oceania&quot;, 5, 30);
		dataChartModel13.addValue(&quot;Oceania&quot;, 6, 46);			
	}
	
	@Override
	public void onEvent(Event arg0) throws Exception {
		// TODO Auto-generated method stub
		
	}
	
	/**
	 * internal method to convert date&amp;amp;time from string to epoch milliseconds
	 * 
	 * @param date
	 * @return
	 * @throws Exception
	 */
	private long getDateTime(String date) throws Exception {
		return sdf.parse(date).getTime();
	}

}
 </pre>]]></html></tabpanel>
			</tabpanels>
			</tabbox>
		</groupbox>
		<groupbox mold="3d" width="100%" open="false">
			<caption label="Percentage area" />
			<tabbox>
				<tabs>
					<tab label="Overview" />
					<tab label="demo.zul" />
					<tab label="DemoComposer.java" />
				</tabs>
				<tabpanels>
					<tabpanel><zhighcharts id="chartComp14" /></tabpanel>
					<tabpanel><html><![CDATA[ 
						<pre class="brush:xml">
&lt;window title=&quot;Percentage area&quot; border=&quot;normal&quot; width=&quot;100%&quot;
	use=&quot;ctrl.DemoComposer&quot;&gt;
	&lt;zhighcharts id=&quot;chartComp14&quot; /&gt;
&lt;/window&gt;
						</pre>]]></html>
					</tabpanel>
					<tabpanel><html><![CDATA[ <pre class="brush:java">
package ctrl;

import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.HashMap;
import java.util.Map;

import org.ngi.zhighcharts.SimpleExtXYModel;
import org.ngi.zhighcharts.ZHighCharts;
import org.zkoss.util.logging.Log;
import org.zkoss.zk.ui.event.Event;
import org.zkoss.zk.ui.event.EventListener;
import org.zkoss.zul.SimplePieModel;
import org.zkoss.zul.Window;

public class DemoComposer extends Window implements EventListener {
	protected Log logger = Log.lookup(this.getClass());
	
	//Percentage area
	private ZHighCharts chartComp14;	

	// date format used to capture date time
	private SimpleDateFormat sdf = new SimpleDateFormat(&quot;yyyy-MM-dd HH:mm:ss z&quot;);
	
	public void onCreate() throws Exception {

		//================================================================================
	    // Percentage area
	    //================================================================================

		
		chartComp14 = (ZHighCharts) getFellow(&quot;chartComp14&quot;);
		chartComp14.setType(&quot;area&quot;);
		chartComp14.setTitle(&quot;Historic and Estimated Worldwide Population Distribution by Region&quot;);
		chartComp14.setSubTitle(&quot;Source: Wikipedia.org&quot;);
		chartComp14.setxAxisOptions(&quot;{&quot; +
					&quot;categories: [&quot; +
						&quot;'1750', &quot; +
						&quot;'1800', &quot; +
						&quot;'1850', &quot; +
						&quot;'1900', &quot; +
						&quot;'1950', &quot; +
						&quot;'1999', &quot; +
						&quot;'2050'&quot; +
					&quot;],&quot; +
					&quot;tickmarkPlacement: 'on',&quot; +
					&quot;title: {&quot; +
						&quot;enabled: false&quot; +
					&quot;}&quot; +
				&quot;}&quot;);
		chartComp14.setTooltipFormatter(&quot;function formatTooltip(obj){&quot; +
					&quot;return ''+obj.x +': '+ Highcharts.numberFormat(obj.percentage, 1) + &quot; +
					&quot;'% ('+Highcharts.numberFormat(obj.y, 0, ',') +' millions)';&quot; +
				&quot;}&quot;);
		chartComp14.setYAxisTitle(&quot;Percent&quot;);
		chartComp14.setPlotOptions(&quot;{ &quot; +
					&quot;area: {&quot; +
						&quot;stacking: 'percent',&quot; +
						&quot;lineColor: '#ffffff',&quot; +
						&quot;lineWidth: 1,&quot; +
						&quot;marker: {&quot; +
							&quot;lineWidth: 1,&quot; +
							&quot;lineColor: '#ffffff'&quot; +
						&quot;}&quot; +
					&quot;}&quot; +
				&quot;}&quot;);
				
		chartComp14.setModel(dataChartModel13);
		
	}
	
	@Override
	public void onEvent(Event arg0) throws Exception {
		// TODO Auto-generated method stub
		
	}
	
	/**
	 * internal method to convert date&amp;amp;time from string to epoch milliseconds
	 * 
	 * @param date
	 * @return
	 * @throws Exception
	 */
	private long getDateTime(String date) throws Exception {
		return sdf.parse(date).getTime();
	}

}
 </pre>]]></html></tabpanel>
			</tabpanels>
			</tabbox>
		</groupbox>
		<groupbox mold="3d" width="100%" open="false">
			<caption label="Area with missing points" />
			<tabbox>
				<tabs>
					<tab label="Overview" />
					<tab label="demo.zul" />
					<tab label="DemoComposer.java" />
				</tabs>
				<tabpanels>
					<tabpanel><zhighcharts id="chartComp15" /></tabpanel>
					<tabpanel><html><![CDATA[ 
						<pre class="brush:xml">
&lt;window title=&quot;Area with missing points&quot; border=&quot;normal&quot; width=&quot;100%&quot;
	use=&quot;ctrl.DemoComposer&quot;&gt;
	&lt;zhighcharts id=&quot;chartComp15&quot; /&gt;
&lt;/window&gt;
						</pre>]]></html>
					</tabpanel>
					<tabpanel><html><![CDATA[ <pre class="brush:java">
package ctrl;

import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.HashMap;
import java.util.Map;

import org.ngi.zhighcharts.SimpleExtXYModel;
import org.ngi.zhighcharts.ZHighCharts;
import org.zkoss.util.logging.Log;
import org.zkoss.zk.ui.event.Event;
import org.zkoss.zk.ui.event.EventListener;
import org.zkoss.zul.SimplePieModel;
import org.zkoss.zul.Window;

public class DemoComposer extends Window implements EventListener {
	protected Log logger = Log.lookup(this.getClass());
	
	//Area with missing points
	private ZHighCharts chartComp15;
	private SimpleExtXYModel dataChartModel15 = new SimpleExtXYModel();

	// date format used to capture date time
	private SimpleDateFormat sdf = new SimpleDateFormat(&quot;yyyy-MM-dd HH:mm:ss z&quot;);
	
	public void onCreate() throws Exception {

		//================================================================================
	    // Area with missing points
	    //================================================================================

		chartComp15 = (ZHighCharts) getFellow(&quot;chartComp15&quot;);
		chartComp15.setType(&quot;area&quot;);
		chartComp15.setOptions(&quot;{&quot; +
					&quot;spacingBottom: 30&quot; +
				&quot;}&quot;);
		chartComp15.setTitle(&quot;Fruit consumption *&quot;);
		chartComp15.setSubTitle(&quot;* Jane\'s banana consumption is unknown&quot;);
		chartComp15.setxAxisOptions(&quot;{&quot; +
					&quot;categories: [&quot; +
						&quot;'Apples', &quot; +
						&quot;'Pears', &quot; +
						&quot;'Oranges', &quot; +
						&quot;'Bananas', &quot; +
						&quot;'Grapes', &quot; +
						&quot;'Plums', &quot; +
						&quot;'Strawberries', &quot; +
						&quot;'Raspberries'&quot; +
					&quot;]&quot; +
				&quot;}&quot;);
		chartComp15.setyAxisOptions(&quot;{&quot; +
					&quot;labels: {&quot; +
						&quot;formatter: function() {&quot; +
							&quot;return this.value;&quot; +
						&quot;}&quot; +
					&quot;}&quot; +
				&quot;}&quot;);
		chartComp15.setTooltipFormatter(&quot;function formatTooltip(obj){&quot; +
					&quot;return '&lt;b&gt;'+ obj.series.name +'&lt;/b&gt;&lt;br/&gt;'+&quot; +
					&quot;obj.x +': '+ obj.y;&quot; +
				&quot;}&quot;);
		chartComp15.setYAxisTitle(&quot;Y-Axis&quot;);
		chartComp15.setLegend(&quot;{&quot; +
					&quot;layout: 'vertical',&quot; +
					&quot;align: 'left',&quot; +
					&quot;verticalAlign: 'top',&quot; +
					&quot;x: 150,&quot; +
					&quot;y: 100,&quot; +
					&quot;floating: true,&quot; +
					&quot;borderWidth: 1,&quot; +
					&quot;backgroundColor: '#FFFFFF'&quot; +
				&quot;}&quot;);
		chartComp15.setPlotOptions(&quot;{ &quot; +
					&quot;area: {&quot; +
						&quot;fillOpacity: 0.5&quot; +
					&quot;}&quot; +
				&quot;}&quot;);
					
		chartComp15.setModel(dataChartModel15);
		
		//Adding some data to the model

		dataChartModel15.addValue(&quot;John&quot;, 0, 0);
		dataChartModel15.addValue(&quot;John&quot;, 1, 1);
		dataChartModel15.addValue(&quot;John&quot;, 2, 4);
		dataChartModel15.addValue(&quot;John&quot;, 3, 4);
		dataChartModel15.addValue(&quot;John&quot;, 4, 5);
		dataChartModel15.addValue(&quot;John&quot;, 5, 2);
		dataChartModel15.addValue(&quot;John&quot;, 6, 3);
		dataChartModel15.addValue(&quot;John&quot;, 7, 7);
		
		dataChartModel15.addValue(&quot;Jane&quot;, 0, 1);
		dataChartModel15.addValue(&quot;Jane&quot;, 1, 0);
		dataChartModel15.addValue(&quot;Jane&quot;, 2, 3);
		dataChartModel15.addValue(&quot;Jane&quot;, 3, null);
		dataChartModel15.addValue(&quot;Jane&quot;, 4, 3);
		dataChartModel15.addValue(&quot;Jane&quot;, 5, 1);
		dataChartModel15.addValue(&quot;Jane&quot;, 6, 2);
		dataChartModel15.addValue(&quot;Jane&quot;, 7, 1);			
	}
	
	@Override
	public void onEvent(Event arg0) throws Exception {
		// TODO Auto-generated method stub
		
	}
	
	/**
	 * internal method to convert date&amp;amp;time from string to epoch milliseconds
	 * 
	 * @param date
	 * @return
	 * @throws Exception
	 */
	private long getDateTime(String date) throws Exception {
		return sdf.parse(date).getTime();
	}

}
 </pre>]]></html></tabpanel>
			</tabpanels>
			</tabbox>
		</groupbox>
		<groupbox mold="3d" width="100%" open="false">
			<caption label="Inverted axes" />
			<tabbox>
				<tabs>
					<tab label="Overview" />
					<tab label="demo.zul" />
					<tab label="DemoComposer.java" />
				</tabs>
				<tabpanels>
					<tabpanel><zhighcharts id="chartComp16" /></tabpanel>
					<tabpanel><html><![CDATA[ 
						<pre class="brush:xml">
&lt;window title=&quot;Inverted axes&quot; border=&quot;normal&quot; width=&quot;100%&quot;
	use=&quot;ctrl.DemoComposer&quot;&gt;
	&lt;zhighcharts id=&quot;chartComp16&quot; /&gt;
&lt;/window&gt;
						</pre>]]></html>
					</tabpanel>
					<tabpanel><html><![CDATA[ <pre class="brush:java">
package ctrl;

import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.HashMap;
import java.util.Map;

import org.ngi.zhighcharts.SimpleExtXYModel;
import org.ngi.zhighcharts.ZHighCharts;
import org.zkoss.util.logging.Log;
import org.zkoss.zk.ui.event.Event;
import org.zkoss.zk.ui.event.EventListener;
import org.zkoss.zul.SimplePieModel;
import org.zkoss.zul.Window;

public class DemoComposer extends Window implements EventListener {
	protected Log logger = Log.lookup(this.getClass());
	
	//Inverted axes
	private ZHighCharts chartComp16;
	private SimpleExtXYModel dataChartModel16 = new SimpleExtXYModel();

	// date format used to capture date time
	private SimpleDateFormat sdf = new SimpleDateFormat(&quot;yyyy-MM-dd HH:mm:ss z&quot;);
	
	public void onCreate() throws Exception {

		//================================================================================
	    // Inverted axes
	    //================================================================================
		
		chartComp16 = (ZHighCharts) getFellow(&quot;chartComp16&quot;);
		chartComp16.setType(&quot;area&quot;);
		chartComp16.setOptions(&quot;{&quot; +
					&quot;inverted:true&quot; +
				&quot;}&quot;);
		chartComp16.setTitle(&quot;Average fruit consumption during one week&quot;);
		chartComp16.setxAxisOptions(&quot;{&quot; +
					&quot;categories: [&quot; +
						&quot;'Monday',&quot; +
						&quot;'Tuesday',&quot; +
						&quot;'Wednesday',&quot; +
						&quot;'Thursday',&quot; +
						&quot;'Friday',&quot; +
						&quot;'Saturday',&quot; +
						&quot;'Sunday'&quot; +
					&quot;]&quot; +
				&quot;}&quot;);
		chartComp16.setyAxisOptions(&quot;{&quot; +
					&quot;labels: {&quot; +
						&quot;formatter: function() {&quot; +
							&quot;return this.value;&quot; +
						&quot;}&quot; +
					&quot;},&quot; +
					&quot;min: 0&quot; +
				&quot;}&quot;);
		chartComp16.setTooltipFormatter(&quot;function formatTooltip(obj){&quot; +
					&quot;return ''+obj.x +': '+ obj.y;&quot; +
				&quot;}&quot;);
		chartComp16.setYAxisTitle(&quot;Number of units&quot;);
		chartComp16.setLegend(&quot;{&quot; +
					&quot;layout: 'vertical',&quot; +
					&quot;align: 'right',&quot; +
					&quot;verticalAlign: 'top',&quot; +
					&quot;x: -150,&quot; +
					&quot;y: 100,&quot; +
					&quot;floating: true,&quot; +
					&quot;borderWidth: 1,&quot; +
					&quot;backgroundColor: '#FFFFFF'&quot; +
				&quot;}&quot;);
		chartComp16.setPlotOptions(&quot;{&quot; +
					&quot;area: {&quot; +
						&quot;fillOpacity: 0.5&quot; +
					&quot;}&quot; +
				&quot;}&quot;);
				
		chartComp16.setModel(dataChartModel16);
		
		//Adding some data to the model
		
		dataChartModel16.addValue(&quot;John&quot;, 0, 3);
		dataChartModel16.addValue(&quot;John&quot;, 1, 4);
		dataChartModel16.addValue(&quot;John&quot;, 2, 3);
		dataChartModel16.addValue(&quot;John&quot;, 3, 5);
		dataChartModel16.addValue(&quot;John&quot;, 4, 4);
		dataChartModel16.addValue(&quot;John&quot;, 5, 10);
		dataChartModel16.addValue(&quot;John&quot;, 6, 12);
		
		dataChartModel16.addValue(&quot;Jane&quot;, 0, 1);
		dataChartModel16.addValue(&quot;Jane&quot;, 1, 3);
		dataChartModel16.addValue(&quot;Jane&quot;, 2, 4);
		dataChartModel16.addValue(&quot;Jane&quot;, 3, 3);
		dataChartModel16.addValue(&quot;Jane&quot;, 4, 3);
		dataChartModel16.addValue(&quot;Jane&quot;, 5, 5);
		dataChartModel16.addValue(&quot;Jane&quot;, 6, 4);
		
		
	}
	
	@Override
	public void onEvent(Event arg0) throws Exception {
		// TODO Auto-generated method stub
		
	}
	
	/**
	 * internal method to convert date&amp;amp;time from string to epoch milliseconds
	 * 
	 * @param date
	 * @return
	 * @throws Exception
	 */
	private long getDateTime(String date) throws Exception {
		return sdf.parse(date).getTime();
	}

}
 </pre>]]></html></tabpanel>
			</tabpanels>
			</tabbox>
		</groupbox>
		<groupbox mold="3d" width="100%" open="false">
			<caption label="Area-spline" />
			<tabbox>
				<tabs>
					<tab label="Overview" />
					<tab label="demo.zul" />
					<tab label="DemoComposer.java" />
				</tabs>
				<tabpanels>
					<tabpanel><zhighcharts id="chartComp17" /></tabpanel>
					<tabpanel><html><![CDATA[ 
						<pre class="brush:xml">
&lt;window title=&quot;Area-spline&quot; border=&quot;normal&quot; width=&quot;100%&quot;
	use=&quot;ctrl.DemoComposer&quot;&gt;
	&lt;zhighcharts id=&quot;chartComp17&quot; /&gt;
&lt;/window&gt;
						</pre>]]></html>
					</tabpanel>
					<tabpanel><html><![CDATA[ <pre class="brush:java">
package ctrl;

import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.HashMap;
import java.util.Map;

import org.ngi.zhighcharts.SimpleExtXYModel;
import org.ngi.zhighcharts.ZHighCharts;
import org.zkoss.util.logging.Log;
import org.zkoss.zk.ui.event.Event;
import org.zkoss.zk.ui.event.EventListener;
import org.zkoss.zul.SimplePieModel;
import org.zkoss.zul.Window;

public class DemoComposer extends Window implements EventListener {
	protected Log logger = Log.lookup(this.getClass());
	
	//Area-spline
	private ZHighCharts chartComp17;

	// date format used to capture date time
	private SimpleDateFormat sdf = new SimpleDateFormat(&quot;yyyy-MM-dd HH:mm:ss z&quot;);
	
	public void onCreate() throws Exception {

		//================================================================================
	    // Area-spline
	    //================================================================================
		
		
		chartComp17 = (ZHighCharts) getFellow("chartComp17");
		chartComp17.setType("areaspline");
		chartComp17.setTitle("Average fruit consumption during one week");
		chartComp17.setxAxisOptions("{" +
					"categories: [" +
						"'Monday'," +
						"'Tuesday'," +
						"'Wednesday'," +
						"'Thursday'," +
						"'Friday'," +
						"'Saturday'," +
						"'Sunday'" +
					"]," +
					"plotBands: [" +
						"{" +
							"from: 4.5," +
							"to: 6.5," +
							"color: 'rgba(68, 170, 213, .2)'" +
						"}" +
					"]" +
				"}");
		chartComp17.setyAxisOptions("{" +
					"labels: {" +
						"formatter: function() {" +
							"return this.value;" +
						"}" +
					"}," +
					"min: 0" +
				"}");
		chartComp17.setTooltipFormatter("function formatTooltip(obj){" +
					"return ''+obj.x +': '+ obj.y +' units';" +
				"}");
		chartComp17.setYAxisTitle("Fruit units");
		chartComp17.setLegend("{" +
					"layout: 'vertical'," +
					"align: 'left'," +
					"verticalAlign: 'top'," +
					"x: 150," +
					"y: 100," +
					"floating: true," +
					"borderWidth: 1," +
					"backgroundColor: '#FFFFFF'" +
				"}");
		chartComp17.setPlotOptions("{" +
					"areaspline: {" +
						"fillOpacity: 0.5" +
					"}" +
				"}");
				
		chartComp17.setModel(dataChartModel16);
					
	}
	
	@Override
	public void onEvent(Event arg0) throws Exception {
		// TODO Auto-generated method stub
		
	}
	
	/**
	 * internal method to convert date&amp;time from string to epoch milliseconds
	 * 
	 * @param date
	 * @return
	 * @throws Exception
	 */
	private long getDateTime(String date) throws Exception {
		return sdf.parse(date).getTime();
	}

}
 </pre>]]></html></tabpanel>
			</tabpanels>
			</tabbox>
		</groupbox>
		
		<label value="Column and bar charts" style="font-size:2em;"/>
		<groupbox mold="3d" width="100%" open="false">
			<caption label="Basic bar" />
			<tabbox>
				<tabs>
					<tab label="Overview" />
					<tab label="demo.zul" />
					<tab label="DemoComposer.java" />
				</tabs>
				<tabpanels>
					<tabpanel><zhighcharts id="chartComp18" /></tabpanel>
					<tabpanel><html><![CDATA[ 
						<pre class="brush:xml">
&lt;window title=&quot;Basic bar&quot; border=&quot;normal&quot; width=&quot;100%&quot;
	use=&quot;ctrl.DemoComposer&quot;&gt;
	&lt;zhighcharts id=&quot;chartComp18&quot; /&gt;
&lt;/window&gt;
						</pre>]]></html>
					</tabpanel>
					<tabpanel><html><![CDATA[ <pre class="brush:java">
package ctrl;

import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.HashMap;
import java.util.Map;

import org.ngi.zhighcharts.SimpleExtXYModel;
import org.ngi.zhighcharts.ZHighCharts;
import org.zkoss.util.logging.Log;
import org.zkoss.zk.ui.event.Event;
import org.zkoss.zk.ui.event.EventListener;
import org.zkoss.zul.SimplePieModel;
import org.zkoss.zul.Window;

public class DemoComposer extends Window implements EventListener {
	protected Log logger = Log.lookup(this.getClass());
	
	//Basic bar
	private ZHighCharts chartComp18;
	private SimpleExtXYModel dataChartModel18 = new SimpleExtXYModel();

	// date format used to capture date time
	private SimpleDateFormat sdf = new SimpleDateFormat(&quot;yyyy-MM-dd HH:mm:ss z&quot;);
	
	public void onCreate() throws Exception {

		//================================================================================
	    // Basic bar
	    //================================================================================
		
		
		chartComp18 = (ZHighCharts) getFellow("chartComp18");
		chartComp18.setType("bar");
		chartComp18.setTitle("Historic World Population by Region");
		chartComp18.setSubTitle("Source: Wikipedia.org");
		chartComp18.setxAxisOptions("{" +
					"categories: [" +
						"'Africa', " +
						"'America', " +
						"'Asia', " +
						"'Europe', " +
						"'Oceania'" +
					"]" +
				"}");
		chartComp18.setyAxisOptions("{" +
					"min: 0," +
					"labels: {" +
						"overflow: 'justify'" +
					"}" +
				"}");
		chartComp18.setTooltipFormatter("function formatTooltip(obj){" +
					"return ''+obj.series.name +': '+ obj.y +' millions';" +
				"}");
		chartComp18.setYAxisTitle("Population (millions)");
		chartComp18.setLegend("{" +
					"layout: 'vertical'," +
					"align: 'right'," +
					"verticalAlign: 'top'," +
					"x: -100," +
					"y: 100," +
					"floating: true," +
					"borderWidth: 1," +
					"backgroundColor: '#FFFFFF'," +
					"shadow: true" +
				"}");
		chartComp18.setPlotOptions("{" +
					"bar: {" +
						"dataLabels: {" +
							"enabled: true" +
						"}" +
					"}" +
				"}");
				
		chartComp18.setModel(dataChartModel18);
		
		//Adding some data to the model

		dataChartModel18.addValue("Year 1800", 0, 107);
		dataChartModel18.addValue("Year 1800", 1, 31);
		dataChartModel18.addValue("Year 1800", 2, 635);
		dataChartModel18.addValue("Year 1800", 3, 203);
		dataChartModel18.addValue("Year 1800", 4, 2);
		
		dataChartModel18.addValue("Year 1900", 0, 133);
		dataChartModel18.addValue("Year 1900", 1, 156);
		dataChartModel18.addValue("Year 1900", 2, 947);
		dataChartModel18.addValue("Year 1900", 3, 408);
		dataChartModel18.addValue("Year 1900", 4, 6);
		
		dataChartModel18.addValue("Year 2008", 0, 973);
		dataChartModel18.addValue("Year 2008", 1, 914);
		dataChartModel18.addValue("Year 2008", 2, 4054);
		dataChartModel18.addValue("Year 2008", 3, 732);
		dataChartModel18.addValue("Year 2008", 4, 34);
					
	}
	
	@Override
	public void onEvent(Event arg0) throws Exception {
		// TODO Auto-generated method stub
		
	}
	
	/**
	 * internal method to convert date&amp;time from string to epoch milliseconds
	 * 
	 * @param date
	 * @return
	 * @throws Exception
	 */
	private long getDateTime(String date) throws Exception {
		return sdf.parse(date).getTime();
	}

}
 </pre>]]></html></tabpanel>
			</tabpanels>
			</tabbox>
		</groupbox>
		<groupbox mold="3d" width="100%" open="false">
			<caption label="Stacked bar" />
			<tabbox>
				<tabs>
					<tab label="Overview" />
					<tab label="demo.zul" />
					<tab label="DemoComposer.java" />
				</tabs>
				<tabpanels>
					<tabpanel><zhighcharts id="chartComp19" /></tabpanel>
					<tabpanel><html><![CDATA[ 
						<pre class="brush:xml">
&lt;window title=&quot;Stacked bar&quot; border=&quot;normal&quot; width=&quot;100%&quot;
	use=&quot;ctrl.DemoComposer&quot;&gt;
	&lt;zhighcharts id=&quot;chartComp19&quot; /&gt;
&lt;/window&gt;
						</pre>]]></html>
					</tabpanel>
					<tabpanel><html><![CDATA[ <pre class="brush:java">
package ctrl;

import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.HashMap;
import java.util.Map;

import org.ngi.zhighcharts.SimpleExtXYModel;
import org.ngi.zhighcharts.ZHighCharts;
import org.zkoss.util.logging.Log;
import org.zkoss.zk.ui.event.Event;
import org.zkoss.zk.ui.event.EventListener;
import org.zkoss.zul.SimplePieModel;
import org.zkoss.zul.Window;

public class DemoComposer extends Window implements EventListener {
	protected Log logger = Log.lookup(this.getClass());
	
	//Stacked bar
	private ZHighCharts chartComp19;
	private SimpleExtXYModel dataChartModel19 = new SimpleExtXYModel();

	// date format used to capture date time
	private SimpleDateFormat sdf = new SimpleDateFormat(&quot;yyyy-MM-dd HH:mm:ss z&quot;);
	
	public void onCreate() throws Exception {

		//================================================================================
	    // Stacked bar
	    //================================================================================
				
		chartComp19 = (ZHighCharts) getFellow("chartComp19");
		chartComp19.setType("bar");
		chartComp19.setTitle("Stacked bar chart");
		chartComp19.setxAxisOptions("{" +
					"categories: [" +
						"'Apples', " +
						"'Oranges', " +
						"'Pears', " +
						"'Grapes', " +
						"'Bananas'" +
					"]" +
				"}");
		chartComp19.setyAxisOptions("{" +
					"min: 0" +
				"}");
		chartComp19.setTooltipFormatter("function formatTooltip(obj){" +
					"return ''+obj.series.name +': '+ obj.y +'';" +
				"}");
		chartComp19.setYAxisTitle("Total fruit consumption");
		chartComp19.setLegend("{" +
					"backgroundColor: '#FFFFFF', " +
					"reversed: true" +
				"}");
		chartComp19.setPlotOptions("{" +
					"series: {" +
						"stacking: 'normal'" +
					"}" +
				"}");
				
		chartComp19.setModel(dataChartModel12);
					
	}
	
	@Override
	public void onEvent(Event arg0) throws Exception {
		// TODO Auto-generated method stub
		
	}
	
	/**
	 * internal method to convert date&amp;time from string to epoch milliseconds
	 * 
	 * @param date
	 * @return
	 * @throws Exception
	 */
	private long getDateTime(String date) throws Exception {
		return sdf.parse(date).getTime();
	}

}
 </pre>]]></html></tabpanel>
			</tabpanels>
			</tabbox>
		</groupbox>
		<groupbox mold="3d" width="100%" open="false">
			<caption label="Bar with negative stack" />
			<tabbox>
				<tabs>
					<tab label="Overview" />
					<tab label="demo.zul" />
					<tab label="DemoComposer.java" />
				</tabs>
				<tabpanels>
					<tabpanel><zhighcharts id="chartComp23" /></tabpanel>
					<tabpanel><html><![CDATA[ 
						<pre class="brush:xml">
&lt;window title=&quot;Basic bar&quot; border=&quot;normal&quot; width=&quot;100%&quot;
	use=&quot;ctrl.DemoComposer&quot;&gt;
	&lt;zhighcharts id=&quot;chartComp23&quot; /&gt;
&lt;/window&gt;
						</pre>]]></html>
					</tabpanel>
					<tabpanel><html><![CDATA[ <pre class="brush:java">
package ctrl;

import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.HashMap;
import java.util.Map;

import org.ngi.zhighcharts.SimpleExtXYModel;
import org.ngi.zhighcharts.ZHighCharts;
import org.zkoss.util.logging.Log;
import org.zkoss.zk.ui.event.Event;
import org.zkoss.zk.ui.event.EventListener;
import org.zkoss.zul.SimplePieModel;
import org.zkoss.zul.Window;
	
	public class DemoComposer extends Window implements EventListener {
		protected Log logger = Log.lookup(this.getClass());
		
		//Bar with negative stack
		private ZHighCharts chartComp23;
		private SimpleExtXYModel dataChartModel23 = new SimpleExtXYModel();
	
		// date format used to capture date time
		private SimpleDateFormat sdf = new SimpleDateFormat(&quot;yyyy-MM-dd HH:mm:ss z&quot;);
		
		public void onCreate() throws Exception {
		//================================================================================
	   // Bar with negative stack
	   //================================================================================
			
		chartComp23 = (ZHighCharts) getFellow(&quot;chartComp23&quot;);
		chartComp23.setType(&quot;bar&quot;);
		chartComp23.setTitle(&quot;Population pyramid for Germany, midyear 2010&quot;);
		chartComp23.setSubTitle(&quot;Source: www.census.gov&quot;);
		chartComp23.setxAxisOptions(&quot;[&quot; +
					&quot;{&quot; +
						&quot;categories : [&quot; +
							&quot;'0-4', '5-9', '10-14', '15-19', '20-24', '25-29', '30-34', '35-39',&quot; +
							&quot; '40-44','45-49', '50-54', '55-59', '60-64', '65-69','70-74', '75-79',&quot; +
							&quot; '80-84', '85-89', '90-94','95-99', '100 +'&quot; +
						&quot;],&quot; +
						&quot;reversed: false &quot; +
					&quot;}, &quot; +
					&quot;{ &quot; +
						&quot;opposite: true,&quot; +
						&quot;reversed: false,&quot; +
						&quot;categories: [&quot; +
							&quot;'0-4', '5-9', '10-14', '15-19', '20-24', '25-29', '30-34', '35-39',&quot; +
							&quot; '40-44','45-49', '50-54', '55-59', '60-64', '65-69','70-74', '75-79',&quot; +
							&quot; '80-84', '85-89', '90-94','95-99', '100 +'&quot; +
						&quot;],&quot; +
						&quot;linkedTo: 0&quot; +
					&quot;}&quot; +
				&quot;]&quot;);
		chartComp23.setyAxisOptions(&quot;{&quot; +
					&quot;labels: {&quot; +
						&quot;formatter: function(){&quot; +
							&quot;return (Math.abs(this.value) / 1000000) + 'M';&quot; +
						&quot;}&quot; +
					&quot;},&quot; +
					&quot;min: -4000000,&quot; +
					&quot;max: 4000000&quot; +
				&quot;}&quot;);
		chartComp23.setPlotOptions(&quot;{&quot; +
					&quot;series: {&quot; +
						&quot;stacking: 'normal'&quot; +
					&quot;}&quot; +
				&quot;}&quot;);
		chartComp23.setLegend(&quot;{&quot; +
					&quot;enabled: false &quot; +
				&quot;}&quot;);
		chartComp23.setTooltipFormatter(&quot;function formatTooltip(obj){&quot; +
					&quot;return '&lt;b&gt;'+ obj.series.name +', age '+ obj.point.category +'&lt;/b&gt;&lt;br/&gt;&quot; +
					&quot;'+'Population: '+ Highcharts.numberFormat(Math.abs(obj.point.y), 0);&quot; +
				&quot;}&quot;);
		
		chartComp23.setModel(dataChartModel23);
		
		//Adding some data to the model
		
		Number maleBarData [] = {
				-1746181, -1884428, -2089758, -2222362, -2537431, -2507081, -2443179,
		              -2664537, -3556505, -3680231, -3143062, -2721122, -2229181, -2227768,
		              -2176300, -1329968, -836804, -354784, -90569, -28367, -3878
		};
		
		for(int mb = 0; mb&lt;maleBarData.length;mb++ ){
			dataChartModel23.addValue(&quot;Male&quot;,mb, maleBarData[mb]);
		}
		
		Number femaleBarData [] = {
				-1656154, 1787564, 1981671, 2108575, 2403438, 2366003, 2301402, 2519874,
		              3360596, 3493473, 3050775, 2759560, 2304444, 2426504, 2568938, 1785638,
		              1447162, 1005011, 330870, 130632, 21208
		};
		
		for(int fmb = 0; fmb&lt;femaleBarData.length;fmb++ ){
			dataChartModel23.addValue(&quot;Female&quot;,fmb, femaleBarData[fmb]);
		}
		
	}
		
	@Override
	public void onEvent(Event arg0) throws Exception {
		// TODO Auto-generated method stub
		
	}
	
	/**
	 * internal method to convert date&amp;time from string to epoch milliseconds
	 * 
	 * @param date
	 * @return
	 * @throws Exception
	 */
	private long getDateTime(String date) throws Exception {
		return sdf.parse(date).getTime();
	}
} 
				</pre>]]></html></tabpanel>
			</tabpanels>
			</tabbox>
		</groupbox>
		<groupbox mold="3d" width="100%" open="false">
			<caption label="Basic column" />
			<tabbox>
				<tabs>
					<tab label="Overview" />
					<tab label="demo.zul" />
					<tab label="DemoComposer.java" />
				</tabs>
				<tabpanels>
					<tabpanel><zhighcharts id="chartComp25" /></tabpanel>
					<tabpanel><html><![CDATA[ 
						<pre class="brush:xml">
&lt;window title=&quot;Basic column&quot; border=&quot;normal&quot; width=&quot;100%&quot;
	use=&quot;ctrl.DemoComposer&quot;&gt;
	&lt;zhighcharts id=&quot;chartComp25&quot; /&gt;
&lt;/window&gt;
						</pre> ]]></html>
					</tabpanel>
					<tabpanel><html><![CDATA[ <pre class="brush:java">
package ctrl;

import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.HashMap;
import java.util.Map;

import org.ngi.zhighcharts.SimpleExtXYModel;
import org.ngi.zhighcharts.ZGauge;
import org.ngi.zhighcharts.ZHighCharts;
import org.zkoss.util.logging.Log;
import org.zkoss.zk.ui.event.Event;
import org.zkoss.zk.ui.event.EventListener;
import org.zkoss.zul.SimplePieModel;
import org.zkoss.zul.Window;

public class DemoComposerBar extends Window implements EventListener {
	protected Log logger = Log.lookup(this.getClass());

	// Basic column
	private ZHighCharts chartComp25;
	private SimpleExtXYModel dataChartModel25 = new SimpleExtXYModel();
	
	// Stacked and grouped column
	private SimpleDateFormat sdf = new SimpleDateFormat(&quot;yyyy-MM-dd HH:mm:ss z&quot;);

	public void onCreate() throws Exception {

		//================================================================================
	    // Basic column
	    //================================================================================

		chartComp25 = (ZHighCharts) getFellow(&quot;chartComp25&quot;);
		chartComp25.setType(&quot;column&quot;);
		chartComp25.setTitle(&quot;Monthly Average New York&quot;);
		chartComp25.setSubTitle(&quot;Source: WorldClimate.com&quot;);
		chartComp25.setxAxisOptions(&quot;{&quot; +
				&quot;categories: [&quot; +
					&quot;'Jan', &quot; +
					&quot;'Feb', &quot; +
					&quot;'Mar', &quot; +
					&quot;'Apr', &quot; +
					&quot;'May', &quot; +
					&quot;'Jun', &quot; +
					&quot;'Jul', &quot; +
					&quot;'Aug', &quot; +
					&quot;'Sep', &quot; +
					&quot;'Oct', &quot; +
					&quot;'Nov', &quot; +
					&quot;'Dec'&quot; +
				&quot;]&quot; +
			&quot;}&quot;);
		chartComp25.setyAxisOptions(&quot;{ &quot; +
					&quot;min:0&quot; +
				&quot;}&quot;);
		chartComp25.setYAxisTitle(&quot;New York (mm)&quot;);
		chartComp25.setTooltipFormatter(&quot;function formatTooltip(obj){ &quot; +
					&quot;return ''+obj.x +': '+ obj.y +' mm';&quot; +
				&quot;}&quot;);
		chartComp25.setLegend(&quot;{&quot; +
					&quot;layout: 'vertical',&quot; +
					&quot;backgroundColor: '#FFFFFF',&quot; +
					&quot;align: 'left',&quot; +
					&quot;verticalAlign: 'top',&quot; +
					&quot;x: 100,&quot; +
					&quot;y: 70,&quot; +
					&quot;floating: true,&quot; +
					&quot;shadow: true&quot; +
				&quot;}&quot;);
		chartComp25.setPlotOptions(&quot;{&quot; +
					&quot;column: {&quot; +
						&quot;pointPadding: 0.2,&quot; +
						&quot;borderWidth: 0&quot; +
					&quot;}&quot; +
				&quot;}&quot;);
		
		chartComp25.setModel(dataChartModel25);
		
		//Adding some data to the model
		
		Number TOKdata [] = { 49.9, 71.5, 106.4, 129.2, 144.0, 176.0,
				135.6, 148.5, 216.4, 194.1, 95.6, 54.4};
		for(int i = 0; i &lt; TOKdata.length; i++)
			dataChartModel25.addValue(&quot;Tokyo&quot;, i, TOKdata[i]);
		
		Number NYdata [] = { 83.6, 78.8, 98.5, 93.4, 106.0, 84.5,
				105.0, 104.3, 91.2, 83.5, 106.6, 92.3};
		for(int i = 0; i &lt; NYdata.length; i++)
			dataChartModel25.addValue(&quot;New York&quot;, i, NYdata[i]);
		
		Number LNDdata [] = { 48.9, 38.8, 39.3, 41.4, 47.0, 48.3, 59.0,
				59.6, 52.4, 65.2, 59.3, 51.2};
		for(int i = 0; i &lt; LNDdata.length; i++)
			dataChartModel25.addValue(&quot;London&quot;, i, LNDdata[i]);

		Number BRLdata [] = { 42.4, 33.2, 34.5, 39.7, 52.6, 75.5, 57.4,
				60.4, 47.6, 39.1, 46.8, 51.1};
		for(int i = 0; i &lt; BRLdata.length; i++)
			dataChartModel25.addValue(&quot;Berlin&quot;, i, BRLdata[i]);
			
	}

	@Override
	public void onEvent(Event arg0) throws Exception {
		// TODO Auto-generated method stub

	}

	/**
	 * internal method to convert date&amp;time from string to epoch milliseconds
	 * 
	 * @param date
	 * @return
	 * @throws Exception
	 */
	private long getDateTime(String date) throws Exception {
		return sdf.parse(date).getTime();
	}

}
					 </pre>]]></html></tabpanel>
			</tabpanels>
			</tabbox>
		</groupbox>
		<groupbox mold="3d" width="100%" open="false">
			<caption label="Column with negative values" />
			<tabbox>
				<tabs>
					<tab label="Overview" />
					<tab label="demo.zul" />
					<tab label="DemoComposer.java" />
				</tabs>
				<tabpanels>
					<tabpanel><zhighcharts id="chartComp26" /></tabpanel>
					<tabpanel><html><![CDATA[ 
						<pre class="brush:xml">
&lt;window title=&quot;Column with negative values&quot; border=&quot;normal&quot; width=&quot;100%&quot;
	use=&quot;ctrl.DemoComposer&quot;&gt;
	&lt;zhighcharts id=&quot;chartComp26&quot; /&gt;
&lt;/window&gt;
						</pre> ]]></html>
					</tabpanel>
					<tabpanel><html><![CDATA[ <pre class="brush:java">
package ctrl;

import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.HashMap;
import java.util.Map;

import org.ngi.zhighcharts.SimpleExtXYModel;
import org.ngi.zhighcharts.ZGauge;
import org.ngi.zhighcharts.ZHighCharts;
import org.zkoss.util.logging.Log;
import org.zkoss.zk.ui.event.Event;
import org.zkoss.zk.ui.event.EventListener;
import org.zkoss.zul.SimplePieModel;
import org.zkoss.zul.Window;

public class DemoComposerBar extends Window implements EventListener {
	protected Log logger = Log.lookup(this.getClass());

	// Column with negative values
	private ZHighCharts chartComp26;
	private SimpleExtXYModel dataChartModel26 = new SimpleExtXYModel();
	
	// Stacked and grouped column
	private SimpleDateFormat sdf = new SimpleDateFormat(&quot;yyyy-MM-dd HH:mm:ss z&quot;);

	public void onCreate() throws Exception {

		//================================================================================
	    // Column with negative values
	    //================================================================================
		
		chartComp26 = (ZHighCharts) getFellow(&quot;chartComp26&quot;);
		chartComp26.setType(&quot;column&quot;);
		chartComp26.setTitle(&quot;Column chart with negative values&quot;);
		chartComp26.setxAxisOptions(&quot;{&quot; +
				&quot;categories: [&quot; +
					&quot;'Apples',&quot; +
					&quot;'Oranges', &quot; +
					&quot;'Pears', &quot; +
					&quot;'Grapes', &quot; +
					&quot;'Bananas'&quot; +
				&quot;]&quot; +
			&quot;}&quot;);
		chartComp26.setTooltipFormatter(&quot;function formatTooltip(obj){ &quot; +
					&quot;return ''+obj.series.name +': '+ obj.y +'';&quot; +
				&quot;}&quot;);
		
		chartComp26.setModel(dataChartModel26);
		
		Number Johndata [] = { 5, 3, 4, 7, 2};
		for(int i = 0; i &lt; Johndata.length; i++)
			dataChartModel26.addValue(&quot;John&quot;, i, Johndata[i]);
		
		Number Janedata [] = {2, -2, -3, 2, 1};
		for(int i = 0; i &lt; Janedata.length; i++)
			dataChartModel26.addValue(&quot;Jane&quot;, i, Janedata[i]);
		
		Number Joedata [] = { 3, 4, 4, -2, 5};
		for(int i = 0; i &lt; Joedata.length; i++)
			dataChartModel26.addValue(&quot;Joe&quot;, i, Joedata[i]);		
	}

	@Override
	public void onEvent(Event arg0) throws Exception {
		// TODO Auto-generated method stub

	}

	/**
	 * internal method to convert date&amp;time from string to epoch milliseconds
	 * 
	 * @param date
	 * @return
	 * @throws Exception
	 */
	private long getDateTime(String date) throws Exception {
		return sdf.parse(date).getTime();
	}

}
					 </pre>]]></html></tabpanel>
			</tabpanels>
			</tabbox>
		</groupbox>
		<groupbox mold="3d" width="100%" open="false">
			<caption label="Stacked column" />
			<tabbox>
				<tabs>
					<tab label="Overview" />
					<tab label="demo.zul" />
					<tab label="DemoComposer.java" />
				</tabs>
				<tabpanels>
					<tabpanel><zhighcharts id="chartComp27" /></tabpanel>
					<tabpanel><html><![CDATA[ 
						<pre class="brush:xml">
&lt;window title=&quot;Stacked column&quot; border=&quot;normal&quot; width=&quot;100%&quot;
	use=&quot;ctrl.DemoComposer&quot;&gt;
	&lt;zhighcharts id=&quot;chartComp27&quot; /&gt;
&lt;/window&gt;
						</pre> ]]></html>
					</tabpanel>
					<tabpanel><html><![CDATA[ <pre class="brush:java">
package ctrl;

import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.HashMap;
import java.util.Map;

import org.ngi.zhighcharts.SimpleExtXYModel;
import org.ngi.zhighcharts.ZGauge;
import org.ngi.zhighcharts.ZHighCharts;
import org.zkoss.util.logging.Log;
import org.zkoss.zk.ui.event.Event;
import org.zkoss.zk.ui.event.EventListener;
import org.zkoss.zul.SimplePieModel;
import org.zkoss.zul.Window;

public class DemoComposerBar extends Window implements EventListener {
	protected Log logger = Log.lookup(this.getClass());

	// Stacked column
	private ZHighCharts chartComp27;
	private SimpleExtXYModel dataChartModel27 = new SimpleExtXYModel();
	
	// Stacked and grouped column
	private SimpleDateFormat sdf = new SimpleDateFormat(&quot;yyyy-MM-dd HH:mm:ss z&quot;);

	public void onCreate() throws Exception {

		//================================================================================
	    // Stacked column
	    //================================================================================

		chartComp27 = (ZHighCharts) getFellow(&quot;chartComp27&quot;);
		chartComp27.setType(&quot;column&quot;);
		chartComp27.setTitle(&quot;Stacked column chart&quot;);
		chartComp27.setxAxisOptions(&quot;{&quot; +
				&quot;categories: [&quot; +
					&quot;'Apples',&quot; +
					&quot;'Oranges', &quot; +
					&quot;'Pears', &quot; +
					&quot;'Grapes', &quot; +
					&quot;'Bananas'&quot; +
				&quot;]&quot; +
			&quot;}&quot;);
		chartComp27.setyAxisOptions(&quot;{&quot; +
					&quot;min: 0,&quot; +
					&quot;stackLabels: {&quot; +
						&quot;enabled: true,&quot; +
						&quot;style: {&quot; +
							&quot;fontWeight: 'bold',&quot; +
							&quot;color: (Highcharts.theme &amp;&amp; Highcharts.theme.textColor) || 'gray'&quot; +
						&quot;}&quot; +
					&quot;}&quot; +
				&quot;}&quot;);
		chartComp27.setYAxisTitle(&quot;Total fruit consumption&quot;);
		chartComp27.setTooltipFormatter(&quot;function formatTooltip(obj){ &quot; +
					&quot;return '&lt;b&gt;'+ obj.x +'&lt;/b&gt;&lt;br/&gt;&quot; +
					&quot;'+obj.series.name +': '+ obj.y +'&lt;br/&gt;&quot; +
					&quot;'+'Total: '+ obj.point.stackTotal;&quot; +
				&quot;}&quot;);
		chartComp27.setLegend(&quot;{&quot; +
					&quot;align: 'right',&quot; +
					&quot;x: -100, &quot; +
					&quot;verticalAlign: 'top', &quot; +
					&quot;y: 20,&quot; +
					&quot;floating: true,&quot; +
					&quot;backgroundColor: (Highcharts.theme &amp;&amp; Highcharts.theme.legendBackgroundColorSolid) || 'white',&quot; +
					&quot;borderColor: '#CCC',&quot; +
					&quot;borderWidth: 1, &quot; +
					&quot;shadow: false&quot; +
				&quot;}&quot;);
		chartComp27.setPlotOptions(&quot;{&quot; +
					&quot;column: {&quot; +
						&quot;stacking: 'normal',&quot; +
						&quot;dataLabels: { &quot; +
							&quot;enabled: true,&quot; +
							&quot;color: (Highcharts.theme &amp;&amp; Highcharts.theme.dataLabelsColor) || 'white'&quot; +
						&quot;}&quot; +
					&quot;}&quot; +
				&quot;}&quot;);
		
		chartComp27.setModel(dataChartModel27);
		
		Number Johndata27 [] = { 5, 3, 4, 7, 2};
		for(int i = 0; i &lt; Johndata27.length; i++)
			dataChartModel27.addValue(&quot;John&quot;, i, Johndata27[i]);
		
		Number Janedata27 [] = {2, 2, 3, 2, 1};
		for(int i = 0; i &lt; Janedata27.length; i++)
			dataChartModel27.addValue(&quot;Jane&quot;, i, Janedata27[i]);
		
		Number Joedata27 [] = { 3, 4, 4, 2, 5};
		for(int i = 0; i &lt; Joedata27.length; i++)
			dataChartModel27.addValue(&quot;Joe&quot;, i, Joedata27[i]);		
	}

	@Override
	public void onEvent(Event arg0) throws Exception {
		// TODO Auto-generated method stub

	}

	/**
	 * internal method to convert date&amp;time from string to epoch milliseconds
	 * 
	 * @param date
	 * @return
	 * @throws Exception
	 */
	private long getDateTime(String date) throws Exception {
		return sdf.parse(date).getTime();
	}

}
					 </pre>]]></html></tabpanel>
			</tabpanels>
			</tabbox>
		</groupbox>	
		<groupbox mold="3d" width="100%" open="false">
			<caption label="Stacked and grouped column" />
			<tabbox>
				<tabs>
					<tab label="Overview" />
					<tab label="demo.zul" />
					<tab label="DemoComposer.java" />
				</tabs>
				<tabpanels>
					<tabpanel><zhighcharts id="chartComp28" /></tabpanel>
					<tabpanel><html><![CDATA[ 
						<pre class="brush:xml">
&lt;window title=&quot;Stacked and grouped column&quot; border=&quot;normal&quot; width=&quot;100%&quot;
	use=&quot;ctrl.DemoComposer&quot;&gt;
	&lt;zhighcharts id=&quot;chartComp28&quot; /&gt;
&lt;/window&gt;
						</pre> ]]></html>
					</tabpanel>
					<tabpanel><html><![CDATA[ <pre class="brush:java">
package ctrl;

import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.HashMap;
import java.util.Map;

import org.ngi.zhighcharts.SimpleExtXYModel;
import org.ngi.zhighcharts.ZGauge;
import org.ngi.zhighcharts.ZHighCharts;
import org.zkoss.util.logging.Log;
import org.zkoss.zk.ui.event.Event;
import org.zkoss.zk.ui.event.EventListener;
import org.zkoss.zul.SimplePieModel;
import org.zkoss.zul.Window;

public class DemoComposerBar extends Window implements EventListener {
	protected Log logger = Log.lookup(this.getClass());

	// Stacked column
	private ZHighCharts chartComp28;
	private SimpleExtXYModel dataChartModel28 = new SimpleExtXYModel();
	
	// Stacked and grouped column
	private SimpleDateFormat sdf = new SimpleDateFormat(&quot;yyyy-MM-dd HH:mm:ss z&quot;);

	public void onCreate() throws Exception {

		//================================================================================
	    // Stacked and grouped column
	    //================================================================================

		chartComp28 = (ZHighCharts) getFellow(&quot;chartComp28&quot;);
		chartComp28.setType(&quot;column&quot;);
		chartComp28.setTitle(&quot;Total fruit consumtion, grouped by gender&quot;);
		chartComp28.setxAxisOptions(&quot;{&quot; +
				&quot;categories: [&quot; +
					&quot;'Apples',&quot; +
					&quot;'Oranges', &quot; +
					&quot;'Pears', &quot; +
					&quot;'Grapes', &quot; +
					&quot;'Bananas'&quot; +
				&quot;]&quot; +
			&quot;}&quot;);
		chartComp28.setyAxisOptions(&quot;{&quot; +
					&quot;min: 0,&quot; +
					&quot;allowDecimals: false,&quot; +
				&quot;}&quot;);
		chartComp28.setYAxisTitle(&quot;Number of fruits&quot;);
		chartComp28.setTooltipFormatter(&quot;function formatTooltip(obj){ &quot; +
					&quot;return '&lt;b&gt;'+ obj.x +'&lt;/b&gt;&lt;br/&gt;&quot; +
					&quot;'+obj.series.name +': '+ obj.y +'&lt;br/&gt;&quot; +
					&quot;'+'Total: '+ obj.point.stackTotal;&quot; +
				&quot;}&quot;);
		chartComp28.setPlotOptions(&quot;{&quot; +
					&quot;column: {&quot; +
						&quot;stacking: 'normal'&quot; +
					&quot;}&quot; +
				&quot;}&quot;);
		
		chartComp28.setModel(dataChartModel28);
		
		Number Johndata28 [] = { 5, 3, 4, 7, 2};
		for(int i = 0; i &lt; Johndata28.length; i++)
			dataChartModel28.addValue(&quot;John&quot;, i, Johndata28[i]);
		
		Map style = new HashMap();
		style.put(&quot;stack&quot;, &quot;male&quot;);
		chartComp28.setSeriesOptions(&quot;John&quot;, style);

		Number Joedata28 [] = { 3, 4, 4, 2, 5};
		for(int i = 0; i &lt; Joedata28.length; i++)
			dataChartModel28.addValue(&quot;Joe&quot;, i, Joedata28[i]);
		
		style = new HashMap();
		style.put(&quot;stack&quot;, &quot;male&quot;);
		chartComp28.setSeriesOptions(&quot;Joe&quot;, style);
		
		Number Janedata28 [] = {2, 5, 6, 2, 1};
		for(int i = 0; i &lt; Janedata28.length; i++)
			dataChartModel28.addValue(&quot;Jane&quot;, i, Janedata28[i]);
		
		style = new HashMap();
		style.put(&quot;stack&quot;, &quot;female&quot;);
		chartComp28.setSeriesOptions(&quot;Jane&quot;, style);
		
		Number Janetdata28 [] = {3, 0, 4, 4, 3};
		for(int i = 0; i &lt; Janetdata28.length; i++)
			dataChartModel28.addValue(&quot;Janet&quot;, i, Janetdata28[i]);
		
		style = new HashMap();
		style.put(&quot;stack&quot;, &quot;female&quot;);
		chartComp28.setSeriesOptions(&quot;Janet&quot;, style);
				
	}

	@Override
	public void onEvent(Event arg0) throws Exception {
		// TODO Auto-generated method stub

	}

	/**
	 * internal method to convert date&amp;time from string to epoch milliseconds
	 * 
	 * @param date
	 * @return
	 * @throws Exception
	 */
	private long getDateTime(String date) throws Exception {
		return sdf.parse(date).getTime();
	}

}
					 </pre>]]></html></tabpanel>
			</tabpanels>
			</tabbox>
		</groupbox>			
		<groupbox mold="3d" width="100%" open="false">
			<caption label="Stacked percentage column" />
			<tabbox>
				<tabs>
					<tab label="Overview" />
					<tab label="demo.zul" />
					<tab label="DemoComposer.java" />
				</tabs>
				<tabpanels>
					<tabpanel><zhighcharts id="chartComp29" /></tabpanel>
					<tabpanel><html><![CDATA[ 
						<pre class="brush:xml">
&lt;window title=&quot;Stacked percentage column&quot; border=&quot;normal&quot; width=&quot;100%&quot;
	use=&quot;ctrl.DemoComposer&quot;&gt;
	&lt;zhighcharts id=&quot;chartComp29&quot; /&gt;
&lt;/window&gt;
						</pre> ]]></html>
					</tabpanel>
					<tabpanel><html><![CDATA[ <pre class="brush:java">
package ctrl;

import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.HashMap;
import java.util.Map;

import org.ngi.zhighcharts.SimpleExtXYModel;
import org.ngi.zhighcharts.ZGauge;
import org.ngi.zhighcharts.ZHighCharts;
import org.zkoss.util.logging.Log;
import org.zkoss.zk.ui.event.Event;
import org.zkoss.zk.ui.event.EventListener;
import org.zkoss.zul.SimplePieModel;
import org.zkoss.zul.Window;

public class DemoComposerBar extends Window implements EventListener {
	protected Log logger = Log.lookup(this.getClass());

	// Stacked percentage column
	private ZHighCharts chartComp29;
	private SimpleExtXYModel dataChartModel29 = new SimpleExtXYModel();
	
	// Stacked and grouped column
	private SimpleDateFormat sdf = new SimpleDateFormat(&quot;yyyy-MM-dd HH:mm:ss z&quot;);

	public void onCreate() throws Exception {

		//================================================================================
	    // Stacked percentage column
	    //================================================================================

		chartComp29 = (ZHighCharts) getFellow(&quot;chartComp29&quot;);
		chartComp29.setType(&quot;column&quot;);
		chartComp29.setTitle(&quot;Stacked column chart&quot;);
		chartComp29.setxAxisOptions(&quot;{&quot; +
				&quot;categories: [&quot; +
					&quot;'Apples',&quot; +
					&quot;'Oranges', &quot; +
					&quot;'Pears', &quot; +
					&quot;'Grapes', &quot; +
					&quot;'Bananas'&quot; +
				&quot;]&quot; +
			&quot;}&quot;);
		chartComp29.setyAxisOptions(&quot;{&quot; +
					&quot;min: 0&quot; +
				&quot;}&quot;);
		chartComp29.setYAxisTitle(&quot;Total fruit consumption&quot;);
		chartComp29.setTooltipFormatter(&quot;function formatTooltip(obj){ &quot; +
					&quot;return ''+  obj.series.name +': '+ obj.y +' ('+ Math.round(obj.percentage) +'%)';&quot; +
				&quot;}&quot;);
		chartComp29.setPlotOptions(&quot;{&quot; +
					&quot;column: {&quot; +
						&quot;stacking: 'percent',&quot; +
					&quot;}&quot; +
				&quot;}&quot;);
		
		chartComp29.setModel(dataChartModel29);
		
		Number Johndata29 [] = { 5, 3, 4, 7, 2};
		for(int i = 0; i &lt; Johndata29.length; i++)
			dataChartModel29.addValue(&quot;John&quot;, i, Johndata29[i]);
		
		Number Janedata29 [] = {2, 2, 3, 2, 1};
		for(int i = 0; i &lt; Janedata29.length; i++)
			dataChartModel29.addValue(&quot;Jane&quot;, i, Janedata29[i]);
		
		Number Joedata29 [] = { 3, 4, 4, 2, 5};
		for(int i = 0; i &lt; Joedata29.length; i++)
			dataChartModel29.addValue(&quot;Joe&quot;, i, Joedata29[i]);			
	}

	@Override
	public void onEvent(Event arg0) throws Exception {
		// TODO Auto-generated method stub

	}

	/**
	 * internal method to convert date&amp;time from string to epoch milliseconds
	 * 
	 * @param date
	 * @return
	 * @throws Exception
	 */
	private long getDateTime(String date) throws Exception {
		return sdf.parse(date).getTime();
	}

}
					 </pre>]]></html></tabpanel>
			</tabpanels>
			</tabbox>
		</groupbox>	
		<groupbox mold="3d" width="100%" open="false">
			<caption label="Column with rotated labels" />
			<tabbox>
				<tabs>
					<tab label="Overview" />
					<tab label="demo.zul" />
					<tab label="DemoComposer.java" />
				</tabs>
				<tabpanels>
					<tabpanel><zhighcharts id="chartComp30" /></tabpanel>
					<tabpanel><html><![CDATA[ 
						<pre class="brush:xml">
&lt;window title=&quot;Column with rotated labels&quot; border=&quot;normal&quot; width=&quot;100%&quot;
	use=&quot;ctrl.DemoComposer&quot;&gt;
	&lt;zhighcharts id=&quot;chartComp30&quot; /&gt;
&lt;/window&gt;
						</pre> ]]></html>
					</tabpanel>
					<tabpanel><html><![CDATA[ <pre class="brush:java">
package ctrl;

import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.HashMap;
import java.util.Map;

import org.ngi.zhighcharts.SimpleExtXYModel;
import org.ngi.zhighcharts.ZGauge;
import org.ngi.zhighcharts.ZHighCharts;
import org.zkoss.util.logging.Log;
import org.zkoss.zk.ui.event.Event;
import org.zkoss.zk.ui.event.EventListener;
import org.zkoss.zul.SimplePieModel;
import org.zkoss.zul.Window;

public class DemoComposerBar extends Window implements EventListener {
	protected Log logger = Log.lookup(this.getClass());

	// Column with rotated labels
	private ZHighCharts chartComp30;
	private SimpleExtXYModel dataChartModel30 = new SimpleExtXYModel();
	
	// Stacked and grouped column
	private SimpleDateFormat sdf = new SimpleDateFormat(&quot;yyyy-MM-dd HH:mm:ss z&quot;);

	public void onCreate() throws Exception {

		//================================================================================
	    // Column with rotated labels
	    //================================================================================

		chartComp30 = (ZHighCharts) getFellow(&quot;chartComp30&quot;);
		chartComp30.setType(&quot;column&quot;);
		chartComp30.setOptions(&quot;{margin: [ 50, 50, 100, 80]}&quot;);
		chartComp30.setTitle(&quot;World\'s largest cities per 2008&quot;);
		chartComp30.setxAxisOptions(&quot;{&quot; +
				&quot;categories: [&quot; +
					&quot;'Tokyo',&quot;+
	                &quot;'Jakarta',&quot;+
	                &quot;'New York',&quot;+
	                &quot;'Seoul',&quot;+
	                &quot;'Manila',&quot;+
	                &quot;'Mumbai',&quot;+
	                &quot;'Sao Paulo',&quot;+
	                &quot;'Mexico City',&quot;+
	                &quot;'Dehli',&quot;+
	                &quot;'Osaka',&quot;+
	                &quot;'Cairo',&quot;+
	                &quot;'Kolkata',&quot;+
	                &quot;'Los Angeles',&quot;+
	                &quot;'Shanghai',&quot;+
	                &quot;'Moscow',&quot;+
	                &quot;'Beijing',&quot;+
	                &quot;'Buenos Aires',&quot;+
	                &quot;'Guangzhou',&quot;+
	                &quot;'Shenzhen',&quot;+
	                &quot;'Istanbul'&quot;+
				&quot;],&quot;+
                &quot;labels: {&quot;+
                    &quot;rotation: -45,&quot;+
                    &quot;align: 'right',&quot;+
                    &quot;style: {&quot;+
                        &quot;fontSize: '13px',&quot;+
                        &quot;fontFamily: 'Verdana, sans-serif'&quot;+
                    &quot;}&quot;+
                &quot;}&quot; +
			&quot;}&quot;);
		chartComp30.setyAxisOptions(&quot;{&quot; +
					&quot;min: 0&quot; +
				&quot;}&quot;);
		chartComp30.setYAxisTitle(&quot;Population (millions)&quot;);
		chartComp30.setLegend(&quot;{&quot;+
                &quot;enabled: false&quot;+
            &quot;}&quot;);
		chartComp30.setTooltipFormatter(&quot;function formatTooltip(obj){ &quot; +
					&quot;return '&lt;b&gt;'+ obj.x +'&lt;/b&gt;&lt;br/&gt;&quot; +
					&quot;'+'Population in 2008: '+Highcharts.numberFormat(obj.y, 1) +' millions';&quot; +
				&quot;}&quot;);
		
		chartComp30.setModel(dataChartModel30);
		
		Number Populationdata30 [] = { 34.4, 21.8, 20.1, 20, 19.6, 19.5, 19.1, 18.4, 18,
                17.3, 16.8, 15, 14.7, 14.5, 13.3, 12.8, 12.4, 11.8,
                11.7, 11.2};
		for(int i = 0; i &lt; Populationdata30.length; i++)
			dataChartModel30.addValue(&quot;Population&quot;, i, Populationdata30[i]);
		
		Map series = new HashMap();
		Map dataLabels = new HashMap();
		dataLabels.put(&quot;enabled&quot;, true);
		dataLabels.put(&quot;rotation&quot;, -90);
		dataLabels.put(&quot;color&quot;, &quot;#FFFFFF&quot;);
		dataLabels.put(&quot;align&quot;, &quot;right&quot;);
		dataLabels.put(&quot;x&quot;, -3);
		dataLabels.put(&quot;y&quot;, 10);
		style = new HashMap();
		style.put(&quot;fontSize&quot;, &quot;13px&quot;);
		style.put(&quot;fontFamily&quot;, &quot;Verdana, sans-serif&quot;);
		dataLabels.put(&quot;style&quot;, style);
		series.put(&quot;dataLabels&quot;, dataLabels);
		chartComp30.setSeriesOptions(&quot;Population&quot;, series);		
	}

	@Override
	public void onEvent(Event arg0) throws Exception {
		// TODO Auto-generated method stub

	}

	/**
	 * internal method to convert date&amp;time from string to epoch milliseconds
	 * 
	 * @param date
	 * @return
	 * @throws Exception
	 */
	private long getDateTime(String date) throws Exception {
		return sdf.parse(date).getTime();
	}

}
					 </pre>]]></html></tabpanel>
			</tabpanels>
			</tabbox>
		</groupbox>	
				
		<label value="Pie charts" style="font-size:2em;"/>
		<groupbox mold="3d" width="100%" open="false">
			<caption label="Pie chart" />
			<tabbox>
				<tabs>
					<tab label="Overview" />
					<tab label="demo.zul" />
					<tab label="DemoComposer.java" />
				</tabs>
				<tabpanels>
					<tabpanel><zhighcharts id="chartComp2" /></tabpanel>
					<tabpanel><html><![CDATA[ 
						<pre class="brush:xml">
&lt;window title=&quot;Pie chart&quot; border=&quot;normal&quot; width=&quot;100%&quot;
	use=&quot;ctrl.DemoComposer&quot;&gt;
	&lt;zhighcharts id=&quot;chartComp2&quot; /&gt;
&lt;/window&gt;
						</pre>]]></html>
					</tabpanel>
					<tabpanel><html><![CDATA[ <pre class="brush:java">
package ctrl;

import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.HashMap;
import java.util.Map;

import org.ngi.zhighcharts.SimpleExtXYModel;
import org.ngi.zhighcharts.ZHighCharts;
import org.zkoss.util.logging.Log;
import org.zkoss.zk.ui.event.Event;
import org.zkoss.zk.ui.event.EventListener;
import org.zkoss.zul.SimplePieModel;
import org.zkoss.zul.Window;

public class DemoComposer extends Window implements EventListener {
	protected Log logger = Log.lookup(this.getClass());
	
	//Pie chart
	private ZHighCharts chartComp2;
	private SimplePieModel pieModel = new SimplePieModel();

	// date format used to capture date time
	private SimpleDateFormat sdf = new SimpleDateFormat(&quot;yyyy-MM-dd HH:mm:ss z&quot;);
	
	public void onCreate() throws Exception {

		//================================================================================
	    // Pie chart
	    //================================================================================

		chartComp2 = (ZHighCharts) getFellow(&quot;chartComp2&quot;);
		chartComp2.setTitle(&quot;Browser market shares at a specific website&quot;);
		chartComp2.setSubTitle(&quot;2010&quot;);
		chartComp2.setType(&quot;pie&quot;);
		chartComp2.setTooltipFormatter(&quot;function formatTooltip(obj){&quot; +
					&quot;return obj.key + '&lt;br /&gt;Browser Share: &lt;b&gt;'+obj.y+'%&lt;/b&gt;'&quot; +
				&quot;}&quot;);
		chartComp2.setPlotOptions(&quot;{&quot; +
				&quot;pie:{&quot; +
					&quot;allowPointSelect: true,&quot; +
					&quot;cursor: 'pointer',&quot; +
					&quot;dataLabels: {&quot; +
						&quot;enabled: true, &quot; +
						&quot;color: '#000000',&quot; +
						&quot;connectorColor: '#000000',&quot; +
						&quot;formatter: function() {&quot;+
                            &quot;return '&lt;b&gt;'+ this.point.name +'&lt;/b&gt;: '+ this.percentage +' %';&quot;+
                        &quot;}&quot;+
					&quot;}&quot; +
				&quot;}&quot; +
			&quot;}&quot;);							
		chartComp2.setModel(pieModel);	
		
		//Adding some data to the model
		pieModel.setValue(&quot;Firefox&quot;, 45.0);
		pieModel.setValue(&quot;IE&quot;, 26.8);
		pieModel.setValue(&quot;Chrome&quot;, 12.8);
		pieModel.setValue(&quot;Safari&quot;, 8.5);
		pieModel.setValue(&quot;Opera&quot;, 6.2);
		pieModel.setValue(&quot;Others&quot;, 0.7);	
	
			
	}
	
	@Override
	public void onEvent(Event arg0) throws Exception {
		// TODO Auto-generated method stub
		
	}
	
	/**
	 * internal method to convert date&amp;amp;time from string to epoch milliseconds
	 * 
	 * @param date
	 * @return
	 * @throws Exception
	 */
	private long getDateTime(String date) throws Exception {
		return sdf.parse(date).getTime();
	}

}
 </pre>]]></html></tabpanel>
			</tabpanels>
			</tabbox>
		</groupbox>
		<groupbox mold="3d" width="100%" open="false">
			<caption label="Pie with legend" />
			<tabbox>
				<tabs>
					<tab label="Overview" />
					<tab label="demo.zul" />
					<tab label="DemoComposer.java" />
				</tabs>
				<tabpanels>
					<tabpanel><zhighcharts id="chartComp20" /></tabpanel>
					<tabpanel><html><![CDATA[ 
						<pre class="brush:xml">
&lt;window title=&quot;Pie with legend&quot; border=&quot;normal&quot; width=&quot;100%&quot;
	use=&quot;ctrl.DemoComposer&quot;&gt;
	&lt;zhighcharts id=&quot;chartComp20&quot; /&gt;
&lt;/window&gt;
						</pre>]]></html>
					</tabpanel>
					<tabpanel><html><![CDATA[ <pre class="brush:java">
package ctrl;

import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.HashMap;
import java.util.Map;

import org.ngi.zhighcharts.SimpleExtXYModel;
import org.ngi.zhighcharts.ZHighCharts;
import org.zkoss.util.logging.Log;
import org.zkoss.zk.ui.event.Event;
import org.zkoss.zk.ui.event.EventListener;
import org.zkoss.zul.SimplePieModel;
import org.zkoss.zul.Window;

public class DemoComposer extends Window implements EventListener {
	protected Log logger = Log.lookup(this.getClass());
	
	//Pie with legend
	private ZHighCharts chartComp20;
	private SimpleExtXYModel dataChartModel20 = new SimpleExtXYModel();

	// date format used to capture date time
	private SimpleDateFormat sdf = new SimpleDateFormat(&quot;yyyy-MM-dd HH:mm:ss z&quot;);
	
	public void onCreate() throws Exception {

		//================================================================================
	    // Pie with legend
	    //================================================================================
				
		
		chartComp20 = (ZHighCharts) getFellow(&quot;chartComp20&quot;);
		chartComp20.setOptions(&quot;{&quot; +
					&quot;plotBackgroundColor: null,&quot; +
					&quot;plotBorderWidth: null,&quot; +
					&quot;plotShadow: false&quot; +
				&quot;}&quot;);
		chartComp20.setTitle(&quot;Browser market shares at a specific website, 2010&quot;);
		chartComp20.setType(&quot;pie&quot;);
		chartComp20.setTooltipFormatter(&quot;function formatTooltip(obj){&quot; +
					&quot;return obj.key + '&lt;br /&gt;&quot; +
					&quot;Browser Share: &lt;b&gt;'+obj.y+'%&lt;/b&gt;'&quot; +
				&quot;}&quot;);
		chartComp20.setPlotOptions(&quot;{&quot; +
					&quot;pie: {&quot; +
						&quot;allowPointSelect: true,&quot; +
						&quot;cursor: 'pointer',&quot; +
						&quot;dataLabels: {&quot; +
							&quot;enabled: false&quot; +
						&quot;},&quot; +
						&quot;showInLegend: true&quot; +
					&quot;}&quot; +
				&quot;}&quot;);
		chartComp20.setModel(pieModel);
		
	}
	
	@Override
	public void onEvent(Event arg0) throws Exception {
		// TODO Auto-generated method stub
		
	}
	
	/**
	 * internal method to convert date&amp;amp;time from string to epoch milliseconds
	 * 
	 * @param date
	 * @return
	 * @throws Exception
	 */
	private long getDateTime(String date) throws Exception {
		return sdf.parse(date).getTime();
	}

}
 </pre>]]></html></tabpanel>
			</tabpanels>
			</tabbox>
		</groupbox>
		
		<label value="Dynamic charts" style="font-size:2em;"/>
		<groupbox mold="3d" width="100%" open="false">
			<caption label="Spline updating each second" />
			<tabbox>
				<tabs>
					<tab label="Overview" />
					<tab label="demo.zul" />
					<tab label="DemoComposer.java" />
				</tabs>
				<tabpanels>
					<tabpanel><zhighcharts id="chartComp21" /></tabpanel>
					<tabpanel><html><![CDATA[ 
						<pre class="brush:xml">
&lt;window title=&quot;Spline updating each second&quot; border=&quot;normal&quot; width=&quot;100%&quot;
	use=&quot;ctrl.DemoComposer&quot;&gt;
	&lt;zhighcharts id=&quot;chartComp21&quot; /&gt;
&lt;/window&gt;
						</pre>]]></html>
					</tabpanel>
					<tabpanel><html><![CDATA[ <pre class="brush:java">
package ctrl;

import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.HashMap;
import java.util.Map;

import org.ngi.zhighcharts.SimpleExtXYModel;
import org.ngi.zhighcharts.ZHighCharts;
import org.zkoss.util.logging.Log;
import org.zkoss.zk.ui.event.Event;
import org.zkoss.zk.ui.event.EventListener;
import org.zkoss.zul.SimplePieModel;
import org.zkoss.zul.Window;

public class DemoComposer extends Window implements EventListener {
	protected Log logger = Log.lookup(this.getClass());
	
	//Spline updating each second
	private ZHighCharts chartComp21;
	private SimpleExtXYModel dataChartModel21 = new SimpleExtXYModel();

	// date format used to capture date time
	private SimpleDateFormat sdf = new SimpleDateFormat(&quot;yyyy-MM-dd HH:mm:ss z&quot;);
	
	public void onCreate() throws Exception {

		//================================================================================
	    // Spline updating each second
	    //================================================================================
				
		
		chartComp21 = (ZHighCharts) getFellow(&quot;chartComp21&quot;);
		chartComp21.setOptions(&quot;{&quot; +
					&quot;marginRight: 10,&quot; +
					&quot;events: {&quot; +
						&quot;load: function() {&quot; +
							&quot;var series = this.series[0];&quot; +
							&quot;setInterval(function() {&quot; +
								&quot;var x = (new Date()).getTime(),y = Math.random();&quot; +
								&quot;series.addPoint([x, y], true, true);&quot; +
								&quot;},&quot; +
							&quot; 1000);&quot; +
						&quot;}&quot; +
					&quot;}&quot; +
				&quot;}&quot;);
		chartComp21.setTitle(&quot;Live random data&quot;);
		chartComp21.setType(&quot;spline&quot;);
		chartComp21.setxAxisOptions(&quot;{ &quot; +
					&quot;type: 'datetime',&quot; +
					&quot;tickPixelInterval: 150&quot; +
				&quot;}&quot;);
		chartComp21.setyAxisOptions(&quot;{&quot; +
					&quot;plotLines: [&quot; +
						&quot;{&quot; +
							&quot;value: 0,&quot; +
							&quot;width: 1,&quot; +
							&quot;color: '#808080'&quot; +
						&quot;}&quot; +
					&quot;]&quot; +
				&quot;}&quot;);
		chartComp21.setYAxisTitle(&quot;Value&quot;);
		chartComp21.setTooltipFormatter(&quot;function formatTooltip(obj){&quot; +
					&quot;return '&lt;b&gt;'+ obj.series.name +'&lt;/b&gt;&lt;br/&gt;&quot; +
					&quot;'+Highcharts.dateFormat('%Y-%m-%d %H:%M:%S', obj.x) +'&lt;br/&gt;&quot; +
					&quot;'+Highcharts.numberFormat(obj.y, 2);&quot; +
				&quot;}&quot;);
		chartComp21.setModel(pieModel);
		chartComp21.setPlotOptions(&quot;{&quot; +
					&quot;pie: {&quot; +
						&quot;allowPointSelect: true,&quot; +
						&quot;cursor: 'pointer',&quot; +
						&quot;dataLabels: {&quot; +
							&quot;enabled: false&quot; +
						&quot;},&quot; +
						&quot;showInLegend: true&quot; +
					&quot;}&quot; +
				&quot;}&quot;);
		chartComp21.setLegend(&quot;{&quot; +
					&quot;enabled: false &quot; +
				&quot;}&quot;);
		
		chartComp21.setModel(dataChartModel21);
		
		//Adding some random data to the model

		for (int i = -19; i &lt;= 0; i++){
			dataChartModel21.addValue(&quot;Random data&quot;,getDateTime(sdf.format(new Date())) + i *1000, Math.random());
		}			
	}
	
	@Override
	public void onEvent(Event arg0) throws Exception {
		// TODO Auto-generated method stub
		
	}
	
	/**
	 * internal method to convert date&amp;amp;time from string to epoch milliseconds
	 * 
	 * @param date
	 * @return
	 * @throws Exception
	 */
	private long getDateTime(String date) throws Exception {
		return sdf.parse(date).getTime();
	}
}
 </pre>]]></html></tabpanel>
			</tabpanels>
			</tabbox>
		</groupbox>
		<groupbox mold="3d" width="100%" open="false">
			<caption label="Click to add a point" />
			<tabbox>
				<tabs>
					<tab label="Overview" />
					<tab label="demo.zul" />
					<tab label="DemoComposer.java" />
				</tabs>
				<tabpanels>
					<tabpanel><zhighcharts id="chartComp22" /></tabpanel>
					<tabpanel><html><![CDATA[ 
						<pre class="brush:xml">
&lt;window title=&quot;Click to add a point&quot; border=&quot;normal&quot; width=&quot;100%&quot;
	use=&quot;ctrl.DemoComposer&quot;&gt;
	&lt;zhighcharts id=&quot;chartComp22&quot; /&gt;
&lt;/window&gt;
						</pre>]]></html>
					</tabpanel>
					<tabpanel><html><![CDATA[ <pre class="brush:java">
package ctrl;

import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.HashMap;
import java.util.Map;

import org.ngi.zhighcharts.SimpleExtXYModel;
import org.ngi.zhighcharts.ZHighCharts;
import org.zkoss.util.logging.Log;
import org.zkoss.zk.ui.event.Event;
import org.zkoss.zk.ui.event.EventListener;
import org.zkoss.zul.SimplePieModel;
import org.zkoss.zul.Window;

public class DemoComposer extends Window implements EventListener {
	protected Log logger = Log.lookup(this.getClass());
	
	//Click to add a point
	private ZHighCharts chartComp22;
	private SimpleExtXYModel dataChartModel22 = new SimpleExtXYModel();

	// date format used to capture date time
	private SimpleDateFormat sdf = new SimpleDateFormat(&quot;yyyy-MM-dd HH:mm:ss z&quot;);
	
	public void onCreate() throws Exception {

		//================================================================================
	    // Click to add a point
	    //================================================================================
				
		
		chartComp22 = (ZHighCharts) getFellow(&quot;chartComp22&quot;);
		chartComp22.setOptions(&quot;{&quot; +
					&quot;margin: [70, 50, 60, 80],&quot; +
					&quot;events: {&quot; +
						&quot;click: function(e) { &quot; +
							&quot;var x = e.xAxis[0].value, y = e.yAxis[0].value,series = this.series[0];&quot; +
							&quot;series.addPoint([x, y]);&quot; +
						&quot;}&quot; +
					&quot;}&quot; +
				&quot;}&quot;);
		chartComp22.setTitle(&quot;User supplied data&quot;);
		chartComp22.setSubTitle(&quot;Click the plot area to add a point. Click a point to remove it.&quot;);
		chartComp22.setType(&quot;scatter&quot;);
		chartComp22.setxAxisOptions(&quot;{  &quot; +
					&quot;minPadding: 0.2,&quot; +
					&quot;maxPadding: 0.2,&quot; +
					&quot;maxZoom: 60&quot; +
				&quot;}&quot;);
		chartComp22.setyAxisOptions(&quot;{&quot; +
					&quot;minPadding: 0.2,&quot; +
					&quot;maxPadding: 0.2,&quot; +
					&quot;maxZoom: 60,&quot; +
					&quot;plotLines: [&quot; +
						&quot;{&quot; +
							&quot;value: 0,&quot; +
							&quot;width: 1,&quot; +
							&quot;color: '#808080' &quot; +
						&quot;}&quot; +
					&quot;]&quot; +
				&quot;}&quot;);
		chartComp22.setYAxisTitle(&quot;Value&quot;);
		chartComp22.setPlotOptions(&quot;{&quot; +
					&quot;series: {&quot; +
						&quot;lineWidth: 1,&quot; +
						&quot;point: {&quot; +
							&quot;events: { &quot; +
								&quot;'click': function() {&quot; +
									&quot;if (this.series.data.length &gt; 1) &quot; +
										&quot;this.remove();&quot; +
									&quot;}&quot; +
								&quot;}&quot; +
							&quot;}&quot; +
						&quot;}&quot; +
					&quot;}&quot;);
		chartComp22.setLegend(&quot;{&quot; +
					&quot;enabled: false &quot; +
				&quot;}&quot;);
		chartComp22.setTooltipFormatter(&quot;function formatTooltip(obj){&quot; +
					&quot;return '&lt;b&gt;'+ obj.series.name +'&lt;/b&gt;&lt;br/&gt;&quot; +
					&quot;'+ obj.x +': '+ obj.y;&quot; +
				&quot;}&quot;);
		
		chartComp22.setModel(dataChartModel22);
		
		//Adding some data to the model

		dataChartModel22.addValue(&quot;Series 1&quot;,20, 20);
		dataChartModel22.addValue(&quot;Series 1&quot;,80, 80);
		
	}
	
	@Override
	public void onEvent(Event arg0) throws Exception {
		// TODO Auto-generated method stub
		
	}
	
	/**
	 * internal method to convert date&amp;amp;time from string to epoch milliseconds
	 * 
	 * @param date
	 * @return
	 * @throws Exception
	 */
	private long getDateTime(String date) throws Exception {
		return sdf.parse(date).getTime();
	}

}
 </pre>]]></html></tabpanel>
			</tabpanels>
			</tabbox>
		</groupbox>
		<label value="Combinations" style="font-size:2em;"/>
		<groupbox mold="3d" width="100%" open="false">
			<caption label="Multiple axes" />
			<tabbox>
				<tabs>
					<tab label="Overview" />
					<tab label="demo.zul" />
					<tab label="DemoComposer.java" />
				</tabs>
				<tabpanels>
					<tabpanel><zhighcharts id="chartComp24" /></tabpanel>
					<tabpanel><html><![CDATA[ 
						<pre class="brush:xml">
&lt;window title=&quot;Multiple axes&quot; border=&quot;normal&quot; width=&quot;100%&quot;
	use=&quot;ctrl.DemoComposer&quot;&gt;
	&lt;zhighcharts id=&quot;chartComp24&quot; /&gt;
&lt;/window&gt;
						</pre>]]></html>
					</tabpanel>
					<tabpanel><html><![CDATA[ <pre class="brush:java">
package ctrl;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

import org.ngi.zhighcharts.SimpleExtXYModel;
import org.ngi.zhighcharts.ZHighCharts;
import org.zkoss.util.logging.Log;
import org.zkoss.zk.ui.event.Event;
import org.zkoss.zk.ui.event.EventListener;
import org.zkoss.zul.SimplePieModel;
import org.zkoss.zul.Window;

public class DemoComposer extends Window implements EventListener {
	protected Log logger = Log.lookup(this.getClass());
	
	// Multiple axes
	private ZHighCharts chartComp24;
	private SimpleExtXYModel dataChartModel24 = new SimpleExtXYModel();

	public void onCreate() throws Exception {

		//================================================================================
	    //  Multiple axes
	    //================================================================================
		
		chartComp24 = (ZHighCharts) getFellow(&quot;chartComp24&quot;);
		chartComp24.setType(&quot;line&quot;); //Mandatory!!
		chartComp24.setOptions(&quot;{&quot; +
					&quot;zoomType: 'xy'&quot; +
				&quot;}&quot;);
		chartComp24.setTitle(&quot;Average Monthly Weather Data for Tokyo&quot;);
		chartComp24.setSubTitle(&quot;Source: WorldClimate.com&quot;);
		chartComp24.setxAxisOptions(&quot;{&quot; +
					&quot;categories: [&quot; + //L&eacute;gende de l'axe X
						&quot;'Jan', &quot; +
						&quot;'Feb', &quot; +
						&quot;'Mar', &quot; +
						&quot;'Apr', &quot; +
						&quot;'May', &quot; +
						&quot;'Jun', &quot; +
						&quot;'Jul', &quot; +
						&quot;'Aug', &quot; +
						&quot;'Sep', &quot; +
						&quot;'Oct', &quot; +
						&quot;'Nov', &quot; +
						&quot;'Dec'&quot; +
					&quot;]&quot; +
				&quot;}&quot;);
			
		chartComp24.setyAxisOptions(&quot;[&quot; +
					&quot;{&quot; + // Primary yAxis
						&quot;labels: {&quot; +
							&quot;formatter: function() {&quot; +
								&quot;return this.value +'&#x00b0;C';&quot; + //Format de la l&eacute;gende ex: 15&#x00b0;c
							&quot;},&quot; +
							&quot;style: {&quot; +
								&quot;color: '#89A54E'&quot; + //Couleur de la l&eacute;gende
							&quot;} &quot; +
						&quot;},&quot; +
						&quot;title: {&quot; +
							&quot;text: 'Temperature',&quot; + //Titre de la l&eacute;gende
							&quot;style: { &quot; +
								&quot;color: '#89A54E'&quot; + //couleur du titre de la l&eacute;gende
							&quot;}&quot; +
						&quot;},&quot; +
						&quot;opposite: true&quot; + //Mettre au c&ocirc;t&eacute; droit de l'&eacute;cran
					&quot;},&quot; +
					&quot;{&quot; + // Secondary yAxis
						&quot;title: {&quot; +
							&quot;text: 'Rainfall',&quot; +
							&quot;style: {&quot; +
								&quot;color: '#4572A7'&quot; +
							&quot;}&quot; +
						&quot;},&quot; +
						&quot;labels: {&quot; +
							&quot;formatter: function() { &quot; +
								&quot;return this.value +' mm';&quot; +
							&quot;},&quot; +
							&quot;style: {&quot; +
								&quot;color: '#4572A7'&quot; +
							&quot;}&quot; +
						&quot;}&quot; +
					&quot;},&quot; +
					&quot;{&quot; + // Tertiary yAxis
						&quot;title: { &quot; +
							&quot;text: 'Sea-Level Pressure',&quot; +
							&quot;style: {&quot; +
								&quot;color: '#AA4643' &quot; +
							&quot;}&quot; +
						&quot;},&quot; +
						&quot;labels: {&quot; +
							&quot;formatter: function() {&quot; +
								&quot;return this.value +' mb';&quot; +
							&quot;}, &quot; +
							&quot;style: {&quot; +
								&quot;color: '#AA4643'&quot; +
							&quot;}&quot; +
						&quot;},&quot; +
						&quot;opposite: true&quot; +
					&quot;}&quot; + 
				&quot;]&quot;);
		
		
		
		chartComp24.setTooltipOptions(&quot;{&quot; +
				&quot;shared: true,&quot; +  
				&quot;crosshairs: true,&quot; +
				&quot;borderColor : '#000000'&quot; +//Custom tooltip border color
			&quot;}&quot;);
		
		String formatt = &quot;&quot;;
		for(int i=0;i&lt;3;i++){
			formatt += &quot;&lt;span style=\&quot;color:'+ obj.points[&quot;+i+&quot;].series.color +';\&quot;&gt;'+ obj.points[&quot;+i+&quot;].series.name +'&lt;/span&gt; : &lt;b&gt;'+ obj.points[&quot;+i+&quot;].y + obj.points[&quot;+i+&quot;].series.options.units + '&lt;/b&gt;&quot;;
			if(i&lt;3-1)
				formatt += &quot;&lt;br/&gt;&quot;;
		}
		
		chartComp24.setTooltipFormatter(&quot;function formatTooltip(obj){ &quot; +
					&quot;return obj.x + '&lt;br/&gt;&quot; +
					 formatt + 	 
				&quot;';}&quot;);
		
		chartComp24.setModel(dataChartModel24);
		
		//Series 1: Temperature
		style = new HashMap();
		style.put(&quot;color&quot;, &quot;#89A54E&quot;);//Series chart color
		style.put(&quot;type&quot;, &quot;spline&quot;);//Series type
		style.put(&quot;yAxis&quot;, 0);// associate the series to a specified yAxis (here 0)
		style.put(&quot;units&quot;, &quot;&#x00b0;C&quot;);
		chartComp24.setSeriesOptions(&quot;Temperature&quot;, style); 
		
		dataChartModel24.addValue(&quot;Temperature&quot;, 0, 7.0);//January (month 0) Temperature is 7 deges
		dataChartModel24.addValue(&quot;Temperature&quot;, 1, 6.9);
		dataChartModel24.addValue(&quot;Temperature&quot;, 2, 9.5);
		dataChartModel24.addValue(&quot;Temperature&quot;, 3, 14.5);
		dataChartModel24.addValue(&quot;Temperature&quot;, 4, 18.2);
		dataChartModel24.addValue(&quot;Temperature&quot;, 5, 21.5);
		dataChartModel24.addValue(&quot;Temperature&quot;, 6, 25.2);
		dataChartModel24.addValue(&quot;Temperature&quot;, 7, 26.5);
		dataChartModel24.addValue(&quot;Temperature&quot;, 8, 23.3);
		dataChartModel24.addValue(&quot;Temperature&quot;, 9, 18.3);
		dataChartModel24.addValue(&quot;Temperature&quot;, 10, 13.9);
		dataChartModel24.addValue(&quot;Temperature&quot;, 11, 9.6);
		
		//Series 2: Rainfall
		style = new HashMap();
		style.put(&quot;color&quot;, &quot;#4572A7&quot;);
		style.put(&quot;type&quot;, &quot;spline&quot;);
		style.put(&quot;yAxis&quot;, 1);// associate the series to a specified yAxis (here 1)
		style.put(&quot;units&quot;, &quot;mm&quot;);
		chartComp24.setSeriesOptions(&quot;Rainfall&quot;, style);
		
		dataChartModel24.addValue(&quot;Rainfall&quot;, 0, 49.9);
		dataChartModel24.addValue(&quot;Rainfall&quot;, 1, 71.5);
		dataChartModel24.addValue(&quot;Rainfall&quot;, 2, 10.6);
		dataChartModel24.addValue(&quot;Rainfall&quot;, 3, 129.2);
		dataChartModel24.addValue(&quot;Rainfall&quot;, 4, 144.0);
		dataChartModel24.addValue(&quot;Rainfall&quot;, 5, 176.0);
		dataChartModel24.addValue(&quot;Rainfall&quot;, 6, 135.6);
		dataChartModel24.addValue(&quot;Rainfall&quot;, 7, 148.5);
		dataChartModel24.addValue(&quot;Rainfall&quot;, 8, 216.4);
		dataChartModel24.addValue(&quot;Rainfall&quot;, 9, 194.1);
		dataChartModel24.addValue(&quot;Rainfall&quot;, 10, 95.6);
		dataChartModel24.addValue(&quot;Rainfall&quot;, 11, 54.4);
		
		//Series 3: Sea-Level Pressure
		style = new HashMap();
		style.put(&quot;color&quot;, &quot;#AA4643&quot;);
		style.put(&quot;type&quot;, &quot;spline&quot;);
		style.put(&quot;dashStyle&quot;, &quot;shortdot&quot;);
		style.put(&quot;yAxis&quot;, 2);
		style.put(&quot;units&quot;, &quot;mb&quot;);
		marker = new HashMap();
		marker.put(&quot;enabled&quot;, false);//deactivate markers (points) for this series
		style.put(&quot;marker&quot;, marker);
		chartComp24.setSeriesOptions(&quot;Sea-Level Pressure&quot;, style);
		
		dataChartModel24.addValue(&quot;Sea-Level Pressure&quot;, 0, 1016);
		dataChartModel24.addValue(&quot;Sea-Level Pressure&quot;, 1, 1016);
		dataChartModel24.addValue(&quot;Sea-Level Pressure&quot;, 2, 1015.9);
		dataChartModel24.addValue(&quot;Sea-Level Pressure&quot;, 3, 1015.5);
		dataChartModel24.addValue(&quot;Sea-Level Pressure&quot;, 4, 1012.3);
		dataChartModel24.addValue(&quot;Sea-Level Pressure&quot;, 5, 1009.5);
		dataChartModel24.addValue(&quot;Sea-Level Pressure&quot;, 6, 1009.6);
		dataChartModel24.addValue(&quot;Sea-Level Pressure&quot;, 7, 1010.2);
		dataChartModel24.addValue(&quot;Sea-Level Pressure&quot;, 8, 1013.1);
		dataChartModel24.addValue(&quot;Sea-Level Pressure&quot;, 9, 1016.9);
		dataChartModel24.addValue(&quot;Sea-Level Pressure&quot;, 10, 1018.2);
		dataChartModel24.addValue(&quot;Sea-Level Pressure&quot;, 11, 1016.7);
			
	}
	
	@Override
	public void onEvent(Event arg0) throws Exception {
		// TODO Auto-generated method stub
		
	}
}

					 </pre>]]></html></tabpanel>
			</tabpanels>
			</tabbox>
		</groupbox>
		
		<groupbox mold="3d" width="100%" open="false">
			<caption label="Multiple axes - yAxis in Pure Java code" />
			<tabbox>
				<tabs>
					<tab label="Overview" />
					<tab label="demo.zul" />
					<tab label="DemoComposer.java" />
				</tabs>
				<tabpanels>
					<tabpanel><zhighcharts id="chartComp37" /></tabpanel>
					<tabpanel><html><![CDATA[ 
						<pre class="brush:xml">
&lt;window title=&quot;Multiple axes - yAxis in Pure Java code&quot; border=&quot;normal&quot; width=&quot;100%&quot;
	use=&quot;ctrl.DemoComposer&quot;&gt;
	&lt;zhighcharts id=&quot;chartComp37&quot; /&gt;
&lt;/window&gt;
						</pre>]]></html>
					</tabpanel>
					<tabpanel><html><![CDATA[ <pre class="brush:java">
package ctrl;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

import org.ngi.zhighcharts.SimpleExtXYModel;
import org.ngi.zhighcharts.ZHighCharts;
import org.zkoss.util.logging.Log;
import org.zkoss.zk.ui.event.Event;
import org.zkoss.zk.ui.event.EventListener;
import org.zkoss.zul.SimplePieModel;
import org.zkoss.zul.Window;

public class DemoComposer extends Window implements EventListener {
	protected Log logger = Log.lookup(this.getClass());
	
	// Multiple axes - yAxis in Pure Java code
	private ZHighCharts chartComp37;
	private SimpleExtXYModel dataChartModel37 = new SimpleExtXYModel();

	public void onCreate() throws Exception {

		//================================================================================
	    //  Multiple axes - yAxis in Pure Java code
	    //================================================================================
		
		chartComp37 = (ZHighCharts) getFellow(&quot;chartComp37&quot;);
		chartComp37.setType(&quot;line&quot;); //Mandatory!!
		chartComp37.setOptions(&quot;{&quot; +
					&quot;zoomType: 'xy'&quot; +
				&quot;}&quot;);
		chartComp37.setTitle(&quot;Average Monthly Weather Data for Tokyo&quot;);
		chartComp37.setSubTitle(&quot;Source: WorldClimate.com&quot;);
		chartComp37.setxAxisOptions(&quot;{&quot; +
					&quot;categories: [&quot; + //xAxis elements
						&quot;'Jan', &quot; +
						&quot;'Feb', &quot; +
						&quot;'Mar', &quot; +
						&quot;'Apr', &quot; +
						&quot;'May', &quot; +
						&quot;'Jun', &quot; +
						&quot;'Jul', &quot; +
						&quot;'Aug', &quot; +
						&quot;'Sep', &quot; +
						&quot;'Oct', &quot; +
						&quot;'Nov', &quot; +
						&quot;'Dec'&quot; +
					&quot;]&quot; +
				&quot;}&quot;);
			
		//Primary yAxis definition (yAxis 0 / default yAxis)
		Map Axis0 = new HashMap();
		Map Axis0Style = new HashMap(); //Style Creation
		Axis0Style.put(&quot;color&quot;, &quot;#89A54E&quot;);
		Map Axis0Labels = new HashMap(); //Labels
		Axis0Labels.put(&quot;formatter&quot;, &quot;function() {return this.value +'&#x00b0;C';}&quot;);
		Axis0Labels.put(&quot;style&quot;, Axis0Style);
		Map Axis0Title = new HashMap();// title
		Axis0Title.put(&quot;text&quot;, &quot;Temperature&quot;);
		Axis0Title.put(&quot;style&quot;, Axis0Style);
		Axis0.put(&quot;labels&quot;, Axis0Labels);//Putting all together
		Axis0.put(&quot;title&quot;, Axis0Title);
		Axis0.put(&quot;opposite&quot;, true);
		
		/*
		 * The code above is equivalent to this:
 		*	&quot;{&quot; + // Primary yAxis
				&quot;labels: {&quot; +
					&quot;formatter: function() {&quot; +
						&quot;return this.value +'&#x00b0;C';&quot; + //Format de la l&eacute;gende ex: 15&#x00b0;c
					&quot;},&quot; +
					&quot;style: {&quot; +
						&quot;color: '#89A54E'&quot; + //Couleur de la l&eacute;gende
					&quot;} &quot; +
				&quot;},&quot; +
				&quot;title: {&quot; +
					&quot;text: 'Temperature',&quot; + //Titre de la l&eacute;gende
					&quot;style: { &quot; +
						&quot;color: '#89A54E'&quot; + //couleur du titre de la l&eacute;gende
					&quot;}&quot; +
				&quot;},&quot; +
				&quot;opposite: true&quot; + //Mettre au c&ocirc;t&eacute; droit de l'&eacute;cran
			&quot;},&quot; +
		 * 
		 */

		Map Axis1 = new HashMap();
		Map Axis1Labels = new HashMap();
		Axis1Labels.put(&quot;formatter&quot;, &quot;function() {return this.value +' mm';}&quot;);
		Map Axis1Style = new HashMap();
		Axis1Style.put(&quot;color&quot;, &quot;#4572A7&quot;);
		Axis1Labels.put(&quot;style&quot;, Axis1Style);
		Map Axis1Title = new HashMap();
		Axis1Title.put(&quot;text&quot;, &quot;Rainfall&quot;);
		Axis1Title.put(&quot;style&quot;, Axis1Style);
		Axis1.put(&quot;labels&quot;, Axis1Labels);
		Axis1.put(&quot;title&quot;, Axis1Title);

		Map Axis2 = new HashMap();
		Map Axis2Labels = new HashMap();
		Axis2Labels.put(&quot;formatter&quot;, &quot;function() {return this.value +' mb';}&quot;);
		Map Axis2Style = new HashMap();
		Axis2Style.put(&quot;color&quot;, &quot;#AA4643&quot;);
		Axis2Labels.put(&quot;style&quot;, Axis2Style);
		Map Axis2Title = new HashMap();
		Axis2Title.put(&quot;text&quot;, &quot;Sea-Level Pressure&quot;);
		Axis2Title.put(&quot;style&quot;, Axis2Style);
		Axis2.put(&quot;labels&quot;, Axis2Labels);
		Axis2.put(&quot;title&quot;, Axis2Title);
		Axis2.put(&quot;opposite&quot;, true);
		
		//List of yAxis defined above
		List AxisY = new ArrayList();
		AxisY.add(Axis0);
		AxisY.add(Axis1);
		AxisY.add(Axis2);
		
		//set the chart yAxis
		chartComp37.setyAxisOptions(AxisY);
		
		formatt = &quot;&quot;;
		for(int i=0;i&lt;3;i++){
			formatt += &quot;&lt;span style=\&quot;color:'+ this.points[&quot;+i+&quot;].series.color +';\&quot;&gt;'+ this.points[&quot;+i+&quot;].series.name +'&lt;/span&gt; : &lt;b&gt;'+ this.points[&quot;+i+&quot;].y + ' ' + this.points[&quot;+i+&quot;].series.options.units +'&lt;/b&gt;&quot;;
			if(i&lt;3-1)
				formatt += &quot;&lt;br/&gt;&quot;;
		}
				
		chartComp37.setTooltipOptions(&quot;{&quot; +
				&quot;shared: true,&quot; + 
				&quot;crosshairs: true,&quot; +
				&quot;borderColor : '#000000',&quot; +
				&quot;formatter: function() { &quot; +
					&quot;return this.x + '&lt;br/&gt;&quot; +
					formatt +
					&quot;';}&quot; +
			&quot;}&quot;);
				
		chartComp37.setModel(dataChartModel37);
		
		//Series 1: Temperature
		style = new HashMap();
		style.put(&quot;color&quot;, &quot;#89A54E&quot;);
		style.put(&quot;type&quot;, &quot;spline&quot;);
		style.put(&quot;yAxis&quot;, 0);
		style.put(&quot;units&quot;, &quot;&#x00b0;C&quot;);
		chartComp37.setSeriesOptions(&quot;Temperature&quot;, style); 
		
		dataChartModel37.addValue(&quot;Temperature&quot;, 0, 7.0);
		dataChartModel37.addValue(&quot;Temperature&quot;, 1, 6.9);
		dataChartModel37.addValue(&quot;Temperature&quot;, 2, 9.5);
		dataChartModel37.addValue(&quot;Temperature&quot;, 3, 14.5);
		dataChartModel37.addValue(&quot;Temperature&quot;, 4, 18.2);
		dataChartModel37.addValue(&quot;Temperature&quot;, 5, 21.5);
		dataChartModel37.addValue(&quot;Temperature&quot;, 6, 25.2);
		dataChartModel37.addValue(&quot;Temperature&quot;, 7, 26.5);
		dataChartModel37.addValue(&quot;Temperature&quot;, 8, 23.3);
		dataChartModel37.addValue(&quot;Temperature&quot;, 9, 18.3);
		dataChartModel37.addValue(&quot;Temperature&quot;, 10, 13.9);
		dataChartModel37.addValue(&quot;Temperature&quot;, 11, 9.6);
		
		//Series 2: Rainfall
		style = new HashMap();
		style.put(&quot;color&quot;, &quot;#4572A7&quot;);
		style.put(&quot;type&quot;, &quot;spline&quot;);
		style.put(&quot;yAxis&quot;, 1);
		style.put(&quot;units&quot;, &quot;mm&quot;);
		chartComp37.setSeriesOptions(&quot;Rainfall&quot;, style);
		
		dataChartModel37.addValue(&quot;Rainfall&quot;, 0, 49.9);
		dataChartModel37.addValue(&quot;Rainfall&quot;, 1, 71.5);
		dataChartModel37.addValue(&quot;Rainfall&quot;, 2, 10.6);
		dataChartModel37.addValue(&quot;Rainfall&quot;, 3, 129.2);
		dataChartModel37.addValue(&quot;Rainfall&quot;, 4, 144.0);
		dataChartModel37.addValue(&quot;Rainfall&quot;, 5, 176.0);
		dataChartModel37.addValue(&quot;Rainfall&quot;, 6, 135.6);
		dataChartModel37.addValue(&quot;Rainfall&quot;, 7, 148.5);
		dataChartModel37.addValue(&quot;Rainfall&quot;, 8, 216.4);
		dataChartModel37.addValue(&quot;Rainfall&quot;, 9, 194.1);
		dataChartModel37.addValue(&quot;Rainfall&quot;, 10, 95.6);
		dataChartModel37.addValue(&quot;Rainfall&quot;, 11, 54.4);
		
		//Series 3: Sea-Level Pressure
		style = new HashMap();
		style.put(&quot;color&quot;, &quot;#AA4643&quot;);
		style.put(&quot;type&quot;, &quot;spline&quot;);
		style.put(&quot;dashStyle&quot;, &quot;shortdot&quot;);
		style.put(&quot;yAxis&quot;, 2);
		marker = new HashMap();
		marker.put(&quot;enabled&quot;, false);
		style.put(&quot;marker&quot;, marker);
		style.put(&quot;units&quot;, &quot;mb&quot;);
		chartComp37.setSeriesOptions(&quot;Sea-Level Pressure&quot;, style);
		
		dataChartModel37.addValue(&quot;Sea-Level Pressure&quot;, 0, 1016);
		dataChartModel37.addValue(&quot;Sea-Level Pressure&quot;, 1, 1016);
		dataChartModel37.addValue(&quot;Sea-Level Pressure&quot;, 2, 1015.9);
		dataChartModel37.addValue(&quot;Sea-Level Pressure&quot;, 3, 1015.5);
		dataChartModel37.addValue(&quot;Sea-Level Pressure&quot;, 4, 1012.3);
		dataChartModel37.addValue(&quot;Sea-Level Pressure&quot;, 5, 1009.5);
		dataChartModel37.addValue(&quot;Sea-Level Pressure&quot;, 6, 1009.6);
		dataChartModel37.addValue(&quot;Sea-Level Pressure&quot;, 7, 1010.2);
		dataChartModel37.addValue(&quot;Sea-Level Pressure&quot;, 8, 1013.1);
		dataChartModel37.addValue(&quot;Sea-Level Pressure&quot;, 9, 1016.9);
		dataChartModel37.addValue(&quot;Sea-Level Pressure&quot;, 10, 1018.2);
		dataChartModel37.addValue(&quot;Sea-Level Pressure&quot;, 11, 1016.7);
		
	}
	
	@Override
	public void onEvent(Event arg0) throws Exception {
		// TODO Auto-generated method stub
		
	}
}

					 </pre>]]></html></tabpanel>
			</tabpanels>
			</tabbox>
		</groupbox>
		
		<groupbox mold="3d" width="100%" open="false">
			<caption label="Column and line" />
			<tabbox>
				<tabs>
					<tab label="Overview" />
					<tab label="demo.zul" />
					<tab label="DemoComposer.java" />
				</tabs>
				<tabpanels>
					<tabpanel><zhighcharts id="chartComp31" /></tabpanel>
					<tabpanel><html><![CDATA[ 
						<pre class="brush:xml">
&lt;window title=&quot;Column and line&quot; border=&quot;normal&quot; width=&quot;100%&quot;
	use=&quot;ctrl.DemoComposer&quot;&gt;
	&lt;zhighcharts id=&quot;chartComp31&quot; /&gt;
&lt;/window&gt;
						</pre>]]></html>
					</tabpanel>
					<tabpanel><html><![CDATA[ <pre class="brush:java">
package ctrl;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

import org.ngi.zhighcharts.SimpleExtXYModel;
import org.ngi.zhighcharts.ZHighCharts;
import org.zkoss.util.logging.Log;
import org.zkoss.zk.ui.event.Event;
import org.zkoss.zk.ui.event.EventListener;
import org.zkoss.zul.SimplePieModel;
import org.zkoss.zul.Window;

public class DemoComposer extends Window implements EventListener {
	protected Log logger = Log.lookup(this.getClass());
	
	// Column and line
	private ZHighCharts chartComp31;
	private SimpleExtXYModel dataChartModel31 = new SimpleExtXYModel();

	public void onCreate() throws Exception {
	
		//================================================================================
	    // Column and line
	    //================================================================================

		chartComp31 = (ZHighCharts) getFellow(&quot;chartComp31&quot;);
		chartComp31.setType(&quot;line&quot;); //Mandatory!
		chartComp31.setTitle(&quot;Combination chart&quot;);
		chartComp31.setxAxisOptions(&quot;{&quot; +
				&quot;categories: [&quot; +
					&quot;'Apples',&quot; +
					&quot;'Oranges', &quot; +
					&quot;'Pears', &quot; +
					&quot;'Bananas', &quot; +
					&quot;'Plums'&quot; +
				&quot;]&quot; +
			&quot;}&quot;);

		chartComp31.setTooltipFormatter(&quot;function formatTooltip(obj){ &quot; +
					&quot;return ''+obj.x  +': '+ obj.y;&quot; +
				&quot;}&quot;);
		
		chartComp31.setModel(dataChartModel31);
		
		Map seriesType = new HashMap();
		seriesType.put(&quot;type&quot;, &quot;column&quot;);
		
		Number Johndata31 [] = {2, 3, 5, 7, 6};
		for(int i = 0; i &lt; Johndata31.length; i++)
			dataChartModel31.addValue(&quot;John&quot;, i, Johndata31[i]);
		chartComp31.setSeriesOptions(&quot;John&quot;, seriesType);

		
		Number Janedata31 [] = {3, 2, 1, 3, 4};
		for(int i = 0; i &lt; Janedata31.length; i++)
			dataChartModel31.addValue(&quot;Jane&quot;, i, Janedata31[i]);
		chartComp31.setSeriesOptions(&quot;Jane&quot;, seriesType);

		
		Number Joedata31 [] = { 4, 3, 3, 9, 0};
		for(int i = 0; i &lt; Joedata31.length; i++)
			dataChartModel31.addValue(&quot;Joe&quot;, i, Joedata31[i]);
		chartComp31.setSeriesOptions(&quot;Joe&quot;, seriesType);
		
		Number AVGdata31 [] = { 3, 2.67, 3, 6.33, 3.33};
		for(int i = 0; i &lt; AVGdata31.length; i++)
			dataChartModel31.addValue(&quot;Average&quot;, i, AVGdata31[i]);
		
		seriesType = new HashMap();
		seriesType.put(&quot;type&quot;, &quot;spline&quot;);
		chartComp31.setSeriesOptions(&quot;Average&quot;, seriesType);	
		
	}
	
	@Override
	public void onEvent(Event arg0) throws Exception {
		// TODO Auto-generated method stub
		
	}
}					
					</pre>]]></html></tabpanel>
				</tabpanels>
			</tabbox>
		</groupbox>
					
		<label value="jsgauge" style="font-size:2em;"/>
		<groupbox mold="3d" width="100%" open="false">
			<caption label="jsgauge Basic Example" />
			<tabbox>
				<tabs>
					<tab label="Overview" />
					<tab label="demo.zul" />
					<tab label="DemoComposer.java" />
				</tabs>
				<tabpanels>
					<tabpanel>
						<hlayout>
							<zgauge id="speedGauge"	height="150px" width="150px" value="150"
								options="{label:'vitesse',min:0,max:240,unitsLabel:' km/h',majorTicks: 9,
								bands: [{color: 'rgba(255,255,0,0.5)', from: 110, to: 140 },
								{color: 'rgba(255,0,0,0.5)', from: 140, to: 240 }]}"/>
							<zgauge id="zgauge1" />	
						</hlayout>
						<hlayout>
							setValue:<doublebox onOK="speedGauge.setValue(self.value);zgauge1.setValue(self.value);" />
						</hlayout>
						</tabpanel>
						
					<tabpanel><html><![CDATA[ 
						<pre class="brush:xml">
&lt;window title=&quot;jsgauge Basic Example&quot; border=&quot;normal&quot; width=&quot;100%&quot;
	use=&quot;ctrl.DemoComposer&quot;&gt;
	&lt;/hlayout&gt;
		&lt;zgauge id=&quot;speedGauge&quot;	height=&quot;150px&quot; width=&quot;150px&quot; value=&quot;150&quot;
			options=&quot;{label:'vitesse',min:0,max:240,unitsLabel:' km/h',majorTicks: 9,
			bands: [{color: 'rgba(255,255,0,0.5)', from: 110, to: 140 },
			{color: 'rgba(255,0,0,0.5)', from: 140, to: 240 }]}&quot;/&gt;
		&lt;zgauge id=&quot;zgauge1&quot; /&gt;	
	&lt;/hlayout&gt;
	&lt;hlayout&gt;
		Modifier la vitesse : &lt;doublebox onOK=&quot;speedGauge.setValue(self.value);zgauge1.setValue(self.value);&quot; /&gt;
	&lt;/hlayout&gt;
&lt;/window&gt;
						</pre>]]></html>
					</tabpanel>
					<tabpanel><html><![CDATA[ <pre class="brush:java">
package ctrl;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

import org.ngi.zhighcharts.SimpleExtXYModel;
import org.ngi.zhighcharts.ZGauge;
import org.ngi.zhighcharts.ZHighCharts;
import org.zkoss.util.logging.Log;
import org.zkoss.zk.ui.event.Event;
import org.zkoss.zk.ui.event.EventListener;
import org.zkoss.zul.SimplePieModel;
import org.zkoss.zul.Window;

public class DemoComposer extends Window implements EventListener {
	protected Log logger = Log.lookup(this.getClass());
	
	// jsgauge Basic Example
	private ZGauge zgauge1;

	public void onCreate() throws Exception {

		//================================================================================
	    // jsgauge Basic Example
	    //================================================================================
		zgauge1 = (ZGauge) this.getFellow(&quot;zgauge1&quot;);
		zgauge1.setOptions(&quot;{&quot; +
					&quot;label:'vitesse',&quot; +
					&quot;min:0,&quot; +
					&quot;max:240,&quot; +
					&quot;unitsLabel:' km/h',&quot; +
					&quot;majorTicks: 9,&quot; +
					&quot;bands: [&quot; +
						&quot;{&quot; +
							&quot;color: 'rgba(255,255,0,0.5)', &quot; +
							&quot;from: 110, &quot; +
							&quot;to: 140 &quot; +
						&quot;},&quot; +
						&quot;{&quot; +
							&quot;color: 'rgba(255,0,0,0.5)', &quot; +
							&quot;from: 140, to: 240 &quot; +
						&quot;}&quot; +
					&quot;]&quot; +
				&quot;}&quot;);
		zgauge1.setValue(60);	
		
	}
	
	@Override
	public void onEvent(Event arg0) throws Exception {
		// TODO Auto-generated method stub
		
	}
}

					 </pre>]]></html></tabpanel>
			</tabpanels>
			</tabbox>
		</groupbox>
		
	<label value="More chart types" style="font-size:2em;"/>
<groupbox mold="3d" width="100%" open="false">
			<caption label="Angular gauge, Gauge with dual axes and VU meter" />
			<tabbox>
				<tabs>
					<tab label="Overview" />
					<tab label="demo.zul" />
					<tab label="DemoComposer.java" />
				</tabs>
				<tabpanels>
					<tabpanel  style="text-align:center">
						<hlayout>
							<zhighcharts width="250px" id="chartComp32" />
							<zhighcharts width="250px" id="chartComp33" />
						</hlayout>
						<hlayout>
							<zhighcharts id="chartComp34" />
						</hlayout>

						<hlayout>
					        Modifier la valeur : <doublebox id="doubleB"/>
					    </hlayout>
					</tabpanel>
					<tabpanel>
						<html>
							<![CDATA[ <pre class="brush:xml"> 
&lt;window title=&quot;ZHighCharts Demo&quot; border=&quot;normal&quot; width=&quot;100%&quot;
		use=&quot;ctrl.DemoComposer&quot;&gt;
	&lt;hlayout&gt;
		&lt;zhighcharts width=&quot;250px&quot; id=&quot;chartComp32&quot; /&gt;
		&lt;zhighcharts width=&quot;250px&quot; id=&quot;chartComp33&quot; /&gt;
	&lt;/hlayout&gt;
	&lt;hlayout&gt;
		&lt;zhighcharts id=&quot;chartComp34&quot; /&gt;
	&lt;/hlayout&gt;

	&lt;hlayout&gt;
        Modifier la valeur : &lt;doublebox id=&quot;doubleB&quot;/&gt;
    &lt;/hlayout&gt;
&lt;/window&gt;
							</pre> ]]>
						</html>
					</tabpanel>
					<tabpanel>
						<html>
<![CDATA[ <pre class="brush:java">
package ctrl;

import java.text.SimpleDateFormat;
import java.util.HashMap;
import java.util.Map;

import org.ngi.zhighcharts.SimpleExtXYModel;
import org.ngi.zhighcharts.ZHighCharts;
import org.zkoss.mesg.Messages;
import org.zkoss.util.logging.Log;
import org.zkoss.zk.ui.event.Event;
import org.zkoss.zk.ui.event.EventListener;
import org.zkoss.zul.Doublebox;
import org.zkoss.zul.Window;

public class DemoComposer extends Window implements EventListener {
	protected Log logger = Log.lookup(this.getClass());

	//Angular gauge
	private ZHighCharts chartComp32;
	private SimpleExtXYModel dataChartModel32 = new SimpleExtXYModel();
	
	//Gauge with dual axes
	private ZHighCharts chartComp33;
	private SimpleExtXYModel dataChartModel33 = new SimpleExtXYModel();
	
	// VU meter
	private ZHighCharts chartComp34;
	private SimpleExtXYModel dataChartModel34 = new SimpleExtXYModel();
	
	
	private Doublebox doubleB;
	
	// date format used to capture date time
	private SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss z");

	public void onCreate() throws Exception {
		
		//================================================================================
		// Angular gauge
	    //================================================================================
		
		chartComp32 = (ZHighCharts) getFellow("chartComp32");
		chartComp32.setType("gauge");
		chartComp32.setOptions("{" +
					"alignTicks: false," +
					"plotBackgroundColor: null," +
					"plotBackgroundImage: null," +
					"plotBorderWidth: 0," +
					"plotShadow: false" +
				"}");
		chartComp32.setTitle("Speedometer");
		chartComp32.setPane("{ " +
					"startAngle: -150, " +
					"endAngle: 150, " +
					"background: [" +
						"{ " +
							"backgroundColor: { " +
								"linearGradient: { " +
									"x1: 0, " +
									"y1: 0, " +
									"x2: 0, " +
									"y2: 1 " +
								"}, " +
								"stops: [ " +
									"[0, '#FFF'], " +
									"[1, '#333'] " +
								"] " +
							"}, " +
							"borderWidth: 0, " +
							"outerRadius: '109%' " +
						"}, " +
						"{ " +
							"backgroundColor: { " +
								"linearGradient: { " +
									"x1: 0, " +
									"y1: 0, " +
									"x2: 0, " +
									"y2: 1 " +
								"}, " +
								"stops: [ " +
									"[0, '#333'], " +
									"[1, '#FFF'] " +
								"] " +
							"}, " +
							"borderWidth: 1, " +
							"outerRadius: '107%' " +
						"}," +
						"{ " +// default background
						"}, " +
						"{ " +
							"backgroundColor: '#DDD', " +
							"borderWidth: 0, " +
							"outerRadius: '105%', " +
							"innerRadius: '103%' " +
						"}" +
					"] " +
				"}");
		
		chartComp32.setyAxisOptions("{ " +
					"min: 0, " +
					"max: 200,  " +
					"minorTickInterval: 'auto', " +
					"minorTickWidth: 1, " +
					"minorTickLength: 10, " +
					"minorTickPosition: 'inside', " +
					"minorTickColor: '#666',  " +
					"tickPixelInterval: 30, " +
					"tickWidth: 2, " +
					"tickPosition: 'inside', " +
					"tickLength: 10, " +
					"tickColor: '#666', " +
					"labels: { " +
						"step: 2, " +
						"rotation: 'auto' " +
					"}, " +
					"title: { " +
						"text: 'km/h' " +
					"}, " +
					"plotBands: [" +
						"{ " +
							"from: 0, " +
							"to: 120, " +
							"color: '#55BF3B' " + // green
						"}, " +
						"{ " +
							"from: 120, " +
							"to: 160, " +
							"color: '#DDDF0D' " + // yellow
						"}, " +
						"{ " +
							"from: 160, " +
							"to: 200, " +
							"color: '#DF5353' " + // red
						"}" +
					"] " +
				"}");
		
		chartComp32.setTooltipOptions("{enabled : false}");
		chartComp32.setModel(dataChartModel32);
		
		Map series = new HashMap();
        Map dataLabels = new HashMap();
        dataLabels.put("formatter", "function () { " +
        			"var kmh = this.y, mph = Math.round(kmh * 0.621);" +
        			"return '<span>'+ kmh + ' km/h</span><br/>" +
        			"' + '<span>' + mph + ' mph</span>';" +
        		"}");
        Map style = new HashMap();
        series.put("dataLabels", dataLabels);
        chartComp32.setSeriesOptions("Speed", series); 
        
		//Initial Value
		dataChartModel32.addValue("Speed", 0, 20);		
		
		//================================================================================
	    // Gauge with dual axes
	    //================================================================================

		chartComp33 = (ZHighCharts) getFellow("chartComp33");
		chartComp33.setType("gauge");
		chartComp33.setOptions("{" +
					"alignTicks: false," +
					"plotBackgroundColor: null," +
					"plotBackgroundImage: null," +
					"plotBorderWidth: 0," +
					"plotShadow: false" +
				"}");
		chartComp33.setTitle("Speedometer with dual axes");
		chartComp33.setPane("{" +
					"startAngle: -150," +
					"endAngle: 150" +
				"}");
		chartComp33.setyAxisOptions("[" +
					"{ " +
						"min: 0, " +
						"max: 200, " +
						"lineColor: '#339', " +
						"tickColor: '#339', " +
						"minorTickColor: '#339', " +
						"offset: -25, " +
						"lineWidth: 2, " +
						"labels: { " +
							"distance: -20, " +
							"rotation: 'auto' " +
						"}, " +
						"tickLength: 5, " +
						"minorTickLength: 5, " +
						"endOnTick: false " +
					"}, " +
					"{ " +
						"min: 0, " +
						"max: 124, " +
						"tickPosition: 'outside', " +
						"lineColor: '#933', " +
						"lineWidth: 2, " +
						"minorTickPosition: 'outside', " +
						"tickColor: '#933', " +
						"minorTickColor: '#933', " +
						"tickLength: 5, " +
						"minorTickLength: 5, " +
						"labels: { " +
							"distance: 12, " +
							"rotation: 'auto' " +
						"}, " +
						"offset: -20, " +
						"endOnTick: false " +
					"}" +
				"]");
		chartComp33.setTooltipOptions("{enabled : false}");
//		chartComp33.setPlotOptions("{gauge:{animation : false}}");

		series = new HashMap();
        dataLabels = new HashMap();
        dataLabels.put("formatter", "function () { " +
        			"var kmh = this.y, mph = Math.round(kmh * 0.621);" +
        			"return '<span>'+ kmh + ' km/h</span><br/>" +
        			"' + '<span>' + mph + ' mph</span>';" +
        		"}");
        style = new HashMap();
        series.put("dataLabels", dataLabels);
        chartComp33.setSeriesOptions("Speed", series); 
		chartComp33.setModel(dataChartModel33);
		
		//Initial Value
		dataChartModel33.addValue("Speed", 0, 20);		
		
		
		//================================================================================
	    // VU meter
	    //================================================================================

		chartComp34 = (ZHighCharts) getFellow("chartComp34");
		chartComp34.setType("gauge");
		chartComp34.setOptions("{" +
					"plotBorderWidth: 1, " +
					"plotBackgroundColor: { " +
						"linearGradient: { " +
							"x1: 0, " +
							"y1: 0, " +
							"x2: 0, " +
							"y2: 1 " +
						"}, " +
						"stops: [ " +
							"[0, '#FFF4C6'], " +
							"[0.3, '#FFFFFF'], " +
							"[1, '#FFF4C6'] " +
						"] " +
					"}, " +
					"plotBackgroundImage: null, " +
					"height: 200" + 
				"}");
		chartComp34.setTitle("VU meter");
		chartComp34.setPane("[" +
					"{ " +
						"startAngle: -45, " +
						"endAngle: 45, " +
						"background: null, " +
						"center: ['25%', '145%'], " +
						"size: 300 " +
					"}, " +
					"{ " +
						"startAngle: -45, " +
						"endAngle: 45, " +
						"background: null, " +
						"center: ['75%', '145%'], " +
						"size: 300 " +
					"}" +
				"]");
		chartComp34.setyAxisOptions("[" +
					"{" +
						"min: -20, " +
						"max: 6, " +
						"minorTickPosition: 'outside', " +
						"tickPosition: 'outside', " +
						"labels: { " +
							"rotation: 'auto', " +
							"distance: 20 " +
						"}, " +
						"plotBands: [" +
							"{ " +
								"from: 0, " +
								"to: 6, " +
								"color: '#C02316', " +
								"innerRadius: '100%', " +
								"outerRadius: '105%' " +
							"}" +
						"], " +
						"pane: 0, " +
						"title: { " +
							"text: 'VU<br/><span style=\"font-size:8px\">Channel A</span>', " +
							"y: -40 " +
						"} " +
					"}, " +
					"{ " +
						"min: -20, " +
						"max: 6, " +
						"minorTickPosition: 'outside', " +
						"tickPosition: 'outside', " +
						"labels: { " +
							"rotation: 'auto', " +
							"distance: 20 " +
						"}, " +
						"plotBands: [" +
							"{ " +
								"from: 0, " +
								"to: 6, " +
								"color: '#C02316', " +
								"innerRadius: '100%', " +
								"outerRadius: '105%' " +
							"}" +
						"], " +
						"pane: 1, " +
						"title: { " +
							"text: 'VU<br/><span style=\"font-size:8px\">Channel B</span>', " +
							"y: -40 " +
						"} " +
					"}" +
				"]");
		
		chartComp34.setPlotOptions("{ " +
					"gauge: { " +
						"dataLabels: { " +
							"enabled: false " +
						"}, " +
						"dial: { " +
							"radius: '100%' " +
						"}" +
					"} " +
				"}");
		
		series = new HashMap();
		series.put("yAxis", 0);
		chartComp34.setSeriesOptions("Channel A", series); 
		
		series = new HashMap();
		series.put("yAxis", 1);
		chartComp34.setSeriesOptions("Channel B", series); 

		
		chartComp34.setModel(dataChartModel34);
		
		//Initial Value
		dataChartModel34.addValue("Channel A", 0, -10);		
		dataChartModel34.addValue("Channel B", 1, -5);		
		
		//================================================================================
	    // Doublebox onOK Listener
	    //================================================================================

		doubleB= (Doublebox) getFellow("doubleB");
		doubleB.addEventListener("onOK", this);
	}
	
	@Override
	public void onEvent(Event arg0) throws Exception {
		
		//Doublebox onOK Listener
		chartComp32.setGaugeValue(0, doubleB.getValue());
		chartComp33.setGaugeValue(0, doubleB.getValue());
		chartComp34.setGaugeValue(0, doubleB.getValue());
		chartComp34.setGaugeValue(1, doubleB.getValue() - 5);
	}

	/**
	 * internal method to convert date&time from string to epoch milliseconds
	 * 
	 * @param date
	 * @return
	 * @throws Exception
	 */
	private long getDateTime(String date) throws Exception {
		return sdf.parse(date).getTime();
	}

}

</pre>]]>
						</html>
					</tabpanel>
				</tabpanels>
			</tabbox>
		</groupbox>
		
		<groupbox mold="3d" width="100%" open="false">
			<caption label="Polar chart" />
			<tabbox>
				<tabs>
					<tab label="Overview" />
					<tab label="demo.zul" />
					<tab label="DemoComposer.java" />
				</tabs>
				<tabpanels>
					<tabpanel  style="text-align:center">
						<zhighcharts id="chartComp35" />
					</tabpanel>
					<tabpanel>
						<html>
							<![CDATA[ <pre class="brush:xml"> 
&lt;window title=&quot;Polar chart&quot; border=&quot;normal&quot; width=&quot;100%&quot;
	use=&quot;ctrl.DemoComposer&quot;&gt;
	&lt;zhighcharts id=&quot;chartComp35&quot; /&gt;
&lt;/window&gt;		
							</pre> ]]>
						</html>
					</tabpanel>
					<tabpanel>
						<html>
		<![CDATA[ <pre class="brush:java">
package ctrl;

import java.text.SimpleDateFormat;
import java.util.HashMap;
import java.util.Map;

import org.ngi.zhighcharts.SimpleExtXYModel;
import org.ngi.zhighcharts.ZHighCharts;
import org.zkoss.mesg.Messages;
import org.zkoss.util.logging.Log;
import org.zkoss.zk.ui.event.Event;
import org.zkoss.zk.ui.event.EventListener;
import org.zkoss.zul.Doublebox;
import org.zkoss.zul.Window;

public class NewDemoComposer extends Window implements EventListener {
	protected Log logger = Log.lookup(this.getClass());

	// Polar chart
	private ZHighCharts chartComp35;
	private SimpleExtXYModel dataChartModel35 = new SimpleExtXYModel();
	
	public void onCreate() throws Exception {
				
		//================================================================================
		// Polar chart
	    //================================================================================

		chartComp35 = (ZHighCharts) getFellow(&quot;chartComp35&quot;);
		chartComp35.setType(&quot;line&quot;);
		chartComp35.setOptions(&quot;{&quot; +
					&quot;polar: true&quot; +
				&quot;}&quot;);
		
		chartComp35.setTitle(&quot;Highcharts Polar Chart&quot;);
		chartComp35.setPane(&quot;{&quot; +
					&quot;startAngle: 0,&quot; +
					&quot;endAngle: 360&quot; +
				&quot;}&quot;);
		chartComp35.setxAxisOptions(&quot;{&quot; +
					&quot;tickInterval: 45,&quot; +
					&quot;min: 0, &quot; +
					&quot;max: 360, &quot; +
					&quot;labels: { &quot; +
						&quot;formatter: function () { &quot; +
							&quot;return this.value + '&#x00b0;'; &quot; +
						&quot;} &quot; +
					&quot;} &quot; +
				&quot;}&quot;);
		chartComp35.setyAxisOptions(&quot;{&quot; +
					&quot;min:0&quot; +
				&quot;}&quot;);
		chartComp35.setPlotOptions(&quot;{ &quot; +
					&quot;series: { &quot; +
						&quot;pointStart: 0, &quot; +
						&quot;pointInterval: 45 &quot; +
					&quot;}, &quot; +
					&quot;column: { &quot; +
						&quot;pointPadding: 0, &quot; +
						&quot;groupPadding: 0 &quot; +
					&quot;} &quot; +
				&quot;}&quot;);
		chartComp35.setTooltipFormatter(&quot;function formatTooltip(obj){ &quot; +
				&quot;return obj.x + '&lt;br/&gt;&quot; +
				&quot;&lt;span style=\&quot;color:'+ obj.series.color +';\&quot;&gt;'+ obj.series.name +'&lt;/span&gt; : &lt;b&gt;'+ obj.y +'&lt;/b&gt;';&quot; + //donn&eacute;es 1&eacute;re s&eacute;rie
			&quot;}&quot;);
		
		series = new HashMap();
		series.put(&quot;type&quot;, &quot;column&quot;);
		series.put(&quot;pointPlacement&quot;, &quot;between&quot;);
		chartComp35.setSeriesOptions(&quot;Column&quot;, series); 
		
		series = new HashMap();
		series.put(&quot;type&quot;, &quot;line&quot;);
		chartComp35.setSeriesOptions(&quot;Line&quot;, series); 

		series = new HashMap();
		series.put(&quot;type&quot;, &quot;area&quot;);
		chartComp35.setSeriesOptions(&quot;Area&quot;, series); 
		
		chartComp35.setModel(dataChartModel35);
		
		//Add some date to the model
		Number colData[] = {8, 7, 6, 5, 4, 3, 2, 1};
		

		for (int i = 0;i&lt;colData.length;i++){
			dataChartModel35.addValue(&quot;Column&quot;, i * 45, colData[i]);
		}
		
		Number lineData[] = {1, 2, 3, 4, 5, 6, 7, 8};
		
		for (int i = 0;i&lt;lineData.length;i++){
			dataChartModel35.addValue(&quot;Line&quot;, i * 45, lineData[i]);
		}
		
		Number areaData[] = {1, 8, 2, 7, 3, 6, 4, 5};
		
		for (int i = 0;i&lt;areaData.length;i++){
			dataChartModel35.addValue(&quot;Area&quot;, i * 45, areaData[i]);
		}
		
		
	}
	
	@Override
	public void onEvent(Event arg0) throws Exception {
		

	}
}
		
		</pre>]]>
						</html>
					</tabpanel>
				</tabpanels>
			</tabbox>
		</groupbox>
		
		<groupbox mold="3d" width="100%" open="false">
			<caption label="Spiderweb" />
			<tabbox>
				<tabs>
					<tab label="Overview" />
					<tab label="demo.zul" />
					<tab label="DemoComposer.java" />
				</tabs>
				<tabpanels>
					<tabpanel  style="text-align:center">
						<zhighcharts id="chartComp36" />
					</tabpanel>
					<tabpanel>
						<html>
							<![CDATA[ <pre class="brush:xml"> 
&lt;window title=&quot;Spiderweb&quot; border=&quot;normal&quot; width=&quot;100%&quot;
	use=&quot;ctrl.DemoComposer&quot;&gt;
	&lt;zhighcharts id=&quot;chartComp36&quot; /&gt;
&lt;/window&gt;		
							</pre> ]]>
						</html>
					</tabpanel>
					<tabpanel>
						<html>
		<![CDATA[ <pre class="brush:java">
package ctrl;

import java.text.SimpleDateFormat;
import java.util.HashMap;
import java.util.Map;

import org.ngi.zhighcharts.SimpleExtXYModel;
import org.ngi.zhighcharts.ZHighCharts;
import org.zkoss.mesg.Messages;
import org.zkoss.util.logging.Log;
import org.zkoss.zk.ui.event.Event;
import org.zkoss.zk.ui.event.EventListener;
import org.zkoss.zul.Doublebox;
import org.zkoss.zul.Window;

public class NewDemoComposer extends Window implements EventListener {
	protected Log logger = Log.lookup(this.getClass());

	// Spiderweb
	private ZHighCharts chartComp36;
	private SimpleExtXYModel dataChartModel36 = new SimpleExtXYModel();
	
	public void onCreate() throws Exception {
		
		//================================================================================
		// Spiderweb
	    //================================================================================

		chartComp36 = (ZHighCharts) getFellow(&quot;chartComp36&quot;);
		chartComp36.setType(&quot;line&quot;);
		chartComp36.setOptions(&quot;{&quot; +
					&quot;polar: true,&quot; +
					&quot;plotBackgroundColor: null,&quot; +
					&quot;plotBackgroundImage: null,&quot; +
					&quot;plotBorderWidth: 0,&quot; +
					&quot;plotShadow: false&quot; +
				&quot;}&quot;);
		chartComp36.setTitle(&quot;Spiderweb&quot;);
		chartComp36.setSubTitle(&quot;Budget vs spending&quot;);
		chartComp36.setPane(&quot;{&quot; +
					&quot;size: '80%'&quot; +
				&quot;}&quot;);
		chartComp36.setxAxisOptions(&quot;{ &quot; +
					&quot;categories: [&quot; +
						&quot;'Sales', &quot; +
						&quot;'Marketing', &quot; +
						&quot;'Development', &quot; +
						&quot;'Customer Support', &quot; +
						&quot;'Information Technology', &quot; +
						&quot;'Administration'&quot; +
					&quot;],&quot; +
					&quot;tickmarkPlacement: 'on', &quot; +
					&quot;lineWidth: 0 &quot; +
				&quot;}&quot;);
		chartComp36.setyAxisOptions(&quot;{ &quot; +
					&quot;gridLineInterpolation: 'polygon',&quot; +
					&quot;lineWidth: 0,&quot; +
					&quot;min: 0&quot; +
				&quot;}&quot;);
		chartComp36.setTooltipOptions(&quot;{&quot; +
					&quot;shared: true&quot; +
				&quot;}&quot;);
		chartComp36.setTooltipFormatter(&quot;function formatTooltip(obj){ &quot; +
					&quot;return obj.x + '&lt;br/&gt;&quot; +
					&quot;&lt;span style=\&quot;color:'+ obj.points[0].series.color +';\&quot;&gt;'+ obj.points[0].series.name +'&lt;/span&gt; : &lt;b&gt;$'+ obj.points[0].y +'&lt;/b&gt;&lt;br/&gt;&quot; + //donn&eacute;es 1&eacute;re s&eacute;rie
					&quot;&lt;span style=\&quot;color:'+ obj.points[1].series.color +';\&quot;&gt;'+ obj.points[1].series.name +'&lt;/span&gt; : &lt;b&gt;$'+ obj.points[1].y +'&lt;/b&gt;';&quot; + //donn&eacute;es 2&egrave;me s&eacute;rie
				&quot;}&quot;);

		chartComp36.setModel(dataChartModel36);
		
		
		series = new HashMap();
		series.put(&quot;pointPlacement&quot;, &quot;on&quot;);
		chartComp36.setSeriesOptions(&quot;Allocated Budget&quot;, series); 
		
		series = new HashMap();
		series.put(&quot;pointPlacement&quot;, &quot;on&quot;);
		chartComp36.setSeriesOptions(&quot;Actual Spending&quot;, series); 
		
		//Add some date to the model
		Number alloData[] = {43000, 19000, 60000, 35000, 17000, 10000};
		

		for (int i = 0;i&lt;alloData.length;i++){
			dataChartModel36.addValue(&quot;Allocated Budget&quot;, i , alloData[i]);
		}
		
		Number actuData[] = {50000, 39000, 42000, 31000, 26000, 14000};
		
		for (int i = 0;i&lt;actuData.length;i++){
			dataChartModel36.addValue(&quot;Actual Spending&quot;, i , actuData[i]);
		}		
	}
	
	@Override
	public void onEvent(Event arg0) throws Exception {
		

	}
}
		
		</pre>]]>
						</html>
					</tabpanel>
				</tabpanels>
			</tabbox>
		</groupbox>		
		
	<label value="Source code:" style="font-size:2em;color:red"/>
		
	<tabbox>
	<tabs>
		<tab label="Use" />
		<tab label="demo.zul" />
		<tab label="DemoComposer.java" />
	</tabs>
	<tabpanels>
		<tabpanel><html><![CDATA[  
		To include a chart on your ZK project:
		<ol>
		<li>Add <b>zhighcharts-0.2.0.jar</b> to the directory <b>WEB-INF/lib</b></li>
		<li>Add the component to your ZUL file (see <b>demo.zul</b>)</li>
		<li>Initialize the component in his controller (see <b>DemoComposer.java</b>)</li>
		<li>Enjoy!</li>
		</ol>            
		]]></html></tabpanel>
		<tabpanel><html><![CDATA[ 
<pre class="brush:xml">
&lt;window title=&quot;ZHighCharts Demo&quot; border=&quot;normal&quot; width=&quot;100%&quot;
	use=&quot;ctrl.DemoComposer&quot;&gt;
	&lt;label value=&quot;Line and scatter charts&quot; style=&quot;font-size:2em;&quot;/&gt;
	&lt;groupbox mold=&quot;3d&quot; width=&quot;100%&quot; open=&quot;false&quot;&gt;
		&lt;caption label=&quot;Basic Line&quot; /&gt;
		&lt;zhighcharts id=&quot;chartComp&quot; /&gt;
	&lt;/groupbox&gt;
	&lt;groupbox mold=&quot;3d&quot; width=&quot;100%&quot; open=&quot;false&quot;&gt;
		&lt;caption label=&quot;Shared Tooltip, Clickable points&quot; /&gt;
		&lt;zhighcharts id=&quot;chartComp3&quot; /&gt;
	&lt;/groupbox&gt;
	&lt;groupbox mold=&quot;3d&quot; width=&quot;100%&quot; open=&quot;false&quot;&gt;
		&lt;caption label=&quot;Time series, zoomable&quot; /&gt;
		&lt;zhighcharts id=&quot;chartComp4&quot; /&gt;
	&lt;/groupbox&gt;
	&lt;groupbox mold=&quot;3d&quot; width=&quot;100%&quot; open=&quot;false&quot;&gt;
		&lt;caption label=&quot;Spline with inverted axes&quot; /&gt;
		&lt;zhighcharts id=&quot;chartComp6&quot; /&gt;
	&lt;/groupbox&gt;		
	&lt;groupbox mold=&quot;3d&quot; width=&quot;100%&quot; open=&quot;false&quot;&gt;
		&lt;caption label=&quot;Spline with symbols&quot; /&gt;
		&lt;zhighcharts id=&quot;chartComp7&quot; /&gt;
	&lt;/groupbox&gt;	
	&lt;groupbox mold=&quot;3d&quot; width=&quot;100%&quot; open=&quot;false&quot;&gt;
		&lt;caption label=&quot;Spline with plot bands&quot; /&gt;
		&lt;zhighcharts id=&quot;chartComp8&quot; /&gt;
	&lt;/groupbox&gt;	
	&lt;groupbox mold=&quot;3d&quot; width=&quot;100%&quot; open=&quot;false&quot;&gt;
		&lt;caption label=&quot;Time data with irregular intervals&quot; /&gt;
		&lt;zhighcharts id=&quot;chartComp9&quot; /&gt;
	&lt;/groupbox&gt;
	&lt;groupbox mold=&quot;3d&quot; width=&quot;100%&quot; open=&quot;false&quot;&gt;
		&lt;caption label=&quot;Logarithmic axis&quot; /&gt;
		&lt;zhighcharts id=&quot;chartComp10&quot; /&gt;
	&lt;/groupbox&gt;
	&lt;groupbox mold=&quot;3d&quot; width=&quot;100%&quot; open=&quot;false&quot;&gt;
		&lt;caption label=&quot;Scatter plot&quot; /&gt;
		&lt;zhighcharts id=&quot;chartComp11&quot; /&gt;
	&lt;/groupbox&gt;
	
	&lt;label value=&quot;Area charts&quot; style=&quot;font-size:2em;&quot;/&gt;
	&lt;groupbox mold=&quot;3d&quot; width=&quot;100%&quot; open=&quot;false&quot;&gt;
		&lt;caption label=&quot;Basic area&quot; /&gt;
		&lt;zhighcharts id=&quot;chartComp5&quot; /&gt;
	&lt;/groupbox&gt;
	&lt;groupbox mold=&quot;3d&quot; width=&quot;100%&quot; open=&quot;false&quot;&gt;
		&lt;caption label=&quot;Area with negative values&quot; /&gt;
		&lt;zhighcharts id=&quot;chartComp12&quot; /&gt;
	&lt;/groupbox&gt;
	&lt;groupbox mold=&quot;3d&quot; width=&quot;100%&quot; open=&quot;false&quot;&gt;
		&lt;caption label=&quot;Stacked area&quot; /&gt;
		&lt;zhighcharts id=&quot;chartComp13&quot; /&gt;
	&lt;/groupbox&gt;
	&lt;groupbox mold=&quot;3d&quot; width=&quot;100%&quot; open=&quot;false&quot;&gt;
		&lt;caption label=&quot;Percentage area&quot; /&gt;
		&lt;zhighcharts id=&quot;chartComp14&quot; /&gt;
	&lt;/groupbox&gt;
	&lt;groupbox mold=&quot;3d&quot; width=&quot;100%&quot; open=&quot;false&quot;&gt;
		&lt;caption label=&quot;Area with missing points&quot; /&gt;
		&lt;zhighcharts id=&quot;chartComp15&quot; /&gt;
	&lt;/groupbox&gt;
	&lt;groupbox mold=&quot;3d&quot; width=&quot;100%&quot; open=&quot;false&quot;&gt;
		&lt;caption label=&quot;Inverted axes&quot; /&gt;
		&lt;zhighcharts id=&quot;chartComp16&quot; /&gt;
	&lt;/groupbox&gt;
	&lt;groupbox mold=&quot;3d&quot; width=&quot;100%&quot; open=&quot;false&quot;&gt;
		&lt;caption label=&quot;Area-spline&quot; /&gt;
		&lt;zhighcharts id=&quot;chartComp17&quot; /&gt;
	&lt;/groupbox&gt;
	
	&lt;label value=&quot;Column and bar charts&quot; style=&quot;font-size:2em;&quot;/&gt;
	&lt;groupbox mold=&quot;3d&quot; width=&quot;100%&quot; open=&quot;false&quot;&gt;
		&lt;caption label=&quot;Basic bar&quot; /&gt;
		&lt;zhighcharts id=&quot;chartComp18&quot; /&gt;
	&lt;/groupbox&gt;
	&lt;groupbox mold=&quot;3d&quot; width=&quot;100%&quot; open=&quot;false&quot;&gt;
		&lt;caption label=&quot;Stacked bar&quot; /&gt;
		&lt;zhighcharts id=&quot;chartComp19&quot; /&gt;
	&lt;/groupbox&gt;
	&lt;groupbox mold=&quot;3d&quot; width=&quot;100%&quot; open=&quot;false&quot;&gt;
		&lt;caption label=&quot;Bar with negative stack&quot; /&gt;
		&lt;zhighcharts id=&quot;chartComp23&quot; /&gt;
	&lt;/groupbox&gt;
	&lt;groupbox mold=&quot;3d&quot; width=&quot;100%&quot; open=&quot;false&quot;&gt;
		&lt;caption label=&quot;Bar with negative stack&quot; /&gt;
		&lt;zhighcharts id=&quot;chartComp23&quot; /&gt;
	&lt;/groupbox&gt;
	&lt;groupbox mold=&quot;3d&quot; width=&quot;100%&quot; open=&quot;false&quot;&gt;
		&lt;caption label=&quot;Basic column&quot; /&gt;
		&lt;zhighcharts id=&quot;chartComp25&quot; /&gt;
	&lt;/groupbox&gt;
	&lt;groupbox mold=&quot;3d&quot; width=&quot;100%&quot; open=&quot;false&quot;&gt;
		&lt;caption label=&quot;Column with negative values&quot; /&gt;
		&lt;zhighcharts id=&quot;chartComp26&quot; /&gt;
	&lt;/groupbox&gt;
	&lt;groupbox mold=&quot;3d&quot; width=&quot;100%&quot; open=&quot;false&quot;&gt;
		&lt;caption label=&quot;Stacked column&quot; /&gt;
		&lt;zhighcharts id=&quot;chartComp27&quot; /&gt;
	&lt;/groupbox&gt;
	&lt;groupbox mold=&quot;3d&quot; width=&quot;100%&quot; open=&quot;false&quot;&gt;
		&lt;caption label=&quot;Stacked and grouped column&quot; /&gt;
		&lt;zhighcharts id=&quot;chartComp28&quot; /&gt;
	&lt;/groupbox&gt;
	&lt;groupbox mold=&quot;3d&quot; width=&quot;100%&quot; open=&quot;false&quot;&gt;
		&lt;caption label=&quot;Stacked percentage column&quot; /&gt;
		&lt;zhighcharts id=&quot;chartComp29&quot; /&gt;
	&lt;/groupbox&gt;
	&lt;groupbox mold=&quot;3d&quot; width=&quot;100%&quot; open=&quot;false&quot;&gt;
		&lt;caption label=&quot;Column with rotated labels&quot; /&gt;
		&lt;zhighcharts id=&quot;chartComp30&quot; /&gt;
	&lt;/groupbox&gt;
	
	&lt;label value=&quot;Pie charts&quot; style=&quot;font-size:2em;&quot;/&gt;
	&lt;groupbox mold=&quot;3d&quot; width=&quot;100%&quot; open=&quot;false&quot;&gt;
		&lt;caption label=&quot;Pie chart&quot; /&gt;
		&lt;zhighcharts id=&quot;chartComp2&quot; /&gt;
	&lt;/groupbox&gt;
	&lt;groupbox mold=&quot;3d&quot; width=&quot;100%&quot; open=&quot;false&quot;&gt;
		&lt;caption label=&quot;Pie with legend&quot; /&gt;
		&lt;zhighcharts id=&quot;chartComp20&quot; /&gt;
	&lt;/groupbox&gt;
	
	&lt;label value=&quot;Dynamic charts&quot; style=&quot;font-size:2em;&quot;/&gt;
	&lt;groupbox mold=&quot;3d&quot; width=&quot;100%&quot; open=&quot;false&quot;&gt;
		&lt;caption label=&quot;Spline updating each second&quot; /&gt;
		&lt;zhighcharts id=&quot;chartComp21&quot; /&gt;
	&lt;/groupbox&gt;
	&lt;groupbox mold=&quot;3d&quot; width=&quot;100%&quot; open=&quot;false&quot;&gt;
		&lt;caption label=&quot;Click to add a point&quot; /&gt;
		&lt;zhighcharts id=&quot;chartComp22&quot; /&gt;
	&lt;/groupbox&gt;
	
	&lt;label value=&quot;Combinations&quot; style=&quot;font-size:2em;&quot;/&gt;
	&lt;groupbox mold=&quot;3d&quot; width=&quot;100%&quot; open=&quot;false&quot;&gt;
		&lt;caption label=&quot;Multiple axes&quot; /&gt;
		&lt;zhighcharts id=&quot;chartComp24&quot; /&gt;
	&lt;/groupbox&gt;
	&lt;label value=&quot;Combinations&quot; style=&quot;font-size:2em;&quot;/&gt;
	&lt;groupbox mold=&quot;3d&quot; width=&quot;100%&quot; open=&quot;false&quot;&gt;
		&lt;caption label=&quot;Multiple axes - yAxis in Pure Java code&quot; /&gt;
		&lt;zhighcharts id=&quot;chartComp37&quot; /&gt;
	&lt;/groupbox&gt;
		&lt;groupbox mold=&quot;3d&quot; width=&quot;100%&quot; open=&quot;false&quot;&gt;
		&lt;caption label=&quot;Column and line&quot; /&gt;
		&lt;zhighcharts id=&quot;chartComp31&quot; /&gt;
	&lt;/groupbox&gt;

	&lt;label value=&quot;jsgauge&quot; style=&quot;font-size:2em;&quot;/&gt;
	&lt;groupbox mold=&quot;3d&quot; width=&quot;100%&quot; open=&quot;false&quot;&gt;
		&lt;caption label=&quot;jsgauge Basic Example&quot; /&gt;
		&lt;/hlayout&gt;
			&lt;zgauge id=&quot;speedGauge&quot;	height=&quot;150px&quot; width=&quot;150px&quot; value=&quot;150&quot;
				options=&quot;{label:'vitesse',min:0,max:240,unitsLabel:' km/h',majorTicks: 9,
				bands: [{color: 'rgba(255,255,0,0.5)', from: 110, to: 140 },
				{color: 'rgba(255,0,0,0.5)', from: 140, to: 240 }]}&quot;/&gt;
			&lt;zgauge id=&quot;zgauge1&quot; /&gt;	
		&lt;/hlayout&gt;
		&lt;hlayout&gt;
			Modifier la vitesse : &lt;doublebox onOK=&quot;speedGauge.setValue(self.value);zgauge1.setValue(self.value);&quot; /&gt;
		&lt;/hlayout&gt;
	&lt;/groupbox&gt;
	
	&lt;label value=&quot;More chart types&quot; style=&quot;font-size:2em;&quot;/&gt;
	&lt;groupbox mold=&quot;3d&quot; width=&quot;100%&quot; open=&quot;false&quot;&gt;
		&lt;caption label=&quot;Angular gauge, Gauge with dual axes and VU meter&quot; /&gt;
		&lt;hlayout&gt;
			&lt;zhighcharts width=&quot;250px&quot; id=&quot;chartComp32&quot; /&gt;
			&lt;zhighcharts width=&quot;250px&quot; id=&quot;chartComp33&quot; /&gt;
		&lt;/hlayout&gt;
		&lt;hlayout&gt;
			&lt;zhighcharts id=&quot;chartComp34&quot; /&gt;
		&lt;/hlayout&gt;
		&lt;hlayout&gt;
	        Modifier la valeur : &lt;doublebox id=&quot;doubleB&quot;/&gt;
	    &lt;/hlayout&gt;
	&lt;/groupbox&gt;
	&lt;groupbox mold=&quot;3d&quot; width=&quot;100%&quot; open=&quot;false&quot;&gt;
		&lt;caption label=&quot;Polar chart&quot; /&gt;
		&lt;zhighcharts id=&quot;chartComp35&quot; /&gt;
	&lt;/groupbox&gt;
	&lt;groupbox mold=&quot;3d&quot; width=&quot;100%&quot; open=&quot;false&quot;&gt;
		&lt;caption label=&quot;Spiderweb&quot; /&gt;
		&lt;zhighcharts id=&quot;chartComp36&quot; /&gt;
	&lt;/groupbox&gt;
&lt;/window&gt;
</pre>
		]]></html></tabpanel>
		<tabpanel>
		<html><![CDATA[ 
<pre class="brush:java">
package ctrl;

import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.ngi.zhighcharts.SimpleExtXYModel;
import org.ngi.zhighcharts.ZGauge;
import org.ngi.zhighcharts.ZHighCharts;
import org.zkoss.util.logging.Log;
import org.zkoss.zk.ui.event.Event;
import org.zkoss.zk.ui.event.EventListener;
import org.zkoss.zul.Doublebox;
import org.zkoss.zul.SimplePieModel;
import org.zkoss.zul.Window;

public class DemoComposer extends Window implements EventListener {
	protected Log logger = Log.lookup(this.getClass());

	//Basic Line	
	private ZHighCharts chartComp;
	private SimpleExtXYModel dataChartModel = new SimpleExtXYModel();
	
	//Pie chart
	private ZHighCharts chartComp2;
	private SimplePieModel pieModel = new SimplePieModel();
	
	//Shared Tooltip, Clickable points
	private ZHighCharts chartComp3;
	private SimpleExtXYModel dataChartModel3 = new SimpleExtXYModel();

	//Time series, zoomable
	private ZHighCharts chartComp4;
	private SimpleExtXYModel dataChartModel4 = new SimpleExtXYModel();
	
	//Basic area
	private ZHighCharts chartComp5;
	private SimpleExtXYModel dataChartModel5 = new SimpleExtXYModel();
	
	//Spline with inverted axes
	private ZHighCharts chartComp6;
	private SimpleExtXYModel dataChartModel6 = new SimpleExtXYModel();
	
	//Spline with symbols
	private ZHighCharts chartComp7;
	private SimpleExtXYModel dataChartModel7 = new SimpleExtXYModel();
	
	//Spline with plot bands
	private ZHighCharts chartComp8;
	private SimpleExtXYModel dataChartModel8 = new SimpleExtXYModel();
	
	//Time data with irregular intervals
	private ZHighCharts chartComp9;
	private SimpleExtXYModel dataChartModel9 = new SimpleExtXYModel();

	//Logarithmic axis
	private ZHighCharts chartComp10;
	private SimpleExtXYModel dataChartModel10 = new SimpleExtXYModel();
	
	//Scatter plot
	private ZHighCharts chartComp11;
	private SimpleExtXYModel dataChartModel11 = new SimpleExtXYModel();

	//Area with negative values
	private ZHighCharts chartComp12;
	private SimpleExtXYModel dataChartModel12 = new SimpleExtXYModel();
	
	//Stacked area
	private ZHighCharts chartComp13;
	private SimpleExtXYModel dataChartModel13 = new SimpleExtXYModel();
	
	//Percentage area
	private ZHighCharts chartComp14;
	
	//Area with missing points
	private ZHighCharts chartComp15;
	private SimpleExtXYModel dataChartModel15 = new SimpleExtXYModel();
	
	//Inverted axes
	private ZHighCharts chartComp16;
	private SimpleExtXYModel dataChartModel16 = new SimpleExtXYModel();
	
	//Area-spline
	private ZHighCharts chartComp17;

	//Basic bar
	private ZHighCharts chartComp18;
	private SimpleExtXYModel dataChartModel18 = new SimpleExtXYModel();
	
	//Stacked bar
	private ZHighCharts chartComp19;
	private SimpleExtXYModel dataChartModel19 = new SimpleExtXYModel();
	
	//Pie with legend
	private ZHighCharts chartComp20;
	private SimpleExtXYModel dataChartModel20 = new SimpleExtXYModel();
	
	//Spline updating each second
	private ZHighCharts chartComp21;
	private SimpleExtXYModel dataChartModel21 = new SimpleExtXYModel();
	
	//Click to add a point
	private ZHighCharts chartComp22;
	private SimpleExtXYModel dataChartModel22 = new SimpleExtXYModel();
	
	//Bar with negative stack
	private ZHighCharts chartComp23;
	private SimpleExtXYModel dataChartModel23 = new SimpleExtXYModel();
	
	// Multiple axes
	private ZHighCharts chartComp24;
	private SimpleExtXYModel dataChartModel24 = new SimpleExtXYModel();
	
	// Multiple axes - yAxis in Pure Java code
	private ZHighCharts chartComp37;
	private SimpleExtXYModel dataChartModel37 = new SimpleExtXYModel();

	// Basic column
	private ZHighCharts chartComp25;
	private SimpleExtXYModel dataChartModel25 = new SimpleExtXYModel();
	
	// Column with negative values
	private ZHighCharts chartComp26;
	private SimpleExtXYModel dataChartModel26 = new SimpleExtXYModel();
	
	// Stacked column
	private ZHighCharts chartComp27;
	private SimpleExtXYModel dataChartModel27 = new SimpleExtXYModel();
	
	// Stacked column
	private ZHighCharts chartComp28;
	private SimpleExtXYModel dataChartModel28 = new SimpleExtXYModel();
	
	// Stacked percentage column
	private ZHighCharts chartComp29;
	private SimpleExtXYModel dataChartModel29 = new SimpleExtXYModel();
	
	// Column with rotated labels
	private ZHighCharts chartComp30;
	private SimpleExtXYModel dataChartModel30 = new SimpleExtXYModel();
	
	// Column and line
	private ZHighCharts chartComp31;
	private SimpleExtXYModel dataChartModel31 = new SimpleExtXYModel();
	
	// jsgauge Basic Example
	private ZGauge zgauge1;
	
	//Angular gauge
	private ZHighCharts chartComp32;
	private SimpleExtXYModel dataChartModel32 = new SimpleExtXYModel();
	
	//Gauge with dual axes
	private ZHighCharts chartComp33;
	private SimpleExtXYModel dataChartModel33 = new SimpleExtXYModel();
	
	// VU meter
	private ZHighCharts chartComp34;
	private SimpleExtXYModel dataChartModel34 = new SimpleExtXYModel();
	
	//
	private Doublebox doubleB;
	
	// Polar chart
	private ZHighCharts chartComp35;
	private SimpleExtXYModel dataChartModel35 = new SimpleExtXYModel();
	
	// Spiderweb
	private ZHighCharts chartComp36;
	private SimpleExtXYModel dataChartModel36 = new SimpleExtXYModel();
	
	
	// date format used to capture date time
	private SimpleDateFormat sdf = new SimpleDateFormat(&quot;yyyy-MM-dd HH:mm:ss z&quot;);
	
	public void onCreate() throws Exception {
		
		//================================================================================
	    // Basic Line
	    //================================================================================

		chartComp = (ZHighCharts) getFellow(&quot;chartComp&quot;);
		chartComp.setTitle(&quot;Monthly Average Temperature&quot;);
		chartComp.setSubTitle(&quot;Source: WorldClimate.com&quot;);
		chartComp.setType(&quot;line&quot;);
		chartComp.setXAxisTitle(&quot;Months&quot;);
		chartComp.setxAxisOptions(&quot;{&quot; +
					&quot;categories: [&quot; +
						&quot;'Jan', &quot; +
						&quot;'Feb', &quot; +
						&quot;'Mar', &quot; +
						&quot;'Apr', &quot; +
						&quot;'May', &quot; +
						&quot;'Jun', &quot; +
						&quot;'Jul', &quot; +
						&quot;'Aug', &quot; +
						&quot;'Sep', &quot; +
						&quot;'Oct', &quot; +
						&quot;'Nov', &quot; +
						&quot;'Dec'&quot; +
					&quot;]&quot; +
				&quot;}&quot;);
		chartComp.setYAxisTitle(&quot;Temperature (&#x00b0;C)&quot;);
		chartComp.setyAxisOptions(&quot;{&quot; +
					&quot;plotLines: [&quot; +
					&quot;{&quot; +
						&quot;value: 0, &quot; +
						&quot;width: 1,&quot; +
						&quot;color: '#808080' &quot; +
					&quot;}]&quot; +
				&quot;}&quot;);
		chartComp.setLegend(&quot;{&quot; +
					&quot;layout: 'vertical',&quot; +
					&quot;align: 'right',&quot; +
					&quot;verticalAlign: 'top',&quot; +
					&quot;x: -10,&quot; +
					&quot;y: 100,&quot; +
					&quot;borderWidth: 0&quot; +
				&quot;}&quot;);
		chartComp.setPlotOptions(&quot;{&quot; +
					&quot;series:{&quot; +
						&quot;dataLabels:{&quot; +
							&quot;formatter: function (){return this.y +'&#x00b0;C';},&quot; + 
							&quot;enabled: true&quot; +
						&quot;}&quot; +
					&quot;}&quot; +
				&quot;}&quot;);

		chartComp.setTooltipFormatter(&quot;function formatTooltip(obj){ &quot; +
					&quot;return '&lt;b&gt;'+ obj.series.name +'&lt;/b&gt;&quot; +
					&quot;&lt;br/&gt;'+ obj.x +': '+ obj.y +'&#x00b0;C';&quot; +
				&quot;}&quot;);
		
		chartComp.setModel(dataChartModel);
		
		//Adding some data to the model
		dataChartModel.addValue(&quot;Tokyo&quot;, 0, 7);
		dataChartModel.addValue(&quot;Tokyo&quot;, 1, 6.9);
		dataChartModel.addValue(&quot;Tokyo&quot;, 2, 9.5);
		dataChartModel.addValue(&quot;Tokyo&quot;, 3, 14.5);
		dataChartModel.addValue(&quot;Tokyo&quot;, 4, 18.2);
		dataChartModel.addValue(&quot;Tokyo&quot;, 5, 21.5);
		dataChartModel.addValue(&quot;Tokyo&quot;, 6, 25.2);
		dataChartModel.addValue(&quot;Tokyo&quot;, 7, 26.5);
		dataChartModel.addValue(&quot;Tokyo&quot;, 8, 23.3);
		dataChartModel.addValue(&quot;Tokyo&quot;, 9, 18.3);
		dataChartModel.addValue(&quot;Tokyo&quot;, 10, 13.9);
		dataChartModel.addValue(&quot;Tokyo&quot;, 11, 9.6);

		dataChartModel.addValue(&quot;New York&quot;, 0, -0.2);
		dataChartModel.addValue(&quot;New York&quot;, 1, 0.8);
		dataChartModel.addValue(&quot;New York&quot;, 2, 5.7);
		dataChartModel.addValue(&quot;New York&quot;, 3, 11.3);
		dataChartModel.addValue(&quot;New York&quot;, 4, 17.0);
		dataChartModel.addValue(&quot;New York&quot;, 5, 22.0);
		dataChartModel.addValue(&quot;New York&quot;, 6, 24.8);
		dataChartModel.addValue(&quot;New York&quot;, 7, 24.1);
		dataChartModel.addValue(&quot;New York&quot;, 8, 20.1);
		dataChartModel.addValue(&quot;New York&quot;, 9, 14.1);
		dataChartModel.addValue(&quot;New York&quot;, 10, 8.6);
		dataChartModel.addValue(&quot;New York&quot;, 11, 2.5);
		
		dataChartModel.addValue(&quot;Berlin&quot;, 0, -0.9);
		dataChartModel.addValue(&quot;Berlin&quot;, 1, 0.6);
		dataChartModel.addValue(&quot;Berlin&quot;, 2, 3.5);
		dataChartModel.addValue(&quot;Berlin&quot;, 3, 8.4);
		dataChartModel.addValue(&quot;Berlin&quot;, 4, 13.5);
		dataChartModel.addValue(&quot;Berlin&quot;, 5, 17.0);
		dataChartModel.addValue(&quot;Berlin&quot;, 6, 18.6);
		dataChartModel.addValue(&quot;Berlin&quot;, 7, 17.9);
		dataChartModel.addValue(&quot;Berlin&quot;, 8, 14.3);
		dataChartModel.addValue(&quot;Berlin&quot;, 9, 9.0);
		dataChartModel.addValue(&quot;Berlin&quot;, 10, 3.9);
		dataChartModel.addValue(&quot;Berlin&quot;, 11, 1.0);
		
		dataChartModel.addValue(&quot;London&quot;, 0, 3.9);
		dataChartModel.addValue(&quot;London&quot;, 1, 4.2);
		dataChartModel.addValue(&quot;London&quot;, 2, 5.7);
		dataChartModel.addValue(&quot;London&quot;, 3, 8.5);
		dataChartModel.addValue(&quot;London&quot;, 4, 11.9);
		dataChartModel.addValue(&quot;London&quot;, 5, 15.2);
		dataChartModel.addValue(&quot;London&quot;, 6, 17.0);
		dataChartModel.addValue(&quot;London&quot;, 7, 16.6);
		dataChartModel.addValue(&quot;London&quot;, 8, 14.2);
		dataChartModel.addValue(&quot;London&quot;, 9, 10.3);
		dataChartModel.addValue(&quot;London&quot;, 10, 6.6);
		dataChartModel.addValue(&quot;London&quot;, 11, 4.8);
		
		
		//================================================================================
	    // Pie chart
	    //================================================================================

		chartComp2 = (ZHighCharts) getFellow(&quot;chartComp2&quot;);
		chartComp2.setTitle(&quot;Browser market shares at a specific website&quot;);
		chartComp2.setSubTitle(&quot;2010&quot;);
		chartComp2.setType(&quot;pie&quot;);
		chartComp2.setTooltipFormatter(&quot;function formatTooltip(obj){&quot; +
					&quot;return obj.key + '&lt;br /&gt;Browser Share: &lt;b&gt;'+obj.y+'%&lt;/b&gt;'&quot; +
				&quot;}&quot;);
		chartComp2.setPlotOptions(&quot;{&quot; +
					&quot;pie:{&quot; +
						&quot;allowPointSelect: true,&quot; +
						&quot;cursor: 'pointer',&quot; +
						&quot;dataLabels: {&quot; +
							&quot;enabled: true, &quot; +
							&quot;color: '#000000',&quot; +
							&quot;connectorColor: '#000000',&quot; +
							&quot;formatter: function() {&quot;+
	                            &quot;return '&lt;b&gt;'+ this.point.name +'&lt;/b&gt;: '+ this.percentage +' %';&quot;+
	                        &quot;}&quot;+
						&quot;}&quot; +
					&quot;}&quot; +
				&quot;}&quot;);
		
		chartComp2.setModel(pieModel);	
		
		//Adding some data to the model
		pieModel.setValue(&quot;Firefox&quot;, 45.0);
		pieModel.setValue(&quot;IE&quot;, 26.8);
		pieModel.setValue(&quot;Chrome&quot;, 12.8);
		pieModel.setValue(&quot;Safari&quot;, 8.5);
		pieModel.setValue(&quot;Opera&quot;, 6.2);
		pieModel.setValue(&quot;Others&quot;, 0.7);
		
		//================================================================================
	    // Shared Tooltip, Clickable points
	    //================================================================================

		chartComp3 = (ZHighCharts) getFellow(&quot;chartComp3&quot;);
		chartComp3.setTitle(&quot;Daily visits at www.highcharts.com&quot;);
		chartComp3.setSubTitle(&quot;Source: Google Analytics&quot;);
		chartComp3.setType(&quot;line&quot;);
		chartComp3.setxAxisOptions(&quot;{&quot; +
				&quot;type: 'datetime',&quot; +
				&quot;tickInterval: 7 * 86400000,&quot; +
				&quot;tickWidth: 0,&quot; +
				&quot;gridLineWidth: 1,&quot; +
				&quot;labels: {align: 'left',&quot; +
							&quot;x: 3,&quot; +
							&quot;y: -3&quot; +
						&quot;}&quot; +
				&quot;}&quot;);
		chartComp3.setyAxisOptions(&quot;[&quot; +
				&quot;{&quot; +
					&quot;labels: {&quot; +
						&quot;align: 'left',&quot; +
						&quot;x: 3,&quot; +
						&quot;y: 16,&quot; +
						&quot;formatter: function() {&quot; +
							&quot;return Highcharts.numberFormat(this.value, 0);&quot; +
						&quot;}&quot; +
					&quot;},&quot; +
					&quot;showFirstLabel: false&quot; +
				&quot;}, &quot; +
				&quot;{&quot; +
					&quot;linkedTo: 0,&quot; +
					&quot;gridLineWidth: 0,&quot; +
					&quot;opposite: true,&quot; +
					&quot;title: {text: null},&quot; +
					&quot;labels: {&quot; +
						&quot;align: 'right',&quot; +
						&quot;x: -3,&quot; +
						&quot;y: 16,&quot; +
						&quot;formatter: function() {&quot; +
							&quot;return Highcharts.numberFormat(this.value, 0);&quot; +
						&quot;}&quot; +
					&quot;},&quot; +
					&quot;showFirstLabel: false&quot; +
				&quot;}]&quot;);
		chartComp3.setLegend(&quot;{&quot; +
								&quot;align: 'left',&quot; +
								&quot;verticalAlign: 'top',&quot; +
								&quot;y: 20,&quot; +
								&quot;floating: true,&quot; +
								&quot;borderWidth: 0&quot; +
							&quot;}&quot;);
		chartComp3.setTooltipOptions(&quot;{&quot; +
					&quot;shared: true,&quot; +
					&quot;crosshairs: true&quot; +
				&quot;}&quot;);
		chartComp3.setTooltipFormatter(&quot;function formatTooltip(obj){&quot; +
					&quot;return Highcharts.dateFormat('%A, %b %d, %Y', obj.x) + '&lt;br/&gt;&quot; +
					&quot;&lt;span style=\&quot;color:'+ obj.points[0].series.color +';\&quot;&gt;'+ obj.points[0].series.name +'&lt;/span&gt; : &lt;b&gt;'+ obj.points[0].y +'&lt;/b&gt;&lt;br/&gt;&quot; +
					&quot;&lt;span style=\&quot;color:'+ obj.points[1].series.color +';\&quot;&gt;'+ obj.points[1].series.name +'&lt;/span&gt; : &lt;b&gt;'+ obj.points[1].y +'&lt;/b&gt;';&quot; +
				&quot;}&quot;);
		chartComp3.setPlotOptions(&quot;{ &quot; +
					&quot;series:{ &quot; +
						&quot;cursor:'pointer',&quot; +
						&quot;point:{&quot; +
							&quot;events:{ &quot; +
								&quot;click:function(){ &quot; +
									&quot;var string = this.series.name + '\\n' + Highcharts.dateFormat('%A, %b %d, %Y',this.x) + '\\n' + this.y + ' visits';&quot; + 
									&quot;alert(string);&quot; +
								&quot;} &quot; +
							&quot;} &quot; +
						&quot;}, &quot; +
						&quot;marker:{ &quot; +
							&quot;lineWidth:1 &quot; +
						&quot;} &quot; +
					&quot;} &quot; +
				&quot;}&quot;);
		
		//Setting some style to the series &quot;All Visits&quot;
		Map style = new HashMap();
		style.put(&quot;lineWidth&quot;, 4);
		Map marker = new HashMap();
		marker.put(&quot;radius&quot;, 4);
		style.put(&quot;marker&quot;, marker);
		chartComp3.setSeriesOptions(&quot;All Visits&quot;, style);
		
		chartComp3.setModel(dataChartModel3);
		
		//Adding some data to the model
		dataChartModel3.addValue(&quot;All Visits&quot;, getDateTime(&quot;2012-09-05 00:00:00 GMT&quot;), 966);
		dataChartModel3.addValue(&quot;All Visits&quot;, getDateTime(&quot;2012-09-06 00:00:00 GMT&quot;), 2475);
		dataChartModel3.addValue(&quot;All Visits&quot;, getDateTime(&quot;2012-09-07 00:00:00 GMT&quot;), 3336);
		dataChartModel3.addValue(&quot;All Visits&quot;, getDateTime(&quot;2012-09-08 00:00:00 GMT&quot;), 3211);
		dataChartModel3.addValue(&quot;All Visits&quot;, getDateTime(&quot;2012-09-09 00:00:00 GMT&quot;), 3229);
		dataChartModel3.addValue(&quot;All Visits&quot;, getDateTime(&quot;2012-09-10 00:00:00 GMT&quot;), 2808);
		dataChartModel3.addValue(&quot;All Visits&quot;, getDateTime(&quot;2012-09-11 00:00:00 GMT&quot;), 1168);
		dataChartModel3.addValue(&quot;All Visits&quot;, getDateTime(&quot;2012-09-12 00:00:00 GMT&quot;), 1110);
		dataChartModel3.addValue(&quot;All Visits&quot;, getDateTime(&quot;2012-09-13 00:00:00 GMT&quot;), 3112);
		dataChartModel3.addValue(&quot;All Visits&quot;, getDateTime(&quot;2012-09-14 00:00:00 GMT&quot;), 3590);
		dataChartModel3.addValue(&quot;All Visits&quot;, getDateTime(&quot;2012-09-15 00:00:00 GMT&quot;), 3529);
		dataChartModel3.addValue(&quot;All Visits&quot;, getDateTime(&quot;2012-09-16 00:00:00 GMT&quot;), 3519);
		dataChartModel3.addValue(&quot;All Visits&quot;, getDateTime(&quot;2012-09-17 00:00:00 GMT&quot;), 3696);
		dataChartModel3.addValue(&quot;All Visits&quot;, getDateTime(&quot;2012-09-18 00:00:00 GMT&quot;), 1400);
		dataChartModel3.addValue(&quot;All Visits&quot;, getDateTime(&quot;2012-09-19 00:00:00 GMT&quot;), 1302);
		dataChartModel3.addValue(&quot;All Visits&quot;, getDateTime(&quot;2012-09-20 00:00:00 GMT&quot;), 3348);
		dataChartModel3.addValue(&quot;All Visits&quot;, getDateTime(&quot;2012-09-21 00:00:00 GMT&quot;), 3606);
		dataChartModel3.addValue(&quot;All Visits&quot;, getDateTime(&quot;2012-09-22 00:00:00 GMT&quot;), 3320);
		dataChartModel3.addValue(&quot;All Visits&quot;, getDateTime(&quot;2012-09-23 00:00:00 GMT&quot;), 2677);
		dataChartModel3.addValue(&quot;All Visits&quot;, getDateTime(&quot;2012-09-24 00:00:00 GMT&quot;), 2795);
		dataChartModel3.addValue(&quot;All Visits&quot;, getDateTime(&quot;2012-09-25 00:00:00 GMT&quot;), 1299);
		dataChartModel3.addValue(&quot;All Visits&quot;, getDateTime(&quot;2012-09-26 00:00:00 GMT&quot;), 1189);
		dataChartModel3.addValue(&quot;All Visits&quot;, getDateTime(&quot;2012-09-27 00:00:00 GMT&quot;), 3189);
		dataChartModel3.addValue(&quot;All Visits&quot;, getDateTime(&quot;2012-09-28 00:00:00 GMT&quot;), 3223);
		dataChartModel3.addValue(&quot;All Visits&quot;, getDateTime(&quot;2012-09-29 00:00:00 GMT&quot;), 3231);
		dataChartModel3.addValue(&quot;All Visits&quot;, getDateTime(&quot;2012-09-30 00:00:00 GMT&quot;), 3608);
		dataChartModel3.addValue(&quot;All Visits&quot;, getDateTime(&quot;2012-10-01 00:00:00 GMT&quot;), 2945);
		dataChartModel3.addValue(&quot;All Visits&quot;, getDateTime(&quot;2012-10-02 00:00:00 GMT&quot;), 1508);
		dataChartModel3.addValue(&quot;All Visits&quot;, getDateTime(&quot;2012-10-03 00:00:00 GMT&quot;), 1114);
		dataChartModel3.addValue(&quot;All Visits&quot;, getDateTime(&quot;2012-10-04 00:00:00 GMT&quot;), 2774);
		dataChartModel3.addValue(&quot;All Visits&quot;, getDateTime(&quot;2012-10-05 00:00:00 GMT&quot;), 2679);
		
		dataChartModel3.addValue(&quot;New Visitors&quot;, getDateTime(&quot;2012-09-05 00:00:00 GMT&quot;), 433);
		dataChartModel3.addValue(&quot;New Visitors&quot;, getDateTime(&quot;2012-09-06 00:00:00 GMT&quot;), 983);
		dataChartModel3.addValue(&quot;New Visitors&quot;, getDateTime(&quot;2012-09-07 00:00:00 GMT&quot;), 1463);
		dataChartModel3.addValue(&quot;New Visitors&quot;, getDateTime(&quot;2012-09-08 00:00:00 GMT&quot;), 1316);
		dataChartModel3.addValue(&quot;New Visitors&quot;, getDateTime(&quot;2012-09-09 00:00:00 GMT&quot;), 1351);
		dataChartModel3.addValue(&quot;New Visitors&quot;, getDateTime(&quot;2012-09-10 00:00:00 GMT&quot;), 1270);
		dataChartModel3.addValue(&quot;New Visitors&quot;, getDateTime(&quot;2012-09-11 00:00:00 GMT&quot;), 604);
		dataChartModel3.addValue(&quot;New Visitors&quot;, getDateTime(&quot;2012-09-12 00:00:00 GMT&quot;), 498);
		dataChartModel3.addValue(&quot;New Visitors&quot;, getDateTime(&quot;2012-09-13 00:00:00 GMT&quot;), 1352);
		dataChartModel3.addValue(&quot;New Visitors&quot;, getDateTime(&quot;2012-09-14 00:00:00 GMT&quot;), 1626);
		dataChartModel3.addValue(&quot;New Visitors&quot;, getDateTime(&quot;2012-09-15 00:00:00 GMT&quot;), 1549);
		dataChartModel3.addValue(&quot;New Visitors&quot;, getDateTime(&quot;2012-09-16 00:00:00 GMT&quot;), 1574);
		dataChartModel3.addValue(&quot;New Visitors&quot;, getDateTime(&quot;2012-09-17 00:00:00 GMT&quot;), 1680);
		dataChartModel3.addValue(&quot;New Visitors&quot;, getDateTime(&quot;2012-09-18 00:00:00 GMT&quot;), 677);
		dataChartModel3.addValue(&quot;New Visitors&quot;, getDateTime(&quot;2012-09-19 00:00:00 GMT&quot;), 603);
		dataChartModel3.addValue(&quot;New Visitors&quot;, getDateTime(&quot;2012-09-20 00:00:00 GMT&quot;), 1472);
		dataChartModel3.addValue(&quot;New Visitors&quot;, getDateTime(&quot;2012-09-21 00:00:00 GMT&quot;), 1570);
		dataChartModel3.addValue(&quot;New Visitors&quot;, getDateTime(&quot;2012-09-22 00:00:00 GMT&quot;), 1438);
		dataChartModel3.addValue(&quot;New Visitors&quot;, getDateTime(&quot;2012-09-23 00:00:00 GMT&quot;), 1140);
		dataChartModel3.addValue(&quot;New Visitors&quot;, getDateTime(&quot;2012-09-24 00:00:00 GMT&quot;), 1256);
		dataChartModel3.addValue(&quot;New Visitors&quot;, getDateTime(&quot;2012-09-25 00:00:00 GMT&quot;), 589);
		dataChartModel3.addValue(&quot;New Visitors&quot;, getDateTime(&quot;2012-09-26 00:00:00 GMT&quot;), 533);
		dataChartModel3.addValue(&quot;New Visitors&quot;, getDateTime(&quot;2012-09-27 00:00:00 GMT&quot;), 1253);
		dataChartModel3.addValue(&quot;New Visitors&quot;, getDateTime(&quot;2012-09-28 00:00:00 GMT&quot;), 1266);
		dataChartModel3.addValue(&quot;New Visitors&quot;, getDateTime(&quot;2012-09-29 00:00:00 GMT&quot;), 1249);
		dataChartModel3.addValue(&quot;New Visitors&quot;, getDateTime(&quot;2012-09-30 00:00:00 GMT&quot;), 1684);
		dataChartModel3.addValue(&quot;New Visitors&quot;, getDateTime(&quot;2012-10-01 00:00:00 GMT&quot;), 1185);
		dataChartModel3.addValue(&quot;New Visitors&quot;, getDateTime(&quot;2012-10-02 00:00:00 GMT&quot;), 460);
		dataChartModel3.addValue(&quot;New Visitors&quot;, getDateTime(&quot;2012-10-03 00:00:00 GMT&quot;), 499);
		dataChartModel3.addValue(&quot;New Visitors&quot;, getDateTime(&quot;2012-10-04 00:00:00 GMT&quot;), 1131);
		dataChartModel3.addValue(&quot;New Visitors&quot;, getDateTime(&quot;2012-10-05 00:00:00 GMT&quot;), 1047);

		
		//================================================================================
	    // Time series, zoomable
	    //================================================================================

		chartComp4 = (ZHighCharts) getFellow(&quot;chartComp4&quot;);
		chartComp4.setType(&quot;area&quot;);
		chartComp4.setOptions(&quot;{&quot; +
					&quot;zoomType: 'x',&quot; +
					&quot;spacingRight: 20&quot; +
				&quot;}&quot;);
		chartComp4.setTitle(&quot;USD to EUR exchange rate from 2006 through 2008&quot;);
		chartComp4.setSubTitle(&quot;'Click and drag in the plot area to zoom in' :&quot;);
		chartComp4.setxAxisOptions(&quot;{&quot; +
					&quot;type: 'datetime',&quot; +
					&quot;maxZoom: 14 * 24 * 3600000&quot; +
				&quot;}&quot;);
		chartComp4.setyAxisOptions(&quot;{&quot; +
					&quot;min: 0.6,&quot; +
					&quot;startOnTick: false,&quot; +
					&quot;showFirstLabel: false&quot; +
				&quot;}&quot;);
		chartComp4.setYAxisTitle(&quot;Exchange rate&quot;);
		chartComp4.setLegend(&quot;{&quot; +
					&quot;enabled: false&quot; +
				&quot;}&quot;);
		chartComp4.setTooltipOptions(&quot;{&quot; +
					&quot;shared: true&quot; +
				&quot;}&quot;);
		chartComp4.setTooltipFormatter(&quot;function formatTooltip(obj){&quot; +
					&quot;return Highcharts.dateFormat('%A, %b %d, %Y', obj.x) + '&lt;br/&gt;&quot; +
					&quot;&lt;span style=\&quot;color:'+ obj.points[0].series.color +';\&quot;&gt;'+ obj.points[0].series.name +'&lt;/span&gt; : &lt;b&gt;'+ obj.points[0].y +'&lt;/b&gt;';&quot; +
				&quot;}&quot;);
		chartComp4.setPlotOptions(&quot;{&quot; +
					&quot;area:{&quot; +
						&quot;fillColor:{&quot; +
							&quot;linearGradient:{&quot; +
								&quot;x1:0,&quot; +
								&quot;y1:0,&quot; +
								&quot;x2:0,&quot; +
								&quot;y2:1&quot; +
							&quot;},&quot; +
							&quot;stops:[&quot; +
								&quot;[0,Highcharts.getOptions().colors[0]],&quot; +
								&quot;[1,'rgba(2,0,0,0)']&quot; +
							&quot;]&quot; +
						&quot;},&quot; +
						&quot;lineWidth:1,&quot; +
						&quot;marker:{&quot; +
							&quot;enabled:false,&quot; +
							&quot;states:{&quot; +
								&quot;hover:{&quot; +
									&quot;enabled:true,&quot; +
									&quot;radius:5&quot; +
								&quot;}&quot; +
							&quot;}&quot; +
						&quot;},&quot; +
						&quot;shadow:false,&quot; +
						&quot;states:{&quot; +
							&quot;hover:{&quot; +
								&quot;lineWidth:1&quot; +
							&quot;}&quot; +
						&quot;}&quot; +
					&quot;}&quot; +
				&quot;}&quot;);
				
		chartComp4.setModel(dataChartModel4);
		
		//Adding some data to the model
		Number dataChartTab4[] = {0.8446, 0.8445, 0.8444, 0.8451, 0.8418, 0.8264, 0.8258, 0.8232, 0.8233, 0.8258, 0.8283, 0.8278, 0.8256, 0.8292, 0.8239, 0.8239, 0.8245, 0.8265, 0.8261, 0.8269, 0.8273, 0.8244, 
				0.8244, 0.8172, 0.8139, 0.8146, 0.8164, 0.82,  0.8269, 0.8269, 0.8269, 0.8258, 0.8247, 0.8286, 0.8289, 0.8316, 0.832, 0.8333, 0.8352, 0.8357, 0.8355, 0.8354, 0.8403, 0.8403, 0.8406, 0.8403, 
				0.8396, 0.8418, 0.8409, 0.8384, 0.8386, 0.8372, 0.839, 0.84, 0.8389, 0.84, 0.8423, 0.8423, 0.8435, 0.8422, 0.838, 0.8373, 0.8316, 0.8303, 0.8303, 0.8302, 0.8369, 0.84, 0.8385, 0.84, 0.8401, 
				0.8402, 0.8381, 0.8351, 0.8314, 0.8273, 0.8213, 0.8207, 0.8207, 0.8215, 0.8242, 0.8273, 0.8301, 0.8346, 0.8312, 0.8312, 0.8312, 0.8306, 0.8327, 0.8282, 0.824, 0.8255, 0.8256, 0.8273, 0.8209, 
				0.8151, 0.8149, 0.8213, 0.8273, 0.8273, 0.8261, 0.8252, 0.824, 0.8262, 0.8258, 0.8261, 0.826, 0.8199, 0.8153, 0.8097, 0.8101, 0.8119, 0.8107, 0.8105, 0.8084, 0.8069, 0.8047, 0.8023, 0.7965, 
				0.7919, 0.7921, 0.7922, 0.7934, 0.7918, 0.7915, 0.787, 0.7861, 0.7861, 0.7853, 0.7867, 0.7827, 0.7834, 0.7766, 0.7751, 0.7739, 0.7767, 0.7802, 0.7788, 0.7828, 0.7816, 0.7829, 0.783, 0.7829, 
				0.7781, 0.7811, 0.7831, 0.7826, 0.7855, 0.7855, 0.7845, 0.7798, 0.7777, 0.7822, 0.7785, 0.7744, 0.7743, 0.7726, 0.7766, 0.7806, 0.785, 0.7907, 0.7912, 0.7913, 0.7931, 0.7952, 0.7951, 0.7928, 
				0.791, 0.7913, 0.7912, 0.7941, 0.7953, 0.7921, 0.7919, 0.7968, 0.7999, 0.7999, 0.7974, 0.7942, 0.796, 0.7969, 0.7862, 0.7821, 0.7821, 0.7821, 0.7811, 0.7833, 0.7849, 0.7819, 0.7809, 0.7809,
				0.7827, 0.7848, 0.785, 0.7873, 0.7894, 0.7907, 0.7909, 0.7947, 0.7987, 0.799, 0.7927, 0.79, 0.7878, 0.7878, 0.7907, 0.7922, 0.7937, 0.786, 0.787, 0.7838, 0.7838, 0.7837, 0.7836, 0.7806,
				0.7825, 0.7798, 0.777, 0.777, 0.7772, 0.7793, 0.7788, 0.7785, 0.7832, 0.7865, 0.7865, 0.7853, 0.7847, 0.7809, 0.778, 0.7799, 0.78, 0.7801, 0.7765, 0.7785, 0.7811, 0.782, 0.7835, 0.7845, 
				0.7844, 0.782, 0.7811, 0.7795, 0.7794, 0.7806, 0.7794, 0.7794, 0.7778, 0.7793, 0.7808, 0.7824, 0.787, 0.7894, 0.7893, 0.7882, 0.7871, 0.7882, 0.7871, 0.7878, 0.79, 0.7901, 0.7898, 0.7879, 
				0.7886, 0.7858, 0.7814, 0.7825, 0.7826, 0.7826, 0.786, 0.7878, 0.7868, 0.7883, 0.7893, 0.7892, 0.7876, 0.785, 0.787, 0.7873, 0.7901, 0.7936, 0.7939, 0.7938, 0.7956, 0.7975, 0.7978, 0.7972, 
				0.7995, 0.7995, 0.7994, 0.7976, 0.7977, 0.796, 0.7922, 0.7928, 0.7929, 0.7948, 0.797, 0.7953, 0.7907, 0.7872, 0.7852, 0.7852, 0.786, 0.7862, 0.7836, 0.7837, 0.784, 0.7867, 0.7867, 0.7869, 
				0.7837, 0.7827, 0.7825, 0.7779, 0.7791, 0.779, 0.7787, 0.78, 0.7807, 0.7803, 0.7817, 0.7799, 0.7799, 0.7795, 0.7801, 0.7765, 0.7725, 0.7683, 0.7641, 0.7639, 0.7616, 0.7608, 0.759, 0.7582, 
				0.7539, 0.75, 0.75, 0.7507, 0.7505, 0.7516, 0.7522, 0.7531, 0.7577, 0.7577, 0.7582, 0.755, 0.7542, 0.7576, 0.7616, 0.7648, 0.7648, 0.7641, 0.7614, 0.757, 0.7587, 0.7588, 0.762, 0.762, 0.7617,
				0.7618, 0.7615, 0.7612, 0.7596, 0.758, 0.758, 0.758, 0.7547, 0.7549, 0.7613, 0.7655, 0.7693, 0.7694, 0.7688, 0.7678, 0.7708, 0.7727, 0.7749, 0.7741, 0.7741, 0.7732, 0.7727, 0.7737, 0.7724, 
				0.7712, 0.772, 0.7721, 0.7717, 0.7704, 0.769, 0.7711, 0.774, 0.7745, 0.7745, 0.774, 0.7716, 0.7713, 0.7678, 0.7688, 0.7718, 0.7718, 0.7728, 0.7729, 0.7698, 0.7685, 0.7681, 0.769, 0.769, 0.7698, 
				0.7699, 0.7651, 0.7613, 0.7616, 0.7614, 0.7614, 0.7607, 0.7602, 0.7611, 0.7622, 0.7615, 0.7598, 0.7598, 0.7592, 0.7573, 0.7566, 0.7567, 0.7591, 0.7582, 0.7585, 0.7613, 0.7631, 0.7615, 0.76,
				0.7613, 0.7627, 0.7627, 0.7608, 0.7583, 0.7575, 0.7562, 0.752, 0.7512, 0.7512, 0.7517, 0.752,  0.7511, 0.748, 0.7509, 0.7531, 0.7531, 0.7527, 0.7498, 0.7493, 0.7504, 0.75, 0.7491, 0.7491, 
				0.7485, 0.7484, 0.7492, 0.7471, 0.7459, 0.7477, 0.7477, 0.7483, 0.7458, 0.7448, 0.743, 0.7399,  0.7395, 0.7395, 0.7378, 0.7382, 0.7362, 0.7355, 0.7348, 0.7361, 0.7361, 0.7365, 0.7362, 
				0.7331, 0.7339, 0.7344, 0.7327, 0.7327, 0.7336, 0.7333, 0.7359, 0.7359, 0.7372, 0.736, 0.736, 0.735, 0.7365, 0.7384, 0.7395, 0.7413, 0.7397, 0.7396, 0.7385, 0.7378, 0.7366, 0.74, 0.7411,
				0.7406, 0.7405, 0.7414, 0.7431, 0.7431, 0.7438, 0.7443, 0.7443, 0.7443, 0.7434, 0.7429, 0.7442, 0.744, 0.7439, 0.7437, 0.7437, 0.7429, 0.7403, 0.7399, 0.7418, 0.7468, 0.748, 0.748, 0.749, 
				0.7494, 0.7522, 0.7515, 0.7502, 0.7472, 0.7472, 0.7462, 0.7455, 0.7449, 0.7467, 0.7458, 0.7427, 0.7427, 0.743, 0.7429, 0.744, 0.743, 0.7422, 0.7388, 0.7388, 0.7369, 0.7345, 0.7345, 0.7345,
				0.7352, 0.7341, 0.7341, 0.734, 0.7324, 0.7272, 0.7264, 0.7255, 0.7258, 0.7258, 0.7256, 0.7257, 0.7247, 0.7243, 0.7244, 0.7235, 0.7235, 0.7235, 0.7235, 0.7262, 0.7288, 0.7301, 0.7337, 0.7337,
				0.7324, 0.7297, 0.7317, 0.7315, 0.7288, 0.7263, 0.7263, 0.7242, 0.7253, 0.7264, 0.727, 0.7312, 0.7305, 0.7305, 0.7318, 0.7358, 0.7409, 0.7454, 0.7437, 0.7424, 0.7424, 0.7415, 0.7419, 0.7414, 
				0.7377, 0.7355, 0.7315, 0.7315, 0.732, 0.7332, 0.7346, 0.7328, 0.7323, 0.734, 0.734, 0.7336, 0.7351, 0.7346, 0.7321, 0.7294, 0.7266, 0.7266, 0.7254, 0.7242, 0.7213, 0.7197, 0.7209, 0.721, 
				0.721, 0.721, 0.7209, 0.7159, 0.7133, 0.7105, 0.7099, 0.7099, 0.7093, 0.7093, 0.7076, 0.707, 0.7049, 0.7012, 0.7011, 0.7019, 0.7046, 0.7063, 0.7089, 0.7077, 0.7077, 0.7077, 0.7091, 0.7118, 
				0.7079, 0.7053, 0.705, 0.7055, 0.7055, 0.7045, 0.7051, 0.7051, 0.7017, 0.7, 0.6995, 0.6994, 0.7014, 0.7036, 0.7021, 0.7002, 0.6967, 0.695, 0.695, 0.6939, 0.694, 0.6922, 0.6919, 0.6914,
				0.6894, 0.6891, 0.6904, 0.689, 0.6834, 0.6823, 0.6807, 0.6815, 0.6815, 0.6847, 0.6859, 0.6822, 0.6827, 0.6837, 0.6823, 0.6822, 
				0.6822, 0.6792, 0.6746, 0.6735, 0.6731, 0.6742, 0.6744, 0.6739, 0.6731, 0.6761, 0.6761, 0.6785, 0.6818, 0.6836, 0.6823, 0.6805, 0.6793, 0.6849, 0.6833, 0.6825, 0.6825, 0.6816, 0.6799, 0.6813, 
				0.6809, 0.6868, 0.6933, 0.6933, 0.6945, 0.6944, 0.6946, 0.6964, 0.6965, 0.6956, 0.6956, 0.695, 0.6948, 0.6928, 0.6887, 0.6824, 0.6794, 0.6794, 0.6803, 0.6855, 0.6824, 0.6791, 0.6783, 0.6785, 
				0.6785, 0.6797, 0.68, 0.6803, 0.6805, 0.676, 0.677, 0.677, 0.6736, 0.6726, 0.6764, 0.6821, 0.6831, 0.6842, 0.6842, 0.6887, 0.6903, 0.6848, 0.6824, 0.6788, 0.6814, 0.6814, 0.6797, 0.6769, 
				0.6765, 0.6733, 0.6729, 0.6758, 0.6758, 0.675, 0.678, 0.6833, 0.6856, 0.6903, 0.6896, 0.6896, 0.6882, 0.6879, 0.6862, 0.6852, 0.6823, 0.6813, 0.6813, 0.6822, 0.6802, 0.6802, 0.6784, 0.6748, 
				0.6747, 0.6747, 0.6748, 0.6733, 0.665, 0.6611, 0.6583, 0.659, 0.659, 0.6581, 0.6578, 0.6574, 0.6532, 0.6502, 0.6514, 0.6514, 0.6507, 0.651, 0.6489, 0.6424, 0.6406, 0.6382, 0.6382, 0.6341, 
				0.6344, 0.6378, 0.6439, 0.6478, 0.6481, 0.6481, 0.6494, 0.6438, 0.6377, 0.6329, 0.6336, 0.6333, 0.6333, 0.633, 0.6371, 0.6403, 0.6396, 0.6364, 0.6356, 0.6356, 0.6368, 0.6357, 0.6354, 0.632,
				0.6332, 0.6328, 0.6331, 0.6342, 0.6321, 0.6302, 0.6278, 0.6308, 0.6324, 0.6324, 0.6307, 0.6277, 0.6269, 0.6335, 0.6392, 0.64, 0.6401, 0.6396, 0.6407, 0.6423, 0.6429, 0.6472, 0.6485, 0.6486,
				0.6467, 0.6444, 0.6467, 0.6509, 0.6478, 0.6461, 0.6461, 0.6468, 0.6449, 0.647, 0.6461, 0.6452, 0.6422, 0.6422, 0.6425, 0.6414, 0.6366, 0.6346, 0.635, 0.6346, 0.6346, 0.6343, 0.6346, 0.6379, 
				0.6416, 0.6442, 0.6431, 0.6431, 0.6435, 0.644, 0.6473, 0.6469, 0.6386, 0.6356, 0.634, 0.6346, 0.643, 0.6452, 0.6467, 0.6506, 0.6504, 0.6503, 0.6481, 0.6451, 0.645, 0.6441, 0.6414, 0.6409,
				0.6409, 0.6428, 0.6431, 0.6418, 0.6371, 0.6349, 0.6333, 0.6334, 0.6338, 0.6342, 0.632, 0.6318, 0.637, 0.6368, 0.6368, 0.6383, 0.6371, 0.6371, 0.6355, 0.632, 0.6277, 0.6276, 0.6291, 0.6274,
		}; 
		
		//Setting Start Date
		long ii=getDateTime(&quot;2006-01-01 00:00:00 GMT&quot;);
		
		for (int i = 0;i&lt;dataChartTab4.length;i++){
			dataChartModel4.addValue(&quot;USD to EUR&quot;, ii++, dataChartTab4[i]);
			ii += 86400000;// A day =  getDateTime(&quot;2006-01-02 00:00:00 GMT&quot;) - getDateTime(&quot;2006-01-01 00:00:00 GMT&quot;)
		}
		
		//================================================================================
	    // Basic area
	    //================================================================================
		
		chartComp5 = (ZHighCharts) getFellow(&quot;chartComp5&quot;);
		chartComp5.setType(&quot;area&quot;);
		chartComp5.setTitle(&quot;US and USSR nuclear stockpiles&quot;);
		chartComp5.setSubTitle(&quot;Source: &lt;a href='http://thebulletin.metapress.com/content/c4120650912x74k7/fulltext.pdf'&gt;thebulletin.metapress.com&lt;/a&gt;&quot;);
		chartComp5.setxAxisOptions(&quot;{&quot; +
					&quot;labels: {&quot; +
						&quot;formatter: function() {&quot; +
							&quot;return this.value;&quot; +
						&quot;}&quot; +
					&quot;}&quot; +
				&quot;}&quot;);
		chartComp5.setyAxisOptions(&quot;{&quot; +
					&quot;labels: {&quot; +
						&quot;formatter: function() {&quot; +
							&quot;return this.value / 1000 +'k';&quot; +
						&quot;}&quot; +
					&quot;}&quot; +
				&quot;}&quot;);
		chartComp5.setTooltipFormatter(&quot;function formatTooltip(obj){&quot; +
					&quot;return obj.series.name +' produced &lt;b&gt;'+Highcharts.numberFormat(obj.y, 0) +'&lt;/b&gt;&lt;br/&gt;&quot; +
					&quot;warheads in '+ obj.x;&quot; +
				&quot;}&quot;);
		chartComp5.setPlotOptions(&quot;{&quot; +
					&quot;area: {&quot; +
						&quot;marker: {&quot; +
							&quot;enabled: false,&quot; +
							&quot;symbol: 'circle',&quot; +
							&quot;radius: 2,&quot; +
							&quot;states: {&quot; +
								&quot;hover: {&quot; +
								&quot;	enabled: true&quot; +
								&quot;}&quot; +
							&quot;}&quot; +
						&quot;}&quot; +
					&quot;}&quot; +
				&quot;}&quot;);
		
		chartComp5.setYAxisTitle(&quot;Nuclear weapon states&quot;);
		
		
		chartComp5.setModel(dataChartModel5);
		
		
		//Adding some data to the model
		Number dataUSA[] = {null, null, null, null, null, 6 , 11, 32, 110, 235, 369, 640,
                1005, 1436, 2063, 3057, 4618, 6444, 9822, 15468, 20434, 24126,
                27387, 29459, 31056, 31982, 32040, 31233, 29224, 27342, 26662,
                26956, 27912, 28999, 28965, 27826, 25579, 25722, 24826, 24605,
                24304, 23464, 23708, 24099, 24357, 24237, 24401, 24344, 23586,
                22380, 21004, 17287, 14747, 13076, 12555, 12144, 11009, 10950,
                10871, 10824, 10577, 10527, 10475, 10421, 10358, 10295, 10104};
		
		Number dataUSSR[] = {
				null, null, null, null, null, null, null , null , null ,null,
                5, 25, 50, 120, 150, 200, 426, 660, 869, 1060, 1605, 2471, 3322,
                4238, 5221, 6129, 7089, 8339, 9399, 10538, 11643, 13092, 14478,
                15915, 17385, 19055, 21205, 23044, 25393, 27935, 30062, 32049,
                33952, 35804, 37431, 39197, 45000, 43000, 41000, 39000, 37000,
                35000, 33000, 31000, 29000, 27000, 25000, 24000, 23000, 22000,
                21000, 20000, 19000, 18000, 18000, 17000, 16000
		};
		int startpoint = 1940;
		for (int i =0;i&lt;dataUSA.length;i++){
			dataChartModel5.addValue(&quot;USA&quot;, startpoint++, dataUSA[i]);
		}
			
		startpoint = 1940;
		for (int j =0;j&lt;dataUSA.length;j++)
			dataChartModel5.addValue(&quot;USSR&quot;, startpoint++, dataUSSR[j]);
		
		
		//================================================================================
	    // Spline with inverted axes
	    //================================================================================
		
		chartComp6 = (ZHighCharts) getFellow(&quot;chartComp6&quot;);
		chartComp6.setType(&quot;spline&quot;);
		chartComp6.setOptions(&quot;{&quot; +
				&quot;inverted:true,&quot; +
				&quot;width: 500,&quot; +
				&quot;style: {&quot; +
					&quot;margin: '0 auto'&quot; +
					&quot;}&quot; +
				&quot;}&quot;);
		chartComp6.setTitle(&quot;Atmosphere Temperature by Altitude&quot;);
		chartComp6.setSubTitle(&quot;According to the Standard Atmosphere Model&quot;);
		chartComp6.setxAxisOptions(&quot;{&quot; +
					&quot;reversed:false,&quot; +
					&quot;labels: {&quot; +
						&quot;formatter: function() {&quot; +
							&quot;return this.value +'km';&quot; +
						&quot;}&quot; +
					&quot;},&quot; +
					&quot;maxPadding: 0.05,&quot; +
					&quot;showLastLabel: true&quot; +
				&quot;}&quot;);
		chartComp6.setyAxisOptions(&quot;{&quot; +
					&quot;labels: {&quot; +
						&quot;formatter: function() {&quot; +
							&quot;return this.value + '&#x00b0;';&quot; +
						&quot;}&quot; +
					&quot;},&quot; +
					&quot;lineWidth: 2&quot; +
				&quot;}&quot;);
		chartComp6.setTooltipFormatter(&quot;function formatTooltip(obj){&quot; +
					&quot;return ''+obj.x +' km: '+ obj.y +'&#x00b0;C';&quot; +
				&quot;}&quot;);
		chartComp6.setPlotOptions(&quot;{&quot; +
					&quot;spline: {&quot; +
						&quot;marker: {&quot; +
							&quot;enable: false&quot; +
						&quot;}&quot; +
					&quot;}&quot; +
				&quot;}&quot;);
		chartComp6.setLegend(&quot;{&quot; +
					&quot;enabled: false&quot; +
				&quot;}&quot;);
		chartComp6.setXAxisTitle(&quot;Altitude&quot;);
		chartComp6.setYAxisTitle(&quot;Temperature&quot;);
		
		chartComp6.setModel(dataChartModel6);
		
		//Adding some data to the model

		dataChartModel6.addValue(&quot;Temperature&quot;, 0, 15);
		dataChartModel6.addValue(&quot;Temperature&quot;, 10, -50);
		dataChartModel6.addValue(&quot;Temperature&quot;, 20, -56.5);
		dataChartModel6.addValue(&quot;Temperature&quot;, 30, -46.5);
		dataChartModel6.addValue(&quot;Temperature&quot;, 40, -22.1);
		dataChartModel6.addValue(&quot;Temperature&quot;, 50, -2.5);
		dataChartModel6.addValue(&quot;Temperature&quot;, 60, -27.7);
		dataChartModel6.addValue(&quot;Temperature&quot;, 70, -55.7);
		dataChartModel6.addValue(&quot;Temperature&quot;, 80, -76.5);
		
		//================================================================================
	    // Spline with symbols
	    //================================================================================
		
		
		chartComp7 = (ZHighCharts) getFellow(&quot;chartComp7&quot;);
		chartComp7.setType(&quot;spline&quot;);
		chartComp7.setTitle(&quot;Monthly Average Temperature&quot;);
		chartComp7.setSubTitle(&quot;Source: WorldClimate.com&quot;);
		chartComp7.setxAxisOptions(&quot;{ &quot; +
					&quot;categories: ['&quot; +
						&quot;Jan', &quot; +
						&quot;'Feb', &quot; +
						&quot;'Mar', &quot; +
						&quot;'Apr', &quot; +
						&quot;'May', &quot; +
						&quot;'Jun', &quot; +
						&quot;'Jul', &quot; +
						&quot;'Aug', &quot; +
						&quot;'Sep', &quot; +
						&quot;'Oct', &quot; +
						&quot;'Nov', &quot; +
						&quot;'Dec'&quot; +
					&quot;]&quot; +
				&quot;}&quot;);
		chartComp7.setyAxisOptions(&quot;{&quot; +
					&quot;labels: {&quot; +
						&quot;formatter: function() {&quot; +
							&quot;return this.value +'&#x00b0;';&quot; +
						&quot;}&quot; +
					&quot;}&quot; +
				&quot;}&quot;);
		chartComp7.setTooltipFormatter(&quot;function formatTooltip(obj){&quot; +
					&quot;return '' + obj.x + '&lt;br/&gt;&quot; +
					&quot;&lt;span style=\&quot;color:'+ obj.points[0].series.color +';\&quot;&gt;'+ obj.points[0].series.name +'&lt;/span&gt; : &lt;b&gt;'+ obj.points[0].y +'&lt;/b&gt;&lt;br/&gt;&quot; +
					&quot;&lt;span style=\&quot;color:'+ obj.points[1].series.color +';\&quot;&gt;'+ obj.points[1].series.name +'&lt;/span&gt; : &lt;b&gt;'+ obj.points[1].y +'&lt;/b&gt;';&quot; +
				&quot;}&quot;);
		chartComp7.setTooltipOptions(&quot;{&quot; +
					&quot;crosshairs: true,&quot; +
					&quot;shared: true&quot; +
				&quot;}&quot;);
		chartComp7.setPlotOptions(&quot;{&quot; +
					&quot;spline: {&quot; +
						&quot;marker: {&quot; +
							&quot;radius: 4,&quot; +
							&quot;lineColor: '#666666',&quot; +
							&quot;lineWidth: 1&quot; +
						&quot;}&quot; +
					&quot;}&quot; +
				&quot;}&quot;);
		chartComp7.setYAxisTitle(&quot;Temperature&quot;);

		chartComp7.setModel(dataChartModel7);

		//Adding some data to the model

		dataChartModel7.addValue(&quot;Tokyo&quot;, 0, 7);
		dataChartModel7.addValue(&quot;Tokyo&quot;, 1, 6.9);
		dataChartModel7.addValue(&quot;Tokyo&quot;, 2, 9.5);
		dataChartModel7.addValue(&quot;Tokyo&quot;, 3, 14.5);
		dataChartModel7.addValue(&quot;Tokyo&quot;, 4, 18.2);
		dataChartModel7.addValue(&quot;Tokyo&quot;, 5, 21.5);
		dataChartModel7.addValue(&quot;Tokyo&quot;, 6, 25.2);
		
		Map data = new HashMap();
		marker = new HashMap();
		marker.put(&quot;symbol&quot;, &quot;url(http://www.highcharts.com/demo/gfx/sun.png)&quot;);
		data.put(&quot;marker&quot;, marker);
		dataChartModel7.addValue(&quot;Tokyo&quot;, 7, 26.5, data);
		
		dataChartModel7.addValue(&quot;Tokyo&quot;, 8, 23.3);
		dataChartModel7.addValue(&quot;Tokyo&quot;, 9, 18.3);
		dataChartModel7.addValue(&quot;Tokyo&quot;, 10, 13.9);
		dataChartModel7.addValue(&quot;Tokyo&quot;, 11, 9.6);

		data = new HashMap();
		marker = new HashMap();
		marker.put(&quot;symbol&quot;, &quot;url(http://www.highcharts.com/demo/gfx/snow.png)&quot;);
		data.put(&quot;marker&quot;, marker);
		
		dataChartModel7.addValue(&quot;London&quot;, 0, 3.9, data);
		dataChartModel7.addValue(&quot;London&quot;, 1, 4.2);
		dataChartModel7.addValue(&quot;London&quot;, 2, 5.7);
		dataChartModel7.addValue(&quot;London&quot;, 3, 8.5);
		dataChartModel7.addValue(&quot;London&quot;, 4, 11.9);
		dataChartModel7.addValue(&quot;London&quot;, 5, 15.2);
		dataChartModel7.addValue(&quot;London&quot;, 6, 17.0);
		dataChartModel7.addValue(&quot;London&quot;, 7, 16.6);
		dataChartModel7.addValue(&quot;London&quot;, 8, 14.2);
		dataChartModel7.addValue(&quot;London&quot;, 9, 10.3);
		dataChartModel7.addValue(&quot;London&quot;, 10, 6.6);
		dataChartModel7.addValue(&quot;London&quot;, 11, 4.8);
		
		style = new HashMap();
		marker = new HashMap();
		marker.put(&quot;symbol&quot;, &quot;square&quot;);
		style.put(&quot;marker&quot;, marker);
		chartComp7.setSeriesOptions(&quot;Tokyo&quot;, style);
		
		style = new HashMap();
		marker = new HashMap();
		marker.put(&quot;symbol&quot;, &quot;diamond&quot;);
		style.put(&quot;marker&quot;, marker);
		chartComp7.setSeriesOptions(&quot;London&quot;, style);
		
		//================================================================================
	    // Spline with plot bands
	    //================================================================================

		
		chartComp8 = (ZHighCharts) getFellow(&quot;chartComp8&quot;);
		chartComp8.setType(&quot;spline&quot;);
		chartComp8.setTitle(&quot;Wind speed during two days&quot;);
		chartComp8.setSubTitle(&quot;October 6th and 7th 2009 at two locations in Vik i Sogn, Norway&quot;);
		chartComp8.setxAxisOptions(&quot;{&quot; +
					&quot;type:'datetime'&quot; +
				&quot;}&quot;);
		chartComp8.setyAxisOptions(&quot;{&quot; +
					&quot;min:0, &quot; +
					&quot;minorGridLineWidth:0, &quot; +
					&quot;gridLineWidth:0, &quot; +
					&quot;alternateGridColor:null, &quot; +
					&quot;plotBands:[&quot; +
						&quot;{ &quot; +
							&quot;from:0.3, &quot; +
							&quot;to:1.5, &quot; +
							&quot;color:'rgba(68,170,213,0.1)', &quot; +
							&quot;label:{ &quot; +
								&quot;text:'Lightair', &quot; +
								&quot;style:{ &quot; +
									&quot;color:'#606060' &quot; +
								&quot;} &quot; +
							&quot;} &quot; +
						&quot;},&quot; +
						&quot;{ &quot; +
							&quot;from:1.5, &quot; +
							&quot;to:3.3, &quot; +
							&quot;color:'rgba(0,0,0,0)', &quot; +
							&quot;label:{ &quot; +
								&quot;text:'Lightbreeze', &quot; +
								&quot;style:{ &quot; +
									&quot;color:'#606060' &quot; +
								&quot;} &quot; +
							&quot;} &quot; +
						&quot;},&quot; +
						&quot;{ &quot; +
							&quot;from:3.3, &quot; +
							&quot;to:5.5, &quot; +
							&quot;color:'rgba(68,170,213,0.1)', &quot; +
							&quot;label:{ &quot; +
								&quot;text:'Gentlebreeze', &quot; +
								&quot;style:{ &quot; +
									&quot;color:'#606060' &quot; +
								&quot;} &quot; +
							&quot;} &quot; +
						&quot;},&quot; +
						&quot;{ &quot; +
							&quot;from:5.5, &quot; +
							&quot;to:8, &quot; +
							&quot;color:'rgba(0,0,0,0)', &quot; +
							&quot;label:{ &quot; +
								&quot;text:'Moderatebreeze', &quot; +
								&quot;style:{ &quot; +
									&quot;color:'#606060' &quot; +
								&quot;} &quot; +
							&quot;} &quot; +
						&quot;},&quot; +
						&quot;{ &quot; +
							&quot;from:8, &quot; +
							&quot;to:11, &quot; +
							&quot;color:'rgba(68,170,213,0.1)',&quot; +
							&quot;label:{ &quot; +
								&quot;text:'Freshbreeze', &quot; +
								&quot;style:{ &quot; +
									&quot;color:'#606060' &quot; +
								&quot;} &quot; +
							&quot;} &quot; +
						&quot;},&quot; +
						&quot;{ &quot; +
							&quot;from:11, &quot; +
							&quot;to:14, &quot; +
							&quot;color: 'rgba(0, 0, 0, 0)',&quot; +
							&quot;label: {&quot; +
								&quot;text: 'Strong breeze',&quot; +
								&quot;style: {&quot; +
									&quot;color: '#606060'&quot; +
								&quot;}&quot; +
							&quot;} &quot; +
						&quot;}, &quot; +
						&quot;{&quot; +
							&quot;from: 14,&quot; +
							&quot;to: 15,&quot; +
							&quot;color: 'rgba(68, 170, 213, 0.1)',&quot; +
							&quot;label: {&quot; +
								&quot;text: 'High wind',&quot; +
								&quot;style: {&quot; +
									&quot;color: '#606060'&quot; +
								&quot;}&quot; +
							&quot;}&quot; +
						&quot;}&quot; +
					&quot;]&quot; +
				&quot;}&quot;);
		chartComp8.setTooltipFormatter(&quot;function formatTooltip(obj){&quot; +
					&quot;return ''+Highcharts.dateFormat('%e. %b %Y, %H:00', obj.x) +': '+ obj.y +' m/s';&quot; +
				&quot;}&quot;);
		chartComp8.setPlotOptions(&quot;{&quot; +
					&quot;spline: {&quot; +
						&quot;lineWidth: 4,&quot; +
						&quot;states: {&quot; +
							&quot;hover: {&quot; +
								&quot;lineWidth: 5&quot; +
							&quot;}&quot; +
						&quot;}, &quot; +
						&quot;marker: {&quot; +
							&quot;enabled: false,&quot; +
							&quot;states: { &quot; +
								&quot;hover: {&quot; +
									&quot;enabled: true, &quot; +
									&quot;symbol: 'circle',&quot; +
									&quot;radius: 5,&quot; +
									&quot;lineWidth: 1&quot; +
								&quot;}&quot; +
							&quot;}&quot; +
						&quot;}&quot; +
					&quot;}&quot; +
				&quot;}&quot;);
		chartComp8.setYAxisTitle(&quot;Wind speed (m/s)&quot;);
		
		chartComp8.setModel(dataChartModel8);
		
		//Adding some data to the model
		
		Number dataHestavollane[] = {4.3, 5.1, 4.3, 5.2, 5.4, 4.7, 3.5, 4.1, 5.6, 7.4, 6.9, 7.1,
                7.9, 7.9, 7.5, 6.7, 7.7, 7.7, 7.4, 7.0, 7.1, 5.8, 5.9, 7.4,
                8.2, 8.5, 9.4, 8.1, 10.9, 10.4, 10.9, 12.4, 12.1, 9.5, 7.5,
                7.1, 7.5, 8.1, 6.8, 3.4, 2.1, 1.9, 2.8, 2.9, 1.3, 4.4, 4.2,
                3.0, 3.0};
		Number dataVoll[] = {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.3, 0.0,
                0.0, 0.4, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                0.0, 0.6, 1.2, 1.7, 0.7, 2.9, 4.1, 2.6, 3.7, 3.9, 1.7, 2.3,
                3.0, 3.3, 4.8, 5.0, 4.8, 5.0, 3.2, 2.0, 0.9, 0.4, 0.3, 0.5, 0.4};
		
		//Start Point
		long iii = getDateTime(&quot;2009-10-06 00:00:00 GMT&quot;);;
		for (int i =0;i&lt;dataHestavollane.length;i++){
			dataChartModel8.addValue(&quot;Hestavollane&quot;, iii, dataHestavollane[i]);
			iii += 3600000; //Every Hour
		}
		
		//Start Point
		long jjj = getDateTime(&quot;2009-10-06 00:00:00 GMT&quot;);;
		for (int j =0;j&lt;dataVoll.length;j++){
			dataChartModel8.addValue(&quot;Voll&quot;, jjj, dataVoll[j]);
			jjj += 3600000;

		}		
		
		//================================================================================
	    // Time data with irregular intervals
	    //================================================================================

		
		chartComp9 = (ZHighCharts) getFellow(&quot;chartComp9&quot;);
		chartComp9.setType(&quot;spline&quot;);
		chartComp9.setTitle(&quot;Snow depth in the Vikjafjellet mountain, Norway&quot;);
		chartComp9.setSubTitle(&quot;An example of irregular time data in Highcharts JS&quot;);
		chartComp9.setxAxisOptions(&quot;{&quot; +
					&quot;type:'datetime',&quot; +
					&quot;dateTimeLabelFormats: {&quot; +
						&quot;month: '%e. %b',year: '%b'&quot; +
					&quot;}&quot; +
				&quot;}&quot;);
		chartComp9.setyAxisOptions(&quot;{&quot; +
					&quot;min:0&quot; +
				&quot;}&quot;);
		chartComp9.setTooltipFormatter(&quot;function formatTooltip(obj){&quot; +
					&quot;return '&lt;b&gt;'+ obj.series.name +'&lt;/b&gt;&lt;br/&gt;'&quot; +
					&quot;+Highcharts.dateFormat('%e. %b', obj.x) +': '+ obj.y +' m';&quot; +
				&quot;}&quot;);
		chartComp9.setYAxisTitle(&quot;Snow depth (m)&quot;);
		
		chartComp9.setModel(dataChartModel9);
		
		//Adding some data to the model

		dataChartModel9.addValue(&quot;Winter 2007-2008&quot;, getDateTime(&quot;1970-10-27 00:00:00 GMT&quot;), 0);
		dataChartModel9.addValue(&quot;Winter 2007-2008&quot;, getDateTime(&quot;1970-11-10 00:00:00 GMT&quot;), 0.6);
		dataChartModel9.addValue(&quot;Winter 2007-2008&quot;, getDateTime(&quot;1970-11-18 00:00:00 GMT&quot;), 0.7);
		dataChartModel9.addValue(&quot;Winter 2007-2008&quot;, getDateTime(&quot;1970-12-02 00:00:00 GMT&quot;), 0.8);
		dataChartModel9.addValue(&quot;Winter 2007-2008&quot;, getDateTime(&quot;1970-12-09 00:00:00 GMT&quot;), 0.6);
		dataChartModel9.addValue(&quot;Winter 2007-2008&quot;, getDateTime(&quot;1970-12-16 00:00:00 GMT&quot;), 0.6);
		dataChartModel9.addValue(&quot;Winter 2007-2008&quot;, getDateTime(&quot;1970-12-28 00:00:00 GMT&quot;), 0.67);
		dataChartModel9.addValue(&quot;Winter 2007-2008&quot;, getDateTime(&quot;1971-01-01 00:00:00 GMT&quot;), 0.81);
		dataChartModel9.addValue(&quot;Winter 2007-2008&quot;, getDateTime(&quot;1971-01-08 00:00:00 GMT&quot;), 0.78);
		dataChartModel9.addValue(&quot;Winter 2007-2008&quot;, getDateTime(&quot;1971-01-12 00:00:00 GMT&quot;), 0.98);
		dataChartModel9.addValue(&quot;Winter 2007-2008&quot;, getDateTime(&quot;1971-01-27 00:00:00 GMT&quot;), 1.84);
		dataChartModel9.addValue(&quot;Winter 2007-2008&quot;, getDateTime(&quot;1971-02-10 00:00:00 GMT&quot;), 1.80);
		dataChartModel9.addValue(&quot;Winter 2007-2008&quot;, getDateTime(&quot;1971-02-18 00:00:00 GMT&quot;), 1.80);
		dataChartModel9.addValue(&quot;Winter 2007-2008&quot;, getDateTime(&quot;1971-02-24 00:00:00 GMT&quot;), 1.92);
		dataChartModel9.addValue(&quot;Winter 2007-2008&quot;, getDateTime(&quot;1971-03-04 00:00:00 GMT&quot;), 2.49);
		dataChartModel9.addValue(&quot;Winter 2007-2008&quot;, getDateTime(&quot;1971-03-11 00:00:00 GMT&quot;), 2.79);
		dataChartModel9.addValue(&quot;Winter 2007-2008&quot;, getDateTime(&quot;1971-03-15 00:00:00 GMT&quot;), 2.73);
		dataChartModel9.addValue(&quot;Winter 2007-2008&quot;, getDateTime(&quot;1971-03-25 00:00:00 GMT&quot;), 2.61);
		dataChartModel9.addValue(&quot;Winter 2007-2008&quot;, getDateTime(&quot;1971-04-02 00:00:00 GMT&quot;), 2.76);
		dataChartModel9.addValue(&quot;Winter 2007-2008&quot;, getDateTime(&quot;1971-04-06 00:00:00 GMT&quot;), 2.82);
		dataChartModel9.addValue(&quot;Winter 2007-2008&quot;, getDateTime(&quot;1971-04-13 00:00:00 GMT&quot;), 2.8);
		dataChartModel9.addValue(&quot;Winter 2007-2008&quot;, getDateTime(&quot;1971-05-03 00:00:00 GMT&quot;), 2.1);
		dataChartModel9.addValue(&quot;Winter 2007-2008&quot;, getDateTime(&quot;1971-05-26 00:00:00 GMT&quot;), 1.1);
		dataChartModel9.addValue(&quot;Winter 2007-2008&quot;, getDateTime(&quot;1971-06-09 00:00:00 GMT&quot;), 0.25);
		dataChartModel9.addValue(&quot;Winter 2007-2008&quot;, getDateTime(&quot;1971-06-12 00:00:00 GMT&quot;), 0);
		
		dataChartModel9.addValue(&quot;Winter 2008-2009&quot;, getDateTime(&quot;1970-10-18 00:00:00 GMT&quot;), 0);
		dataChartModel9.addValue(&quot;Winter 2008-2009&quot;, getDateTime(&quot;1970-10-26 00:00:00 GMT&quot;), 0.2);
		dataChartModel9.addValue(&quot;Winter 2008-2009&quot;, getDateTime(&quot;1970-12-01 00:00:00 GMT&quot;), 0.47);
		dataChartModel9.addValue(&quot;Winter 2008-2009&quot;, getDateTime(&quot;1970-12-11 00:00:00 GMT&quot;), 0.55);
		dataChartModel9.addValue(&quot;Winter 2008-2009&quot;, getDateTime(&quot;1970-12-25 00:00:00 GMT&quot;), 1.38);
		dataChartModel9.addValue(&quot;Winter 2008-2009&quot;, getDateTime(&quot;1971-01-08 00:00:00 GMT&quot;), 1.38);
		dataChartModel9.addValue(&quot;Winter 2008-2009&quot;, getDateTime(&quot;1971-01-15 00:00:00 GMT&quot;), 1.38);
		dataChartModel9.addValue(&quot;Winter 2008-2009&quot;, getDateTime(&quot;1971-01-01 00:00:00 GMT&quot;), 1.38);
		dataChartModel9.addValue(&quot;Winter 2008-2009&quot;, getDateTime(&quot;1971-02-08 00:00:00 GMT&quot;), 1.48);
		dataChartModel9.addValue(&quot;Winter 2008-2009&quot;, getDateTime(&quot;1971-02-21 00:00:00 GMT&quot;), 1.5);
		dataChartModel9.addValue(&quot;Winter 2008-2009&quot;, getDateTime(&quot;1971-03-12 00:00:00 GMT&quot;), 1.89);
		dataChartModel9.addValue(&quot;Winter 2008-2009&quot;, getDateTime(&quot;1971-03-25 00:00:00 GMT&quot;), 2.0);
		dataChartModel9.addValue(&quot;Winter 2008-2009&quot;, getDateTime(&quot;1971-04-04 00:00:00 GMT&quot;), 1.94);
		dataChartModel9.addValue(&quot;Winter 2008-2009&quot;, getDateTime(&quot;1971-04-09 00:00:00 GMT&quot;), 1.91);
		dataChartModel9.addValue(&quot;Winter 2008-2009&quot;, getDateTime(&quot;1971-04-13 00:00:00 GMT&quot;), 1.75);
		dataChartModel9.addValue(&quot;Winter 2008-2009&quot;, getDateTime(&quot;1971-04-19 00:00:00 GMT&quot;), 1.6);
		dataChartModel9.addValue(&quot;Winter 2008-2009&quot;, getDateTime(&quot;1971-05-25 00:00:00 GMT&quot;), 0.6);
		dataChartModel9.addValue(&quot;Winter 2008-2009&quot;, getDateTime(&quot;1971-05-31 00:00:00 GMT&quot;), 0.35);
		dataChartModel9.addValue(&quot;Winter 2008-2009&quot;, getDateTime(&quot;1971-06-07 00:00:00 GMT&quot;), 0);
		
		dataChartModel9.addValue(&quot;Winter 2009-2010&quot;, getDateTime(&quot;1970-10-09 00:00:00 GMT&quot;), 0);
		dataChartModel9.addValue(&quot;Winter 2009-2010&quot;, getDateTime(&quot;1970-10-14 00:00:00 GMT&quot;), 0.15);
		dataChartModel9.addValue(&quot;Winter 2009-2010&quot;, getDateTime(&quot;1970-11-28 00:00:00 GMT&quot;), 0.35);
		dataChartModel9.addValue(&quot;Winter 2009-2010&quot;, getDateTime(&quot;1970-12-12 00:00:00 GMT&quot;), 0.46);
		dataChartModel9.addValue(&quot;Winter 2009-2010&quot;, getDateTime(&quot;1971-01-01 00:00:00 GMT&quot;), 0.59);
		dataChartModel9.addValue(&quot;Winter 2009-2010&quot;, getDateTime(&quot;1971-01-24 00:00:00 GMT&quot;), 0.58);
		dataChartModel9.addValue(&quot;Winter 2009-2010&quot;, getDateTime(&quot;1971-02-01 00:00:00 GMT&quot;), 0.62);
		dataChartModel9.addValue(&quot;Winter 2009-2010&quot;, getDateTime(&quot;1971-02-07 00:00:00 GMT&quot;), 0.65);
		dataChartModel9.addValue(&quot;Winter 2009-2010&quot;, getDateTime(&quot;1971-02-23 00:00:00 GMT&quot;), 0.77);
		dataChartModel9.addValue(&quot;Winter 2009-2010&quot;, getDateTime(&quot;1971-03-08 00:00:00 GMT&quot;), 0.77);
		dataChartModel9.addValue(&quot;Winter 2009-2010&quot;, getDateTime(&quot;1971-03-14 00:00:00 GMT&quot;), 0.79);
		dataChartModel9.addValue(&quot;Winter 2009-2010&quot;, getDateTime(&quot;1971-03-24 00:00:00 GMT&quot;), 0.86);
		dataChartModel9.addValue(&quot;Winter 2009-2010&quot;, getDateTime(&quot;1971-04-04 00:00:00 GMT&quot;), 0.8);
		dataChartModel9.addValue(&quot;Winter 2009-2010&quot;, getDateTime(&quot;1971-04-18 00:00:00 GMT&quot;), 0.94);
		dataChartModel9.addValue(&quot;Winter 2009-2010&quot;, getDateTime(&quot;1971-04-24 00:00:00 GMT&quot;), 0.9);
		dataChartModel9.addValue(&quot;Winter 2009-2010&quot;, getDateTime(&quot;1971-05-16 00:00:00 GMT&quot;), 0.39);
		dataChartModel9.addValue(&quot;Winter 2009-2010&quot;, getDateTime(&quot;1971-05-21 00:00:00 GMT&quot;), 0.6);
		

		//================================================================================
	    // Logarithmic axis
	    //================================================================================


		chartComp10 = (ZHighCharts) getFellow(&quot;chartComp10&quot;);
		chartComp10.setType(&quot;line&quot;);
		chartComp10.setTitle(&quot;Logarithmic axis demo&quot;);
		chartComp10.setxAxisOptions(&quot;{&quot; +
					&quot;tickInterval: 1&quot; +
				&quot;}&quot;);
		chartComp10.setyAxisOptions(&quot;{&quot; +
					&quot;type: 'logarithmic', &quot; +
					&quot;minorTickInterval: 0.1&quot; +
				&quot;}&quot;);
		chartComp10.setTooltipFormatter(&quot;function formatTooltip(obj){ &quot; +
					&quot;return '&lt;b&gt;'+ obj.series.name +'&lt;/b&gt;&lt;br/&gt;&quot; +
					&quot;x = '+ obj.x +' , y = '+ obj.y;&quot; +
				&quot;}&quot;);
		chartComp10.setModel(dataChartModel10);

		//Adding some data to the model

		dataChartModel10.addValue(&quot;Series 1&quot;, 1, 1);
		dataChartModel10.addValue(&quot;Series 1&quot;, 2, 2);
		dataChartModel10.addValue(&quot;Series 1&quot;, 3, 4);
		dataChartModel10.addValue(&quot;Series 1&quot;, 4, 8);
		dataChartModel10.addValue(&quot;Series 1&quot;, 5, 16);
		dataChartModel10.addValue(&quot;Series 1&quot;, 6, 32);
		dataChartModel10.addValue(&quot;Series 1&quot;, 7, 64);
		dataChartModel10.addValue(&quot;Series 1&quot;, 8, 128);
		dataChartModel10.addValue(&quot;Series 1&quot;, 9, 256);
		dataChartModel10.addValue(&quot;Series 1&quot;, 10, 512);
		
		//================================================================================
	    // Scatter plot
	    //================================================================================

		
		chartComp11 = (ZHighCharts) getFellow(&quot;chartComp11&quot;);
		chartComp11.setType(&quot;scatter&quot;);
		chartComp11.setOptions(&quot;{&quot; +
					&quot;zoomType: 'xy'&quot; +
				&quot;}&quot;);
		chartComp11.setTitle(&quot;Height Versus Weight of 507 Individuals by Gender&quot;);
		chartComp11.setSubTitle(&quot;Source: Heinz  2003&quot;);
		chartComp11.setxAxisOptions(&quot;{&quot; +
					&quot;startOnTick: true,&quot; +
					&quot;endOnTick: true,&quot; +
					&quot;showLastLabel: true&quot; +
				&quot;}&quot;);
		chartComp11.setTooltipFormatter(&quot;function formatTooltip(obj){&quot; +
					&quot;return ''+obj.x +' cm, '+ obj.y +' kg';&quot; +
				&quot;}&quot;);
		chartComp11.setYAxisTitle(&quot;Weight (kg)&quot;);
		chartComp11.setXAxisTitle(&quot;Height (cm)&quot;);
		chartComp11.setLegend(&quot;{&quot; +
					&quot;layout: 'vertical',&quot; +
					&quot;align: 'left',&quot; +
					&quot;verticalAlign: 'top',&quot; +
					&quot;x: 100, &quot; +
					&quot;y: 70,&quot; +
					&quot;floating: true,&quot; +
					&quot;backgroundColor: '#FFFFFF',&quot; +
					&quot;borderWidth: 1&quot; +
				&quot;}&quot;);
		chartComp11.setPlotOptions(&quot;{&quot; +
					&quot;scatter: {&quot; +
						&quot;marker: { &quot; +
							&quot;radius: 5,&quot; +
							&quot;states: {&quot; +
								&quot;hover: {&quot; +
									&quot;enabled: true,&quot; +
									&quot;ineColor: 'rgb(100,100,100)'&quot; +
								&quot;}&quot; +
							&quot;}&quot; +
						&quot;},&quot; +
						&quot;states: {&quot; +
							&quot;hover: {&quot; +
								&quot;marker: {&quot; +
									&quot;enabled: false&quot; +
								&quot;}&quot; +
							&quot;}&quot; +
						&quot;}&quot; +
					&quot;}&quot; +
				&quot;}&quot;);
				
		chartComp11.setModel(dataChartModel11);
		
		//Adding some data to the model
		 
		style = new HashMap();
		style.put(&quot;color&quot;, &quot;rgba(223, 83, 83, .5)&quot;);
		chartComp11.setSeriesOptions(&quot;Female&quot;, style);
		
		Number femaledata [][] = {{161.2, 51.6}, {167.5, 59.0}, {159.5, 49.2}, {157.0, 63.0}, {155.8, 53.6},
                {170.0, 59.0}, {159.1, 47.6}, {166.0, 69.8}, {176.2, 66.8}, {160.2, 75.2},
                {172.5, 55.2}, {170.9, 54.2}, {172.9, 62.5}, {153.4, 42.0}, {160.0, 50.0},
                {147.2, 49.8}, {168.2, 49.2}, {175.0, 73.2}, {157.0, 47.8}, {167.6, 68.8},
                {159.5, 50.6}, {175.0, 82.5}, {166.8, 57.2}, {176.5, 87.8}, {170.2, 72.8},
                {174.0, 54.5}, {173.0, 59.8}, {179.9, 67.3}, {170.5, 67.8}, {160.0, 47.0},
                {154.4, 46.2}, {162.0, 55.0}, {176.5, 83.0}, {160.0, 54.4}, {152.0, 45.8},
                {162.1, 53.6}, {170.0, 73.2}, {160.2, 52.1}, {161.3, 67.9}, {166.4, 56.6},
                {168.9, 62.3}, {163.8, 58.5}, {167.6, 54.5}, {160.0, 50.2}, {161.3, 60.3},
                {167.6, 58.3}, {165.1, 56.2}, {160.0, 50.2}, {170.0, 72.9}, {157.5, 59.8},
                {167.6, 61.0}, {160.7, 69.1}, {163.2, 55.9}, {152.4, 46.5}, {157.5, 54.3},
                {168.3, 54.8}, {180.3, 60.7}, {165.5, 60.0}, {165.0, 62.0}, {164.5, 60.3},
                {156.0, 52.7}, {160.0, 74.3}, {163.0, 62.0}, {165.7, 73.1}, {161.0, 80.0},
                {162.0, 54.7}, {166.0, 53.2}, {174.0, 75.7}, {172.7, 61.1}, {167.6, 55.7},
                {151.1, 48.7}, {164.5, 52.3}, {163.5, 50.0}, {152.0, 59.3}, {169.0, 62.5},
                {164.0, 55.7}, {161.2, 54.8}, {155.0, 45.9}, {170.0, 70.6}, {176.2, 67.2},
                {170.0, 69.4}, {162.5, 58.2}, {170.3, 64.8}, {164.1, 71.6}, {169.5, 52.8},
                {163.2, 59.8}, {154.5, 49.0}, {159.8, 50.0}, {173.2, 69.2}, {170.0, 55.9},
                {161.4, 63.4}, {169.0, 58.2}, {166.2, 58.6}, {159.4, 45.7}, {162.5, 52.2},
                {159.0, 48.6}, {162.8, 57.8}, {159.0, 55.6}, {179.8, 66.8}, {162.9, 59.4},
                {161.0, 53.6}, {151.1, 73.2}, {168.2, 53.4}, {168.9, 69.0}, {173.2, 58.4},
                {171.8, 56.2}, {178.0, 70.6}, {164.3, 59.8}, {163.0, 72.0}, {168.5, 65.2},
                {166.8, 56.6}, {172.7, 105.2}, {163.5, 51.8}, {169.4, 63.4}, {167.8, 59.0},
                {159.5, 47.6}, {167.6, 63.0}, {161.2, 55.2}, {160.0, 45.0}, {163.2, 54.0},
                {162.2, 50.2}, {161.3, 60.2}, {149.5, 44.8}, {157.5, 58.8}, {163.2, 56.4},
                {172.7, 62.0}, {155.0, 49.2}, {156.5, 67.2}, {164.0, 53.8}, {160.9, 54.4},
                {162.8, 58.0}, {167.0, 59.8}, {160.0, 54.8}, {160.0, 43.2}, {168.9, 60.5},
                {158.2, 46.4}, {156.0, 64.4}, {160.0, 48.8}, {167.1, 62.2}, {158.0, 55.5},
                {167.6, 57.8}, {156.0, 54.6}, {162.1, 59.2}, {173.4, 52.7}, {159.8, 53.2},
                {170.5, 64.5}, {159.2, 51.8}, {157.5, 56.0}, {161.3, 63.6}, {162.6, 63.2},
                {160.0, 59.5}, {168.9, 56.8}, {165.1, 64.1}, {162.6, 50.0}, {165.1, 72.3},
                {166.4, 55.0}, {160.0, 55.9}, {152.4, 60.4}, {170.2, 69.1}, {162.6, 84.5},
                {170.2, 55.9}, {158.8, 55.5}, {172.7, 69.5}, {167.6, 76.4}, {162.6, 61.4},
                {167.6, 65.9}, {156.2, 58.6}, {175.2, 66.8}, {172.1, 56.6}, {162.6, 58.6},
                {160.0, 55.9}, {165.1, 59.1}, {182.9, 81.8}, {166.4, 70.7}, {165.1, 56.8},
                {177.8, 60.0}, {165.1, 58.2}, {175.3, 72.7}, {154.9, 54.1}, {158.8, 49.1},
                {172.7, 75.9}, {168.9, 55.0}, {161.3, 57.3}, {167.6, 55.0}, {165.1, 65.5},
                {175.3, 65.5}, {157.5, 48.6}, {163.8, 58.6}, {167.6, 63.6}, {165.1, 55.2},
                {165.1, 62.7}, {168.9, 56.6}, {162.6, 53.9}, {164.5, 63.2}, {176.5, 73.6},
                {168.9, 62.0}, {175.3, 63.6}, {159.4, 53.2}, {160.0, 53.4}, {170.2, 55.0},
                {162.6, 70.5}, {167.6, 54.5}, {162.6, 54.5}, {160.7, 55.9}, {160.0, 59.0},
                {157.5, 63.6}, {162.6, 54.5}, {152.4, 47.3}, {170.2, 67.7}, {165.1, 80.9},
                {172.7, 70.5}, {165.1, 60.9}, {170.2, 63.6}, {170.2, 54.5}, {170.2, 59.1},
                {161.3, 70.5}, {167.6, 52.7}, {167.6, 62.7}, {165.1, 86.3}, {162.6, 66.4},
                {152.4, 67.3}, {168.9, 63.0}, {170.2, 73.6}, {175.2, 62.3}, {175.2, 57.7},
                {160.0, 55.4}, {165.1, 104.1}, {174.0, 55.5}, {170.2, 77.3}, {160.0, 80.5},
                {167.6, 64.5}, {167.6, 72.3}, {167.6, 61.4}, {154.9, 58.2}, {162.6, 81.8},
                {175.3, 63.6}, {171.4, 53.4}, {157.5, 54.5}, {165.1, 53.6}, {160.0, 60.0},
                {174.0, 73.6}, {162.6, 61.4}, {174.0, 55.5}, {162.6, 63.6}, {161.3, 60.9},
                {156.2, 60.0}, {149.9, 46.8}, {169.5, 57.3}, {160.0, 64.1}, {175.3, 63.6},
                {169.5, 67.3}, {160.0, 75.5}, {172.7, 68.2}, {162.6, 61.4}, {157.5, 76.8},
                {176.5, 71.8}, {164.4, 55.5}, {160.7, 48.6}, {174.0, 66.4}, {163.8, 67.3}};
		
		for(int f = 0 ; f&lt;femaledata.length ; f++)
			dataChartModel11.addValue(&quot;Female&quot;, femaledata[f][0], femaledata[f][1]);
		
		style = new HashMap();
		style.put(&quot;color&quot;, &quot;rgba(119, 152, 191, .5)&quot;);
		chartComp11.setSeriesOptions(&quot;Male&quot;, style);
		
		Number maledata [][] = {{174.0, 65.6}, {175.3, 71.8}, {193.5, 80.7}, {186.5, 72.6}, {187.2, 78.8},
                {181.5, 74.8}, {184.0, 86.4}, {184.5, 78.4}, {175.0, 62.0}, {184.0, 81.6},
                {180.0, 76.6}, {177.8, 83.6}, {192.0, 90.0}, {176.0, 74.6}, {174.0, 71.0},
                {184.0, 79.6}, {192.7, 93.8}, {171.5, 70.0}, {173.0, 72.4}, {176.0, 85.9},
                {176.0, 78.8}, {180.5, 77.8}, {172.7, 66.2}, {176.0, 86.4}, {173.5, 81.8},
                {178.0, 89.6}, {180.3, 82.8}, {180.3, 76.4}, {164.5, 63.2}, {173.0, 60.9},
                {183.5, 74.8}, {175.5, 70.0}, {188.0, 72.4}, {189.2, 84.1}, {172.8, 69.1},
                {170.0, 59.5}, {182.0, 67.2}, {170.0, 61.3}, {177.8, 68.6}, {184.2, 80.1},
                {186.7, 87.8}, {171.4, 84.7}, {172.7, 73.4}, {175.3, 72.1}, {180.3, 82.6},
                {182.9, 88.7}, {188.0, 84.1}, {177.2, 94.1}, {172.1, 74.9}, {167.0, 59.1},
                {169.5, 75.6}, {174.0, 86.2}, {172.7, 75.3}, {182.2, 87.1}, {164.1, 55.2},
                {163.0, 57.0}, {171.5, 61.4}, {184.2, 76.8}, {174.0, 86.8}, {174.0, 72.2},
                {177.0, 71.6}, {186.0, 84.8}, {167.0, 68.2}, {171.8, 66.1}, {182.0, 72.0},
                {167.0, 64.6}, {177.8, 74.8}, {164.5, 70.0}, {192.0, 101.6}, {175.5, 63.2},
                {171.2, 79.1}, {181.6, 78.9}, {167.4, 67.7}, {181.1, 66.0}, {177.0, 68.2},
                {174.5, 63.9}, {177.5, 72.0}, {170.5, 56.8}, {182.4, 74.5}, {197.1, 90.9},
                {180.1, 93.0}, {175.5, 80.9}, {180.6, 72.7}, {184.4, 68.0}, {175.5, 70.9},
                {180.6, 72.5}, {177.0, 72.5}, {177.1, 83.4}, {181.6, 75.5}, {176.5, 73.0},
                {175.0, 70.2}, {174.0, 73.4}, {165.1, 70.5}, {177.0, 68.9}, {192.0, 102.3},
                {176.5, 68.4}, {169.4, 65.9}, {182.1, 75.7}, {179.8, 84.5}, {175.3, 87.7},
                {184.9, 86.4}, {177.3, 73.2}, {167.4, 53.9}, {178.1, 72.0}, {168.9, 55.5},
                {157.2, 58.4}, {180.3, 83.2}, {170.2, 72.7}, {177.8, 64.1}, {172.7, 72.3},
                {165.1, 65.0}, {186.7, 86.4}, {165.1, 65.0}, {174.0, 88.6}, {175.3, 84.1},
                {185.4, 66.8}, {177.8, 75.5}, {180.3, 93.2}, {180.3, 82.7}, {177.8, 58.0},
                {177.8, 79.5}, {177.8, 78.6}, {177.8, 71.8}, {177.8, 116.4}, {163.8, 72.2},
                {188.0, 83.6}, {198.1, 85.5}, {175.3, 90.9}, {166.4, 85.9}, {190.5, 89.1},
                {166.4, 75.0}, {177.8, 77.7}, {179.7, 86.4}, {172.7, 90.9}, {190.5, 73.6},
                {185.4, 76.4}, {168.9, 69.1}, {167.6, 84.5}, {175.3, 64.5}, {170.2, 69.1},
                {190.5, 108.6}, {177.8, 86.4}, {190.5, 80.9}, {177.8, 87.7}, {184.2, 94.5},
                {176.5, 80.2}, {177.8, 72.0}, {180.3, 71.4}, {171.4, 72.7}, {172.7, 84.1},
                {172.7, 76.8}, {177.8, 63.6}, {177.8, 80.9}, {182.9, 80.9}, {170.2, 85.5},
                {167.6, 68.6}, {175.3, 67.7}, {165.1, 66.4}, {185.4, 102.3}, {181.6, 70.5},
                {172.7, 95.9}, {190.5, 84.1}, {179.1, 87.3}, {175.3, 71.8}, {170.2, 65.9},
                {193.0, 95.9}, {171.4, 91.4}, {177.8, 81.8}, {177.8, 96.8}, {167.6, 69.1},
                {167.6, 82.7}, {180.3, 75.5}, {182.9, 79.5}, {176.5, 73.6}, {186.7, 91.8},
                {188.0, 84.1}, {188.0, 85.9}, {177.8, 81.8}, {174.0, 82.5}, {177.8, 80.5},
                {171.4, 70.0}, {185.4, 81.8}, {185.4, 84.1}, {188.0, 90.5}, {188.0, 91.4},
                {182.9, 89.1}, {176.5, 85.0}, {175.3, 69.1}, {175.3, 73.6}, {188.0, 80.5},
                {188.0, 82.7}, {175.3, 86.4}, {170.5, 67.7}, {179.1, 92.7}, {177.8, 93.6},
                {175.3, 70.9}, {182.9, 75.0}, {170.8, 93.2}, {188.0, 93.2}, {180.3, 77.7},
                {177.8, 61.4}, {185.4, 94.1}, {168.9, 75.0}, {185.4, 83.6}, {180.3, 85.5},
                {174.0, 73.9}, {167.6, 66.8}, {182.9, 87.3}, {160.0, 72.3}, {180.3, 88.6},
                {167.6, 75.5}, {186.7, 101.4}, {175.3, 91.1}, {175.3, 67.3}, {175.9, 77.7},
                {175.3, 81.8}, {179.1, 75.5}, {181.6, 84.5}, {177.8, 76.6}, {182.9, 85.0},
                {177.8, 102.5}, {184.2, 77.3}, {179.1, 71.8}, {176.5, 87.9}, {188.0, 94.3},
                {174.0, 70.9}, {167.6, 64.5}, {170.2, 77.3}, {167.6, 72.3}, {188.0, 87.3},
                {174.0, 80.0}, {176.5, 82.3}, {180.3, 73.6}, {167.6, 74.1}, {188.0, 85.9},
                {180.3, 73.2}, {167.6, 76.3}, {183.0, 65.9}, {183.0, 90.9}, {179.1, 89.1},
                {170.2, 62.3}, {177.8, 82.7}, {179.1, 79.1}, {190.5, 98.2}, {177.8, 84.1},
                {180.3, 83.2}, {180.3, 83.2}};
		
		for(int m = 0 ; m&lt;maledata.length ; m++)
			dataChartModel11.addValue(&quot;Male&quot;, maledata[m][0], maledata[m][1]);

		//================================================================================
	    // Area with negative values
	    //================================================================================

		
		chartComp12 = (ZHighCharts) getFellow(&quot;chartComp12&quot;);
		chartComp12.setType(&quot;area&quot;);
		chartComp12.setTitle(&quot;Area chart with negative values&quot;);
		chartComp12.setxAxisOptions(&quot;{&quot; +
					&quot;categories: ['&quot; +
						&quot;Apples', &quot; +
						&quot;'Oranges', &quot; +
						&quot;'Pears', &quot; +
						&quot;'Grapes', &quot; +
						&quot;'Bananas'&quot; +
					&quot;]&quot; +
				&quot;}&quot;);
		chartComp12.setTooltipFormatter(&quot;function formatTooltip(obj){&quot; +
					&quot;return '' + obj.series.name +': '+ obj.y +'';&quot; +
				&quot;}&quot;);
		
		chartComp12.setModel(dataChartModel12);
		
		//Adding some data to the model

		dataChartModel12.addValue(&quot;John&quot;, 0, 5);
		dataChartModel12.addValue(&quot;John&quot;, 1, 3);
		dataChartModel12.addValue(&quot;John&quot;, 2, 4);
		dataChartModel12.addValue(&quot;John&quot;, 3, 7);
		dataChartModel12.addValue(&quot;John&quot;, 4, 2);
		
		dataChartModel12.addValue(&quot;Jane&quot;, 0, 2);
		dataChartModel12.addValue(&quot;Jane&quot;, 1, -2);
		dataChartModel12.addValue(&quot;Jane&quot;, 2, -3);
		dataChartModel12.addValue(&quot;Jane&quot;, 3, 2);
		dataChartModel12.addValue(&quot;Jane&quot;, 4, 1);
		
		dataChartModel12.addValue(&quot;Joe&quot;, 0, 3);
		dataChartModel12.addValue(&quot;Joe&quot;, 1, 4);
		dataChartModel12.addValue(&quot;Joe&quot;, 2, 4);
		dataChartModel12.addValue(&quot;Joe&quot;, 3, -2);
		dataChartModel12.addValue(&quot;Joe&quot;, 4, 5);
		
		//================================================================================
	    // Stacked area
	    //================================================================================

		
		chartComp13 = (ZHighCharts) getFellow(&quot;chartComp13&quot;);
		chartComp13.setType(&quot;area&quot;);
		chartComp13.setTitle(&quot;Historic and Estimated Worldwide Population Growth by Region&quot;);
		chartComp13.setSubTitle(&quot;Source: Wikipedia.org&quot;);
		chartComp13.setxAxisOptions(&quot;{&quot; +
					&quot;categories: [&quot; +
						&quot;'1750', &quot; +
						&quot;'1800', &quot; +
						&quot;'1850', &quot; +
						&quot;'1900', &quot; +
						&quot;'1950', &quot; +
						&quot;'1999', &quot; +
						&quot;'2050'&quot; +
					&quot;],&quot; +
					&quot;tickmarkPlacement: 'on',&quot; +
					&quot;title: {&quot; +
						&quot;enabled: false&quot; +
					&quot;}&quot; +
				&quot;}&quot;);
		chartComp13.setyAxisOptions(&quot;{&quot; +
					&quot;labels: {&quot; +
						&quot;formatter: function() {&quot; +
							&quot;return this.value / 1000;&quot; +
						&quot;}&quot; +
					&quot;}&quot; +
				&quot;}&quot;);
		chartComp13.setTooltipFormatter(&quot;function formatTooltip(obj){&quot; +
					&quot;return ''+obj.x +': '+ Highcharts.numberFormat(obj.y, 0, ',') +' millions';&quot; +
				&quot;}&quot;);
		chartComp13.setYAxisTitle(&quot;Billions&quot;);
		chartComp13.setLegend(&quot;{&quot; +
					&quot;layout: 'vertical',&quot; +
					&quot;align: 'left',&quot; +
					&quot;verticalAlign: 'top',&quot; +
					&quot;x: 100, &quot; +
					&quot;y: 70,&quot; +
					&quot;floating: true,&quot; +
					&quot;backgroundColor: '#FFFFFF',&quot; +
					&quot;borderWidth: 1&quot; +
				&quot;}&quot;);
		chartComp13.setPlotOptions(&quot;{&quot; +
					&quot;area: {&quot; +
						&quot;stacking: 'normal',&quot; +
						&quot;lineColor: '#666666', &quot; +
						&quot;lineWidth: 1,&quot; +
						&quot;marker: {&quot; +
							&quot;lineWidth: 1, &quot; +
							&quot;lineColor: '#666666'&quot; +
						&quot;}&quot; +
					&quot;}&quot; +
				&quot;}&quot;);
				
		chartComp13.setModel(dataChartModel13);
		
		//Adding some data to the model

		dataChartModel13.addValue(&quot;Asia&quot;, 0, 502);
		dataChartModel13.addValue(&quot;Asia&quot;, 1, 635);
		dataChartModel13.addValue(&quot;Asia&quot;, 2, 809);
		dataChartModel13.addValue(&quot;Asia&quot;, 3, 947);
		dataChartModel13.addValue(&quot;Asia&quot;, 4, 1402);
		dataChartModel13.addValue(&quot;Asia&quot;, 5, 3634);
		dataChartModel13.addValue(&quot;Asia&quot;, 6, 5268);
		
		dataChartModel13.addValue(&quot;Africa&quot;, 0, 106);
		dataChartModel13.addValue(&quot;Africa&quot;, 1, 107);
		dataChartModel13.addValue(&quot;Africa&quot;, 2, 111);
		dataChartModel13.addValue(&quot;Africa&quot;, 3, 133);
		dataChartModel13.addValue(&quot;Africa&quot;, 4, 224);
		dataChartModel13.addValue(&quot;Africa&quot;, 5, 767);
		dataChartModel13.addValue(&quot;Africa&quot;, 6, 1766);
		
		dataChartModel13.addValue(&quot;Europe&quot;, 0, 163);
		dataChartModel13.addValue(&quot;Europe&quot;, 1, 203);
		dataChartModel13.addValue(&quot;Europe&quot;, 2, 276);
		dataChartModel13.addValue(&quot;Europe&quot;, 3, 408);
		dataChartModel13.addValue(&quot;Europe&quot;, 4, 547);
		dataChartModel13.addValue(&quot;Europe&quot;, 5, 729);
		dataChartModel13.addValue(&quot;Europe&quot;, 6, 628);
		
		dataChartModel13.addValue(&quot;America&quot;, 0, 18);
		dataChartModel13.addValue(&quot;America&quot;, 1, 31);
		dataChartModel13.addValue(&quot;America&quot;, 2, 54);
		dataChartModel13.addValue(&quot;America&quot;, 3, 156);
		dataChartModel13.addValue(&quot;America&quot;, 4, 339);
		dataChartModel13.addValue(&quot;America&quot;, 5, 818);
		dataChartModel13.addValue(&quot;America&quot;, 6, 1201);
		
		dataChartModel13.addValue(&quot;Oceania&quot;, 0, 2);
		dataChartModel13.addValue(&quot;Oceania&quot;, 1, 2);
		dataChartModel13.addValue(&quot;Oceania&quot;, 2, 2);
		dataChartModel13.addValue(&quot;Oceania&quot;, 3, 3);
		dataChartModel13.addValue(&quot;Oceania&quot;, 4, 13);
		dataChartModel13.addValue(&quot;Oceania&quot;, 5, 30);
		dataChartModel13.addValue(&quot;Oceania&quot;, 6, 46);
		
		//================================================================================
	    // Percentage area
	    //================================================================================

		
		chartComp14 = (ZHighCharts) getFellow(&quot;chartComp14&quot;);
		chartComp14.setType(&quot;area&quot;);
		chartComp14.setTitle(&quot;Historic and Estimated Worldwide Population Distribution by Region&quot;);
		chartComp14.setSubTitle(&quot;Source: Wikipedia.org&quot;);
		chartComp14.setxAxisOptions(&quot;{&quot; +
					&quot;categories: [&quot; +
						&quot;'1750', &quot; +
						&quot;'1800', &quot; +
						&quot;'1850', &quot; +
						&quot;'1900', &quot; +
						&quot;'1950', &quot; +
						&quot;'1999', &quot; +
						&quot;'2050'&quot; +
					&quot;],&quot; +
					&quot;tickmarkPlacement: 'on',&quot; +
					&quot;title: {&quot; +
						&quot;enabled: false&quot; +
					&quot;}&quot; +
				&quot;}&quot;);
		chartComp14.setTooltipFormatter(&quot;function formatTooltip(obj){&quot; +
					&quot;return ''+obj.x +': '+ Highcharts.numberFormat(obj.percentage, 1) + &quot; +
					&quot;'% ('+Highcharts.numberFormat(obj.y, 0, ',') +' millions)';&quot; +
				&quot;}&quot;);
		chartComp14.setYAxisTitle(&quot;Percent&quot;);
		chartComp14.setPlotOptions(&quot;{ &quot; +
					&quot;area: {&quot; +
						&quot;stacking: 'percent',&quot; +
						&quot;lineColor: '#ffffff',&quot; +
						&quot;lineWidth: 1,&quot; +
						&quot;marker: {&quot; +
							&quot;lineWidth: 1,&quot; +
							&quot;lineColor: '#ffffff'&quot; +
						&quot;}&quot; +
					&quot;}&quot; +
				&quot;}&quot;);
				
		chartComp14.setModel(dataChartModel13);
		
		//================================================================================
	    // Area with missing points
	    //================================================================================

		chartComp15 = (ZHighCharts) getFellow(&quot;chartComp15&quot;);
		chartComp15.setType(&quot;area&quot;);
		chartComp15.setOptions(&quot;{&quot; +
					&quot;spacingBottom: 30&quot; +
				&quot;}&quot;);
		chartComp15.setTitle(&quot;Fruit consumption *&quot;);
		chartComp15.setSubTitle(&quot;* Jane\'s banana consumption is unknown&quot;);
		chartComp15.setxAxisOptions(&quot;{&quot; +
					&quot;categories: [&quot; +
						&quot;'Apples', &quot; +
						&quot;'Pears', &quot; +
						&quot;'Oranges', &quot; +
						&quot;'Bananas', &quot; +
						&quot;'Grapes', &quot; +
						&quot;'Plums', &quot; +
						&quot;'Strawberries', &quot; +
						&quot;'Raspberries'&quot; +
					&quot;]&quot; +
				&quot;}&quot;);
		chartComp15.setyAxisOptions(&quot;{&quot; +
					&quot;labels: {&quot; +
						&quot;formatter: function() {&quot; +
							&quot;return this.value;&quot; +
						&quot;}&quot; +
					&quot;}&quot; +
				&quot;}&quot;);
		chartComp15.setTooltipFormatter(&quot;function formatTooltip(obj){&quot; +
					&quot;return '&lt;b&gt;'+ obj.series.name +'&lt;/b&gt;&lt;br/&gt;'+&quot; +
					&quot;obj.x +': '+ obj.y;&quot; +
				&quot;}&quot;);
		chartComp15.setYAxisTitle(&quot;Y-Axis&quot;);
		chartComp15.setLegend(&quot;{&quot; +
					&quot;layout: 'vertical',&quot; +
					&quot;align: 'left',&quot; +
					&quot;verticalAlign: 'top',&quot; +
					&quot;x: 150,&quot; +
					&quot;y: 100,&quot; +
					&quot;floating: true,&quot; +
					&quot;borderWidth: 1,&quot; +
					&quot;backgroundColor: '#FFFFFF'&quot; +
				&quot;}&quot;);
		chartComp15.setPlotOptions(&quot;{ &quot; +
					&quot;area: {&quot; +
						&quot;fillOpacity: 0.5&quot; +
					&quot;}&quot; +
				&quot;}&quot;);
					
		chartComp15.setModel(dataChartModel15);
		
		//Adding some data to the model

		dataChartModel15.addValue(&quot;John&quot;, 0, 0);
		dataChartModel15.addValue(&quot;John&quot;, 1, 1);
		dataChartModel15.addValue(&quot;John&quot;, 2, 4);
		dataChartModel15.addValue(&quot;John&quot;, 3, 4);
		dataChartModel15.addValue(&quot;John&quot;, 4, 5);
		dataChartModel15.addValue(&quot;John&quot;, 5, 2);
		dataChartModel15.addValue(&quot;John&quot;, 6, 3);
		dataChartModel15.addValue(&quot;John&quot;, 7, 7);
		
		dataChartModel15.addValue(&quot;Jane&quot;, 0, 1);
		dataChartModel15.addValue(&quot;Jane&quot;, 1, 0);
		dataChartModel15.addValue(&quot;Jane&quot;, 2, 3);
		dataChartModel15.addValue(&quot;Jane&quot;, 3, null);
		dataChartModel15.addValue(&quot;Jane&quot;, 4, 3);
		dataChartModel15.addValue(&quot;Jane&quot;, 5, 1);
		dataChartModel15.addValue(&quot;Jane&quot;, 6, 2);
		dataChartModel15.addValue(&quot;Jane&quot;, 7, 1);
		
		//================================================================================
	    // Inverted axes
	    //================================================================================
		
		chartComp16 = (ZHighCharts) getFellow(&quot;chartComp16&quot;);
		chartComp16.setType(&quot;area&quot;);
		chartComp16.setOptions(&quot;{&quot; +
					&quot;inverted:true&quot; +
				&quot;}&quot;);
		chartComp16.setTitle(&quot;Average fruit consumption during one week&quot;);
		chartComp16.setxAxisOptions(&quot;{&quot; +
					&quot;categories: [&quot; +
						&quot;'Monday',&quot; +
						&quot;'Tuesday',&quot; +
						&quot;'Wednesday',&quot; +
						&quot;'Thursday',&quot; +
						&quot;'Friday',&quot; +
						&quot;'Saturday',&quot; +
						&quot;'Sunday'&quot; +
					&quot;]&quot; +
				&quot;}&quot;);
		chartComp16.setyAxisOptions(&quot;{&quot; +
					&quot;labels: {&quot; +
						&quot;formatter: function() {&quot; +
							&quot;return this.value;&quot; +
						&quot;}&quot; +
					&quot;},&quot; +
					&quot;min: 0&quot; +
				&quot;}&quot;);
		chartComp16.setTooltipFormatter(&quot;function formatTooltip(obj){&quot; +
					&quot;return ''+obj.x +': '+ obj.y;&quot; +
				&quot;}&quot;);
		chartComp16.setYAxisTitle(&quot;Number of units&quot;);
		chartComp16.setLegend(&quot;{&quot; +
					&quot;layout: 'vertical',&quot; +
					&quot;align: 'right',&quot; +
					&quot;verticalAlign: 'top',&quot; +
					&quot;x: -150,&quot; +
					&quot;y: 100,&quot; +
					&quot;floating: true,&quot; +
					&quot;borderWidth: 1,&quot; +
					&quot;backgroundColor: '#FFFFFF'&quot; +
				&quot;}&quot;);
		chartComp16.setPlotOptions(&quot;{&quot; +
					&quot;area: {&quot; +
						&quot;fillOpacity: 0.5&quot; +
					&quot;}&quot; +
				&quot;}&quot;);
				
		chartComp16.setModel(dataChartModel16);
		
		//Adding some data to the model
		
		dataChartModel16.addValue(&quot;John&quot;, 0, 3);
		dataChartModel16.addValue(&quot;John&quot;, 1, 4);
		dataChartModel16.addValue(&quot;John&quot;, 2, 3);
		dataChartModel16.addValue(&quot;John&quot;, 3, 5);
		dataChartModel16.addValue(&quot;John&quot;, 4, 4);
		dataChartModel16.addValue(&quot;John&quot;, 5, 10);
		dataChartModel16.addValue(&quot;John&quot;, 6, 12);
		
		dataChartModel16.addValue(&quot;Jane&quot;, 0, 1);
		dataChartModel16.addValue(&quot;Jane&quot;, 1, 3);
		dataChartModel16.addValue(&quot;Jane&quot;, 2, 4);
		dataChartModel16.addValue(&quot;Jane&quot;, 3, 3);
		dataChartModel16.addValue(&quot;Jane&quot;, 4, 3);
		dataChartModel16.addValue(&quot;Jane&quot;, 5, 5);
		dataChartModel16.addValue(&quot;Jane&quot;, 6, 4);
		
		//================================================================================
	    // Area-spline
	    //================================================================================
		
		
		chartComp17 = (ZHighCharts) getFellow(&quot;chartComp17&quot;);
		chartComp17.setType(&quot;areaspline&quot;);
		chartComp17.setTitle(&quot;Average fruit consumption during one week&quot;);
		chartComp17.setxAxisOptions(&quot;{&quot; +
					&quot;categories: [&quot; +
						&quot;'Monday',&quot; +
						&quot;'Tuesday',&quot; +
						&quot;'Wednesday',&quot; +
						&quot;'Thursday',&quot; +
						&quot;'Friday',&quot; +
						&quot;'Saturday',&quot; +
						&quot;'Sunday'&quot; +
					&quot;],&quot; +
					&quot;plotBands: [&quot; +
						&quot;{&quot; +
							&quot;from: 4.5,&quot; +
							&quot;to: 6.5,&quot; +
							&quot;color: 'rgba(68, 170, 213, .2)'&quot; +
						&quot;}&quot; +
					&quot;]&quot; +
				&quot;}&quot;);
		chartComp17.setyAxisOptions(&quot;{&quot; +
					&quot;labels: {&quot; +
						&quot;formatter: function() {&quot; +
							&quot;return this.value;&quot; +
						&quot;}&quot; +
					&quot;},&quot; +
					&quot;min: 0&quot; +
				&quot;}&quot;);
		chartComp17.setTooltipFormatter(&quot;function formatTooltip(obj){&quot; +
					&quot;return ''+obj.x +': '+ obj.y +' units';&quot; +
				&quot;}&quot;);
		chartComp17.setYAxisTitle(&quot;Fruit units&quot;);
		chartComp17.setLegend(&quot;{&quot; +
					&quot;layout: 'vertical',&quot; +
					&quot;align: 'left',&quot; +
					&quot;verticalAlign: 'top',&quot; +
					&quot;x: 150,&quot; +
					&quot;y: 100,&quot; +
					&quot;floating: true,&quot; +
					&quot;borderWidth: 1,&quot; +
					&quot;backgroundColor: '#FFFFFF'&quot; +
				&quot;}&quot;);
		chartComp17.setPlotOptions(&quot;{&quot; +
					&quot;areaspline: {&quot; +
						&quot;fillOpacity: 0.5&quot; +
					&quot;}&quot; +
				&quot;}&quot;);
				
		chartComp17.setModel(dataChartModel16);
		
		//================================================================================
	    // Basic bar
	    //================================================================================
		
		
		chartComp18 = (ZHighCharts) getFellow(&quot;chartComp18&quot;);
		chartComp18.setType(&quot;bar&quot;);
		chartComp18.setTitle(&quot;Historic World Population by Region&quot;);
		chartComp18.setSubTitle(&quot;Source: Wikipedia.org&quot;);
		chartComp18.setxAxisOptions(&quot;{&quot; +
					&quot;categories: [&quot; +
						&quot;'Africa', &quot; +
						&quot;'America', &quot; +
						&quot;'Asia', &quot; +
						&quot;'Europe', &quot; +
						&quot;'Oceania'&quot; +
					&quot;]&quot; +
				&quot;}&quot;);
		chartComp18.setyAxisOptions(&quot;{&quot; +
					&quot;min: 0,&quot; +
					&quot;labels: {&quot; +
						&quot;overflow: 'justify'&quot; +
					&quot;}&quot; +
				&quot;}&quot;);
		chartComp18.setTooltipFormatter(&quot;function formatTooltip(obj){&quot; +
					&quot;return ''+obj.series.name +': '+ obj.y +' millions';&quot; +
				&quot;}&quot;);
		chartComp18.setYAxisTitle(&quot;Population (millions)&quot;);
		chartComp18.setLegend(&quot;{&quot; +
					&quot;layout: 'vertical',&quot; +
					&quot;align: 'right',&quot; +
					&quot;verticalAlign: 'top',&quot; +
					&quot;x: -100,&quot; +
					&quot;y: 100,&quot; +
					&quot;floating: true,&quot; +
					&quot;borderWidth: 1,&quot; +
					&quot;backgroundColor: '#FFFFFF',&quot; +
					&quot;shadow: true&quot; +
				&quot;}&quot;);
		chartComp18.setPlotOptions(&quot;{&quot; +
					&quot;bar: {&quot; +
						&quot;dataLabels: {&quot; +
							&quot;enabled: true&quot; +
						&quot;}&quot; +
					&quot;}&quot; +
				&quot;}&quot;);
				
		chartComp18.setModel(dataChartModel18);
		
		//Adding some data to the model

		dataChartModel18.addValue(&quot;Year 1800&quot;, 0, 107);
		dataChartModel18.addValue(&quot;Year 1800&quot;, 1, 31);
		dataChartModel18.addValue(&quot;Year 1800&quot;, 2, 635);
		dataChartModel18.addValue(&quot;Year 1800&quot;, 3, 203);
		dataChartModel18.addValue(&quot;Year 1800&quot;, 4, 2);
		
		dataChartModel18.addValue(&quot;Year 1900&quot;, 0, 133);
		dataChartModel18.addValue(&quot;Year 1900&quot;, 1, 156);
		dataChartModel18.addValue(&quot;Year 1900&quot;, 2, 947);
		dataChartModel18.addValue(&quot;Year 1900&quot;, 3, 408);
		dataChartModel18.addValue(&quot;Year 1900&quot;, 4, 6);
		
		dataChartModel18.addValue(&quot;Year 2008&quot;, 0, 973);
		dataChartModel18.addValue(&quot;Year 2008&quot;, 1, 914);
		dataChartModel18.addValue(&quot;Year 2008&quot;, 2, 4054);
		dataChartModel18.addValue(&quot;Year 2008&quot;, 3, 732);
		dataChartModel18.addValue(&quot;Year 2008&quot;, 4, 34);
		
		//================================================================================
	    // Stacked bar
	    //================================================================================
				
		chartComp19 = (ZHighCharts) getFellow(&quot;chartComp19&quot;);
		chartComp19.setType(&quot;bar&quot;);
		chartComp19.setTitle(&quot;Stacked bar chart&quot;);
		chartComp19.setxAxisOptions(&quot;{&quot; +
					&quot;categories: [&quot; +
						&quot;'Apples', &quot; +
						&quot;'Oranges', &quot; +
						&quot;'Pears', &quot; +
						&quot;'Grapes', &quot; +
						&quot;'Bananas'&quot; +
					&quot;]&quot; +
				&quot;}&quot;);
		chartComp19.setyAxisOptions(&quot;{&quot; +
					&quot;min: 0&quot; +
				&quot;}&quot;);
		chartComp19.setTooltipFormatter(&quot;function formatTooltip(obj){&quot; +
					&quot;return ''+obj.series.name +': '+ obj.y +'';&quot; +
				&quot;}&quot;);
		chartComp19.setYAxisTitle(&quot;Total fruit consumption&quot;);
		chartComp19.setLegend(&quot;{&quot; +
					&quot;backgroundColor: '#FFFFFF', &quot; +
					&quot;reversed: true&quot; +
				&quot;}&quot;);
		chartComp19.setPlotOptions(&quot;{&quot; +
					&quot;series: {&quot; +
						&quot;stacking: 'normal'&quot; +
					&quot;}&quot; +
				&quot;}&quot;);
				
		chartComp19.setModel(dataChartModel12);
		
		//================================================================================
	    // Pie with legend
	    //================================================================================
				
		
		chartComp20 = (ZHighCharts) getFellow(&quot;chartComp20&quot;);
		chartComp20.setOptions(&quot;{&quot; +
					&quot;plotBackgroundColor: null,&quot; +
					&quot;plotBorderWidth: null,&quot; +
					&quot;plotShadow: false&quot; +
				&quot;}&quot;);
		chartComp20.setTitle(&quot;Browser market shares at a specific website, 2010&quot;);
		chartComp20.setType(&quot;pie&quot;);
		chartComp20.setTooltipFormatter(&quot;function formatTooltip(obj){&quot; +
					&quot;return obj.key + '&lt;br /&gt;&quot; +
					&quot;Browser Share: &lt;b&gt;'+obj.y+'%&lt;/b&gt;'&quot; +
				&quot;}&quot;);
		chartComp20.setPlotOptions(&quot;{&quot; +
					&quot;pie: {&quot; +
						&quot;allowPointSelect: true,&quot; +
						&quot;cursor: 'pointer',&quot; +
						&quot;dataLabels: {&quot; +
							&quot;enabled: false&quot; +
						&quot;},&quot; +
						&quot;showInLegend: true&quot; +
					&quot;}&quot; +
				&quot;}&quot;);
		chartComp20.setModel(pieModel);

		
		//================================================================================
	    // Spline updating each second
	    //================================================================================
				
		
		chartComp21 = (ZHighCharts) getFellow(&quot;chartComp21&quot;);
		chartComp21.setOptions(&quot;{&quot; +
					&quot;marginRight: 10,&quot; +
					&quot;events: {&quot; +
						&quot;load: function() {&quot; +
							&quot;var series = this.series[0];&quot; +
							&quot;setInterval(function() {&quot; +
								&quot;var x = (new Date()).getTime(),y = Math.random();&quot; +
								&quot;series.addPoint([x, y], true, true);&quot; +
								&quot;},&quot; +
							&quot; 1000);&quot; +
						&quot;}&quot; +
					&quot;}&quot; +
				&quot;}&quot;);
		chartComp21.setTitle(&quot;Live random data&quot;);
		chartComp21.setType(&quot;spline&quot;);
		chartComp21.setxAxisOptions(&quot;{ &quot; +
					&quot;type: 'datetime',&quot; +
					&quot;tickPixelInterval: 150&quot; +
				&quot;}&quot;);
		chartComp21.setyAxisOptions(&quot;{&quot; +
					&quot;plotLines: [&quot; +
						&quot;{&quot; +
							&quot;value: 0,&quot; +
							&quot;width: 1,&quot; +
							&quot;color: '#808080'&quot; +
						&quot;}&quot; +
					&quot;]&quot; +
				&quot;}&quot;);
		chartComp21.setYAxisTitle(&quot;Value&quot;);
		chartComp21.setTooltipFormatter(&quot;function formatTooltip(obj){&quot; +
					&quot;return '&lt;b&gt;'+ obj.series.name +'&lt;/b&gt;&lt;br/&gt;&quot; +
					&quot;'+Highcharts.dateFormat('%Y-%m-%d %H:%M:%S', obj.x) +'&lt;br/&gt;&quot; +
					&quot;'+Highcharts.numberFormat(obj.y, 2);&quot; +
				&quot;}&quot;);
		chartComp21.setModel(pieModel);
		chartComp21.setPlotOptions(&quot;{&quot; +
					&quot;pie: {&quot; +
						&quot;allowPointSelect: true,&quot; +
						&quot;cursor: 'pointer',&quot; +
						&quot;dataLabels: {&quot; +
							&quot;enabled: false&quot; +
						&quot;},&quot; +
						&quot;showInLegend: true&quot; +
					&quot;}&quot; +
				&quot;}&quot;);
		chartComp21.setLegend(&quot;{&quot; +
					&quot;enabled: false &quot; +
				&quot;}&quot;);
		
		chartComp21.setModel(dataChartModel21);
		
		//Adding some random data to the model

		for (int i = -19; i &lt;= 0; i++){
			dataChartModel21.addValue(&quot;Random data&quot;,getDateTime(sdf.format(new Date())) + i *1000, Math.random());
		}
		
		//================================================================================
	    // Click to add a point
	    //================================================================================
				
		
		chartComp22 = (ZHighCharts) getFellow(&quot;chartComp22&quot;);
		chartComp22.setOptions(&quot;{&quot; +
					&quot;margin: [70, 50, 60, 80],&quot; +
					&quot;events: {&quot; +
						&quot;click: function(e) { &quot; +
							&quot;var x = e.xAxis[0].value, y = e.yAxis[0].value,series = this.series[0];&quot; +
							&quot;series.addPoint([x, y]);&quot; +
						&quot;}&quot; +
					&quot;}&quot; +
				&quot;}&quot;);
		chartComp22.setTitle(&quot;User supplied data&quot;);
		chartComp22.setSubTitle(&quot;Click the plot area to add a point. Click a point to remove it.&quot;);
		chartComp22.setType(&quot;scatter&quot;);
		chartComp22.setxAxisOptions(&quot;{  &quot; +
					&quot;minPadding: 0.2,&quot; +
					&quot;maxPadding: 0.2,&quot; +
					&quot;maxZoom: 60&quot; +
				&quot;}&quot;);
		chartComp22.setyAxisOptions(&quot;{&quot; +
					&quot;minPadding: 0.2,&quot; +
					&quot;maxPadding: 0.2,&quot; +
					&quot;maxZoom: 60,&quot; +
					&quot;plotLines: [&quot; +
						&quot;{&quot; +
							&quot;value: 0,&quot; +
							&quot;width: 1,&quot; +
							&quot;color: '#808080' &quot; +
						&quot;}&quot; +
					&quot;]&quot; +
				&quot;}&quot;);
		chartComp22.setYAxisTitle(&quot;Value&quot;);
		chartComp22.setPlotOptions(&quot;{&quot; +
					&quot;series: {&quot; +
						&quot;lineWidth: 1,&quot; +
						&quot;point: {&quot; +
							&quot;events: { &quot; +
								&quot;'click': function() {&quot; +
									&quot;if (this.series.data.length &gt; 1) &quot; +
										&quot;this.remove();&quot; +
									&quot;}&quot; +
								&quot;}&quot; +
							&quot;}&quot; +
						&quot;}&quot; +
					&quot;}&quot;);
		chartComp22.setLegend(&quot;{&quot; +
					&quot;enabled: false &quot; +
				&quot;}&quot;);
		chartComp22.setTooltipFormatter(&quot;function formatTooltip(obj){&quot; +
					&quot;return '&lt;b&gt;'+ obj.series.name +'&lt;/b&gt;&lt;br/&gt;&quot; +
					&quot;'+ obj.x +': '+ obj.y;&quot; +
				&quot;}&quot;);
		
		chartComp22.setModel(dataChartModel22);
		
		//Adding some data to the model

		dataChartModel22.addValue(&quot;Series 1&quot;,20, 20);
		dataChartModel22.addValue(&quot;Series 1&quot;,80, 80);
		
		
		//================================================================================
	    // Bar with negative stack
	    //================================================================================
				
		chartComp23 = (ZHighCharts) getFellow(&quot;chartComp23&quot;);
		chartComp23.setType(&quot;bar&quot;);
		chartComp23.setTitle(&quot;Population pyramid for Germany, midyear 2010&quot;);
		chartComp23.setSubTitle(&quot;Source: www.census.gov&quot;);
		chartComp23.setxAxisOptions(&quot;[&quot; +
					&quot;{&quot; +
						&quot;categories : [&quot; +
							&quot;'0-4', '5-9', '10-14', '15-19', '20-24', '25-29', '30-34', '35-39',&quot; +
							&quot; '40-44','45-49', '50-54', '55-59', '60-64', '65-69','70-74', '75-79',&quot; +
							&quot; '80-84', '85-89', '90-94','95-99', '100 +'&quot; +
						&quot;],&quot; +
						&quot;reversed: false &quot; +
					&quot;}, &quot; +
					&quot;{ &quot; +
						&quot;opposite: true,&quot; +
						&quot;reversed: false,&quot; +
						&quot;categories: [&quot; +
							&quot;'0-4', '5-9', '10-14', '15-19', '20-24', '25-29', '30-34', '35-39',&quot; +
							&quot; '40-44','45-49', '50-54', '55-59', '60-64', '65-69','70-74', '75-79',&quot; +
							&quot; '80-84', '85-89', '90-94','95-99', '100 +'&quot; +
						&quot;],&quot; +
						&quot;linkedTo: 0&quot; +
					&quot;}&quot; +
				&quot;]&quot;);
		chartComp23.setyAxisOptions(&quot;{&quot; +
					&quot;labels: {&quot; +
						&quot;formatter: function(){&quot; +
							&quot;return (Math.abs(this.value) / 1000000) + 'M';&quot; +
						&quot;}&quot; +
					&quot;},&quot; +
					&quot;min: -4000000,&quot; +
					&quot;max: 4000000&quot; +
				&quot;}&quot;);
		chartComp23.setPlotOptions(&quot;{&quot; +
					&quot;series: {&quot; +
						&quot;stacking: 'normal'&quot; +
					&quot;}&quot; +
				&quot;}&quot;);
		chartComp23.setLegend(&quot;{&quot; +
					&quot;enabled: false &quot; +
				&quot;}&quot;);
		chartComp23.setTooltipFormatter(&quot;function formatTooltip(obj){&quot; +
					&quot;return '&lt;b&gt;'+ obj.series.name +', age '+ obj.point.category +'&lt;/b&gt;&lt;br/&gt;&quot; +
					&quot;'+'Population: '+ Highcharts.numberFormat(Math.abs(obj.point.y), 0);&quot; +
				&quot;}&quot;);
		
		chartComp23.setModel(dataChartModel23);
		
		//Adding some data to the model
		
		Number maleBarData [] = {
				-1746181, -1884428, -2089758, -2222362, -2537431, -2507081, -2443179,
                -2664537, -3556505, -3680231, -3143062, -2721122, -2229181, -2227768,
                -2176300, -1329968, -836804, -354784, -90569, -28367, -3878
		};
		
		for(int mb = 0; mb&lt;maleBarData.length;mb++ ){
			dataChartModel23.addValue(&quot;Male&quot;,mb, maleBarData[mb]);
		}
		
		Number femaleBarData [] = {
				1656154, 1787564, 1981671, 2108575, 2403438, 2366003, 2301402, 2519874,
                3360596, 3493473, 3050775, 2759560, 2304444, 2426504, 2568938, 1785638,
                1447162, 1005011, 330870, 130632, 21208
		};
		
		for(int fmb = 0; fmb&lt;femaleBarData.length;fmb++ ){
			dataChartModel23.addValue(&quot;Female&quot;,fmb, femaleBarData[fmb]);
		}
		
		//================================================================================
	    //  Multiple axes
	    //================================================================================
		
		chartComp24 = (ZHighCharts) getFellow(&quot;chartComp24&quot;);
		chartComp24.setType(&quot;line&quot;); //Mandatory!!
		chartComp24.setOptions(&quot;{&quot; +
					&quot;zoomType: 'xy'&quot; +
				&quot;}&quot;);
		chartComp24.setTitle(&quot;Average Monthly Weather Data for Tokyo&quot;);
		chartComp24.setSubTitle(&quot;Source: WorldClimate.com&quot;);
		chartComp24.setxAxisOptions(&quot;{&quot; +
					&quot;categories: [&quot; + //L&eacute;gende de l'axe X
						&quot;'Jan', &quot; +
						&quot;'Feb', &quot; +
						&quot;'Mar', &quot; +
						&quot;'Apr', &quot; +
						&quot;'May', &quot; +
						&quot;'Jun', &quot; +
						&quot;'Jul', &quot; +
						&quot;'Aug', &quot; +
						&quot;'Sep', &quot; +
						&quot;'Oct', &quot; +
						&quot;'Nov', &quot; +
						&quot;'Dec'&quot; +
					&quot;]&quot; +
				&quot;}&quot;);
			
		chartComp24.setyAxisOptions(&quot;[&quot; +
					&quot;{&quot; + // Primary yAxis
						&quot;labels: {&quot; +
							&quot;formatter: function() {&quot; +
								&quot;return this.value +'&#x00b0;C';&quot; + //Format de la l&eacute;gende ex: 15&#x00b0;c
							&quot;},&quot; +
							&quot;style: {&quot; +
								&quot;color: '#89A54E'&quot; + //Couleur de la l&eacute;gende
							&quot;} &quot; +
						&quot;},&quot; +
						&quot;title: {&quot; +
							&quot;text: 'Temperature',&quot; + //Titre de la l&eacute;gende
							&quot;style: { &quot; +
								&quot;color: '#89A54E'&quot; + //couleur du titre de la l&eacute;gende
							&quot;}&quot; +
						&quot;},&quot; +
						&quot;opposite: true&quot; + //Mettre au c&ocirc;t&eacute; droit de l'&eacute;cran
					&quot;},&quot; +
					&quot;{&quot; + // Secondary yAxis
						&quot;title: {&quot; +
							&quot;text: 'Rainfall',&quot; +
							&quot;style: {&quot; +
								&quot;color: '#4572A7'&quot; +
							&quot;}&quot; +
						&quot;},&quot; +
						&quot;labels: {&quot; +
							&quot;formatter: function() { &quot; +
								&quot;return this.value +' mm';&quot; +
							&quot;},&quot; +
							&quot;style: {&quot; +
								&quot;color: '#4572A7'&quot; +
							&quot;}&quot; +
						&quot;}&quot; +
					&quot;},&quot; +
					&quot;{&quot; + // Tertiary yAxis
						&quot;title: { &quot; +
							&quot;text: 'Sea-Level Pressure',&quot; +
							&quot;style: {&quot; +
								&quot;color: '#AA4643' &quot; +
							&quot;}&quot; +
						&quot;},&quot; +
						&quot;labels: {&quot; +
							&quot;formatter: function() {&quot; +
								&quot;return this.value +' mb';&quot; +
							&quot;}, &quot; +
							&quot;style: {&quot; +
								&quot;color: '#AA4643'&quot; +
							&quot;}&quot; +
						&quot;},&quot; +
						&quot;opposite: true&quot; +
					&quot;}&quot; + 
				&quot;]&quot;);
		
		
		
		chartComp24.setTooltipOptions(&quot;{&quot; +
				&quot;shared: true,&quot; +  
				&quot;crosshairs: true,&quot; +
				&quot;borderColor : '#000000'&quot; +//Custom tooltip border color
			&quot;}&quot;);
		
		String formatt = &quot;&quot;;
		for(int i=0;i&lt;3;i++){
			formatt += &quot;&lt;span style=\&quot;color:'+ obj.points[&quot;+i+&quot;].series.color +';\&quot;&gt;'+ obj.points[&quot;+i+&quot;].series.name +'&lt;/span&gt; : &lt;b&gt;'+ obj.points[&quot;+i+&quot;].y + obj.points[&quot;+i+&quot;].series.options.units + '&lt;/b&gt;&quot;;
			if(i&lt;3-1)
				formatt += &quot;&lt;br/&gt;&quot;;
		}
		
		chartComp24.setTooltipFormatter(&quot;function formatTooltip(obj){ &quot; +
					&quot;return obj.x + '&lt;br/&gt;&quot; +
					 formatt + 	 
				&quot;';}&quot;);
		
		chartComp24.setModel(dataChartModel24);
		
		//Series 1: Temperature
		style = new HashMap();
		style.put(&quot;color&quot;, &quot;#89A54E&quot;);//Series chart color
		style.put(&quot;type&quot;, &quot;spline&quot;);//Series type
		style.put(&quot;yAxis&quot;, 0);// associate the series to a specified yAxis (here 0)
		style.put(&quot;units&quot;, &quot;&#x00b0;C&quot;);
		chartComp24.setSeriesOptions(&quot;Temperature&quot;, style); 
		
		dataChartModel24.addValue(&quot;Temperature&quot;, 0, 7.0);//January (month 0) Temperature is 7 deges
		dataChartModel24.addValue(&quot;Temperature&quot;, 1, 6.9);
		dataChartModel24.addValue(&quot;Temperature&quot;, 2, 9.5);
		dataChartModel24.addValue(&quot;Temperature&quot;, 3, 14.5);
		dataChartModel24.addValue(&quot;Temperature&quot;, 4, 18.2);
		dataChartModel24.addValue(&quot;Temperature&quot;, 5, 21.5);
		dataChartModel24.addValue(&quot;Temperature&quot;, 6, 25.2);
		dataChartModel24.addValue(&quot;Temperature&quot;, 7, 26.5);
		dataChartModel24.addValue(&quot;Temperature&quot;, 8, 23.3);
		dataChartModel24.addValue(&quot;Temperature&quot;, 9, 18.3);
		dataChartModel24.addValue(&quot;Temperature&quot;, 10, 13.9);
		dataChartModel24.addValue(&quot;Temperature&quot;, 11, 9.6);
		
		//Series 2: Rainfall
		style = new HashMap();
		style.put(&quot;color&quot;, &quot;#4572A7&quot;);
		style.put(&quot;type&quot;, &quot;spline&quot;);
		style.put(&quot;yAxis&quot;, 1);// associate the series to a specified yAxis (here 1)
		style.put(&quot;units&quot;, &quot;mm&quot;);
		chartComp24.setSeriesOptions(&quot;Rainfall&quot;, style);
		
		dataChartModel24.addValue(&quot;Rainfall&quot;, 0, 49.9);
		dataChartModel24.addValue(&quot;Rainfall&quot;, 1, 71.5);
		dataChartModel24.addValue(&quot;Rainfall&quot;, 2, 10.6);
		dataChartModel24.addValue(&quot;Rainfall&quot;, 3, 129.2);
		dataChartModel24.addValue(&quot;Rainfall&quot;, 4, 144.0);
		dataChartModel24.addValue(&quot;Rainfall&quot;, 5, 176.0);
		dataChartModel24.addValue(&quot;Rainfall&quot;, 6, 135.6);
		dataChartModel24.addValue(&quot;Rainfall&quot;, 7, 148.5);
		dataChartModel24.addValue(&quot;Rainfall&quot;, 8, 216.4);
		dataChartModel24.addValue(&quot;Rainfall&quot;, 9, 194.1);
		dataChartModel24.addValue(&quot;Rainfall&quot;, 10, 95.6);
		dataChartModel24.addValue(&quot;Rainfall&quot;, 11, 54.4);
		
		//Series 3: Sea-Level Pressure
		style = new HashMap();
		style.put(&quot;color&quot;, &quot;#AA4643&quot;);
		style.put(&quot;type&quot;, &quot;spline&quot;);
		style.put(&quot;dashStyle&quot;, &quot;shortdot&quot;);
		style.put(&quot;yAxis&quot;, 2);
		style.put(&quot;units&quot;, &quot;mb&quot;);
		marker = new HashMap();
		marker.put(&quot;enabled&quot;, false);//deactivate markers (points) for this series
		style.put(&quot;marker&quot;, marker);
		chartComp24.setSeriesOptions(&quot;Sea-Level Pressure&quot;, style);
		
		dataChartModel24.addValue(&quot;Sea-Level Pressure&quot;, 0, 1016);
		dataChartModel24.addValue(&quot;Sea-Level Pressure&quot;, 1, 1016);
		dataChartModel24.addValue(&quot;Sea-Level Pressure&quot;, 2, 1015.9);
		dataChartModel24.addValue(&quot;Sea-Level Pressure&quot;, 3, 1015.5);
		dataChartModel24.addValue(&quot;Sea-Level Pressure&quot;, 4, 1012.3);
		dataChartModel24.addValue(&quot;Sea-Level Pressure&quot;, 5, 1009.5);
		dataChartModel24.addValue(&quot;Sea-Level Pressure&quot;, 6, 1009.6);
		dataChartModel24.addValue(&quot;Sea-Level Pressure&quot;, 7, 1010.2);
		dataChartModel24.addValue(&quot;Sea-Level Pressure&quot;, 8, 1013.1);
		dataChartModel24.addValue(&quot;Sea-Level Pressure&quot;, 9, 1016.9);
		dataChartModel24.addValue(&quot;Sea-Level Pressure&quot;, 10, 1018.2);
		dataChartModel24.addValue(&quot;Sea-Level Pressure&quot;, 11, 1016.7);
		
		//================================================================================
	    //  Multiple axes - yAxis in Pure Java code
	    //================================================================================
		
		chartComp37 = (ZHighCharts) getFellow(&quot;chartComp37&quot;);
		chartComp37.setType(&quot;line&quot;); //Mandatory!!
		chartComp37.setOptions(&quot;{&quot; +
					&quot;zoomType: 'xy'&quot; +
				&quot;}&quot;);
		chartComp37.setTitle(&quot;Average Monthly Weather Data for Tokyo&quot;);
		chartComp37.setSubTitle(&quot;Source: WorldClimate.com&quot;);
		chartComp37.setxAxisOptions(&quot;{&quot; +
					&quot;categories: [&quot; + //xAxis elements
						&quot;'Jan', &quot; +
						&quot;'Feb', &quot; +
						&quot;'Mar', &quot; +
						&quot;'Apr', &quot; +
						&quot;'May', &quot; +
						&quot;'Jun', &quot; +
						&quot;'Jul', &quot; +
						&quot;'Aug', &quot; +
						&quot;'Sep', &quot; +
						&quot;'Oct', &quot; +
						&quot;'Nov', &quot; +
						&quot;'Dec'&quot; +
					&quot;]&quot; +
				&quot;}&quot;);
			
		//Primary yAxis definition (yAxis 0 / default yAxis)
		Map Axis0 = new HashMap();
		Map Axis0Style = new HashMap(); //Style Creation
		Axis0Style.put(&quot;color&quot;, &quot;#89A54E&quot;);
		Map Axis0Labels = new HashMap(); //Labels
		Axis0Labels.put(&quot;formatter&quot;, &quot;function() {return this.value +'&#x00b0;C';}&quot;);
		Axis0Labels.put(&quot;style&quot;, Axis0Style);
		Map Axis0Title = new HashMap();// title
		Axis0Title.put(&quot;text&quot;, &quot;Temperature&quot;);
		Axis0Title.put(&quot;style&quot;, Axis0Style);
		Axis0.put(&quot;labels&quot;, Axis0Labels);//Putting all together
		Axis0.put(&quot;title&quot;, Axis0Title);
		Axis0.put(&quot;opposite&quot;, true);
		
		/*
		 * The code above is equivalent to this:
 		*	&quot;{&quot; + // Primary yAxis
				&quot;labels: {&quot; +
					&quot;formatter: function() {&quot; +
						&quot;return this.value +'&#x00b0;C';&quot; + //Format de la l&eacute;gende ex: 15&#x00b0;c
					&quot;},&quot; +
					&quot;style: {&quot; +
						&quot;color: '#89A54E'&quot; + //Couleur de la l&eacute;gende
					&quot;} &quot; +
				&quot;},&quot; +
				&quot;title: {&quot; +
					&quot;text: 'Temperature',&quot; + //Titre de la l&eacute;gende
					&quot;style: { &quot; +
						&quot;color: '#89A54E'&quot; + //couleur du titre de la l&eacute;gende
					&quot;}&quot; +
				&quot;},&quot; +
				&quot;opposite: true&quot; + //Mettre au c&ocirc;t&eacute; droit de l'&eacute;cran
			&quot;},&quot; +
		 * 
		 */

		Map Axis1 = new HashMap();
		Map Axis1Labels = new HashMap();
		Axis1Labels.put(&quot;formatter&quot;, &quot;function() {return this.value +' mm';}&quot;);
		Map Axis1Style = new HashMap();
		Axis1Style.put(&quot;color&quot;, &quot;#4572A7&quot;);
		Axis1Labels.put(&quot;style&quot;, Axis1Style);
		Map Axis1Title = new HashMap();
		Axis1Title.put(&quot;text&quot;, &quot;Rainfall&quot;);
		Axis1Title.put(&quot;style&quot;, Axis1Style);
		Axis1.put(&quot;labels&quot;, Axis1Labels);
		Axis1.put(&quot;title&quot;, Axis1Title);

		Map Axis2 = new HashMap();
		Map Axis2Labels = new HashMap();
		Axis2Labels.put(&quot;formatter&quot;, &quot;function() {return this.value +' mb';}&quot;);
		Map Axis2Style = new HashMap();
		Axis2Style.put(&quot;color&quot;, &quot;#AA4643&quot;);
		Axis2Labels.put(&quot;style&quot;, Axis2Style);
		Map Axis2Title = new HashMap();
		Axis2Title.put(&quot;text&quot;, &quot;Sea-Level Pressure&quot;);
		Axis2Title.put(&quot;style&quot;, Axis2Style);
		Axis2.put(&quot;labels&quot;, Axis2Labels);
		Axis2.put(&quot;title&quot;, Axis2Title);
		Axis2.put(&quot;opposite&quot;, true);
		
		//List of yAxis defined above
		List AxisY = new ArrayList();
		AxisY.add(Axis0);
		AxisY.add(Axis1);
		AxisY.add(Axis2);
		
		//set the chart yAxis
		chartComp37.setyAxisOptions(AxisY);
		
		formatt = &quot;&quot;;
		for(int i=0;i&lt;3;i++){
			formatt += &quot;&lt;span style=\&quot;color:'+ this.points[&quot;+i+&quot;].series.color +';\&quot;&gt;'+ this.points[&quot;+i+&quot;].series.name +'&lt;/span&gt; : &lt;b&gt;'+ this.points[&quot;+i+&quot;].y + ' ' + this.points[&quot;+i+&quot;].series.options.units +'&lt;/b&gt;&quot;;
			if(i&lt;3-1)
				formatt += &quot;&lt;br/&gt;&quot;;
		}
				
		chartComp37.setTooltipOptions(&quot;{&quot; +
				&quot;shared: true,&quot; + 
				&quot;crosshairs: true,&quot; +
				&quot;borderColor : '#000000',&quot; +
				&quot;formatter: function() { &quot; +
					&quot;return this.x + '&lt;br/&gt;&quot; +
					formatt +
					&quot;';}&quot; +
			&quot;}&quot;);
				
		chartComp37.setModel(dataChartModel37);
		
		//Series 1: Temperature
		style = new HashMap();
		style.put(&quot;color&quot;, &quot;#89A54E&quot;);
		style.put(&quot;type&quot;, &quot;spline&quot;);
		style.put(&quot;yAxis&quot;, 0);
		style.put(&quot;units&quot;, &quot;&#x00b0;C&quot;);
		chartComp37.setSeriesOptions(&quot;Temperature&quot;, style); 
		
		dataChartModel37.addValue(&quot;Temperature&quot;, 0, 7.0);
		dataChartModel37.addValue(&quot;Temperature&quot;, 1, 6.9);
		dataChartModel37.addValue(&quot;Temperature&quot;, 2, 9.5);
		dataChartModel37.addValue(&quot;Temperature&quot;, 3, 14.5);
		dataChartModel37.addValue(&quot;Temperature&quot;, 4, 18.2);
		dataChartModel37.addValue(&quot;Temperature&quot;, 5, 21.5);
		dataChartModel37.addValue(&quot;Temperature&quot;, 6, 25.2);
		dataChartModel37.addValue(&quot;Temperature&quot;, 7, 26.5);
		dataChartModel37.addValue(&quot;Temperature&quot;, 8, 23.3);
		dataChartModel37.addValue(&quot;Temperature&quot;, 9, 18.3);
		dataChartModel37.addValue(&quot;Temperature&quot;, 10, 13.9);
		dataChartModel37.addValue(&quot;Temperature&quot;, 11, 9.6);
		
		//Series 2: Rainfall
		style = new HashMap();
		style.put(&quot;color&quot;, &quot;#4572A7&quot;);
		style.put(&quot;type&quot;, &quot;spline&quot;);
		style.put(&quot;yAxis&quot;, 1);
		style.put(&quot;units&quot;, &quot;mm&quot;);
		chartComp37.setSeriesOptions(&quot;Rainfall&quot;, style);
		
		dataChartModel37.addValue(&quot;Rainfall&quot;, 0, 49.9);
		dataChartModel37.addValue(&quot;Rainfall&quot;, 1, 71.5);
		dataChartModel37.addValue(&quot;Rainfall&quot;, 2, 10.6);
		dataChartModel37.addValue(&quot;Rainfall&quot;, 3, 129.2);
		dataChartModel37.addValue(&quot;Rainfall&quot;, 4, 144.0);
		dataChartModel37.addValue(&quot;Rainfall&quot;, 5, 176.0);
		dataChartModel37.addValue(&quot;Rainfall&quot;, 6, 135.6);
		dataChartModel37.addValue(&quot;Rainfall&quot;, 7, 148.5);
		dataChartModel37.addValue(&quot;Rainfall&quot;, 8, 216.4);
		dataChartModel37.addValue(&quot;Rainfall&quot;, 9, 194.1);
		dataChartModel37.addValue(&quot;Rainfall&quot;, 10, 95.6);
		dataChartModel37.addValue(&quot;Rainfall&quot;, 11, 54.4);
		
		//Series 3: Sea-Level Pressure
		style = new HashMap();
		style.put(&quot;color&quot;, &quot;#AA4643&quot;);
		style.put(&quot;type&quot;, &quot;spline&quot;);
		style.put(&quot;dashStyle&quot;, &quot;shortdot&quot;);
		style.put(&quot;yAxis&quot;, 2);
		marker = new HashMap();
		marker.put(&quot;enabled&quot;, false);
		style.put(&quot;marker&quot;, marker);
		style.put(&quot;units&quot;, &quot;mb&quot;);
		chartComp37.setSeriesOptions(&quot;Sea-Level Pressure&quot;, style);
		
		dataChartModel37.addValue(&quot;Sea-Level Pressure&quot;, 0, 1016);
		dataChartModel37.addValue(&quot;Sea-Level Pressure&quot;, 1, 1016);
		dataChartModel37.addValue(&quot;Sea-Level Pressure&quot;, 2, 1015.9);
		dataChartModel37.addValue(&quot;Sea-Level Pressure&quot;, 3, 1015.5);
		dataChartModel37.addValue(&quot;Sea-Level Pressure&quot;, 4, 1012.3);
		dataChartModel37.addValue(&quot;Sea-Level Pressure&quot;, 5, 1009.5);
		dataChartModel37.addValue(&quot;Sea-Level Pressure&quot;, 6, 1009.6);
		dataChartModel37.addValue(&quot;Sea-Level Pressure&quot;, 7, 1010.2);
		dataChartModel37.addValue(&quot;Sea-Level Pressure&quot;, 8, 1013.1);
		dataChartModel37.addValue(&quot;Sea-Level Pressure&quot;, 9, 1016.9);
		dataChartModel37.addValue(&quot;Sea-Level Pressure&quot;, 10, 1018.2);
		dataChartModel37.addValue(&quot;Sea-Level Pressure&quot;, 11, 1016.7);
		
		//================================================================================
	    // jsgauge Basic Example
	    //================================================================================
		zgauge1 = (ZGauge) this.getFellow(&quot;zgauge1&quot;);
		zgauge1.setOptions(&quot;{&quot; +
					&quot;label:'vitesse',&quot; +
					&quot;min:0,&quot; +
					&quot;max:240,&quot; +
					&quot;unitsLabel:' km/h',&quot; +
					&quot;majorTicks: 9,&quot; +
					&quot;bands: [&quot; +
						&quot;{&quot; +
							&quot;color: 'rgba(255,255,0,0.5)', &quot; +
							&quot;from: 110, &quot; +
							&quot;to: 140 &quot; +
						&quot;},&quot; +
						&quot;{&quot; +
							&quot;color: 'rgba(255,0,0,0.5)', &quot; +
							&quot;from: 140, to: 240 &quot; +
						&quot;}&quot; +
					&quot;]&quot; +
				&quot;}&quot;);
		zgauge1.setValue(60);
		
		//================================================================================
	    // Basic column
	    //================================================================================

		chartComp25 = (ZHighCharts) getFellow(&quot;chartComp25&quot;);
		chartComp25.setType(&quot;column&quot;);
		chartComp25.setTitle(&quot;Monthly Average New York&quot;);
		chartComp25.setSubTitle(&quot;Source: WorldClimate.com&quot;);
		chartComp25.setxAxisOptions(&quot;{&quot; +
				&quot;categories: [&quot; +
					&quot;'Jan', &quot; +
					&quot;'Feb', &quot; +
					&quot;'Mar', &quot; +
					&quot;'Apr', &quot; +
					&quot;'May', &quot; +
					&quot;'Jun', &quot; +
					&quot;'Jul', &quot; +
					&quot;'Aug', &quot; +
					&quot;'Sep', &quot; +
					&quot;'Oct', &quot; +
					&quot;'Nov', &quot; +
					&quot;'Dec'&quot; +
				&quot;]&quot; +
			&quot;}&quot;);
		chartComp25.setyAxisOptions(&quot;{ &quot; +
					&quot;min:0&quot; +
				&quot;}&quot;);
		chartComp25.setYAxisTitle(&quot;New York (mm)&quot;);
		chartComp25.setTooltipFormatter(&quot;function formatTooltip(obj){ &quot; +
					&quot;return ''+obj.x +': '+ obj.y +' mm';&quot; +
				&quot;}&quot;);
		chartComp25.setLegend(&quot;{&quot; +
					&quot;layout: 'vertical',&quot; +
					&quot;backgroundColor: '#FFFFFF',&quot; +
					&quot;align: 'left',&quot; +
					&quot;verticalAlign: 'top',&quot; +
					&quot;x: 100,&quot; +
					&quot;y: 70,&quot; +
					&quot;floating: true,&quot; +
					&quot;shadow: true&quot; +
				&quot;}&quot;);
		chartComp25.setPlotOptions(&quot;{&quot; +
					&quot;column: {&quot; +
						&quot;pointPadding: 0.2,&quot; +
						&quot;borderWidth: 0&quot; +
					&quot;}&quot; +
				&quot;}&quot;);
		
		chartComp25.setModel(dataChartModel25);
		
		//Adding some data to the model
		
		Number TOKdata [] = { 49.9, 71.5, 106.4, 129.2, 144.0, 176.0,
				135.6, 148.5, 216.4, 194.1, 95.6, 54.4};
		for(int i = 0; i &lt; TOKdata.length; i++)
			dataChartModel25.addValue(&quot;Tokyo&quot;, i, TOKdata[i]);
		
		Number NYdata [] = { 83.6, 78.8, 98.5, 93.4, 106.0, 84.5,
				105.0, 104.3, 91.2, 83.5, 106.6, 92.3};
		for(int i = 0; i &lt; NYdata.length; i++)
			dataChartModel25.addValue(&quot;New York&quot;, i, NYdata[i]);
		
		Number LNDdata [] = { 48.9, 38.8, 39.3, 41.4, 47.0, 48.3, 59.0,
				59.6, 52.4, 65.2, 59.3, 51.2};
		for(int i = 0; i &lt; LNDdata.length; i++)
			dataChartModel25.addValue(&quot;London&quot;, i, LNDdata[i]);

		Number BRLdata [] = { 42.4, 33.2, 34.5, 39.7, 52.6, 75.5, 57.4,
				60.4, 47.6, 39.1, 46.8, 51.1};
		for(int i = 0; i &lt; BRLdata.length; i++)
			dataChartModel25.addValue(&quot;Berlin&quot;, i, BRLdata[i]);
		
		//================================================================================
	    // Column with negative values
	    //================================================================================
		
		chartComp26 = (ZHighCharts) getFellow(&quot;chartComp26&quot;);
		chartComp26.setType(&quot;column&quot;);
		chartComp26.setTitle(&quot;Column chart with negative values&quot;);
		chartComp26.setxAxisOptions(&quot;{&quot; +
				&quot;categories: [&quot; +
					&quot;'Apples',&quot; +
					&quot;'Oranges', &quot; +
					&quot;'Pears', &quot; +
					&quot;'Grapes', &quot; +
					&quot;'Bananas'&quot; +
				&quot;]&quot; +
			&quot;}&quot;);
		chartComp26.setTooltipFormatter(&quot;function formatTooltip(obj){ &quot; +
					&quot;return ''+obj.series.name +': '+ obj.y +'';&quot; +
				&quot;}&quot;);
		
		chartComp26.setModel(dataChartModel26);
		
		Number Johndata [] = { 5, 3, 4, 7, 2};
		for(int i = 0; i &lt; Johndata.length; i++)
			dataChartModel26.addValue(&quot;John&quot;, i, Johndata[i]);
		
		Number Janedata [] = {2, -2, -3, 2, 1};
		for(int i = 0; i &lt; Janedata.length; i++)
			dataChartModel26.addValue(&quot;Jane&quot;, i, Janedata[i]);
		
		Number Joedata [] = { 3, 4, 4, -2, 5};
		for(int i = 0; i &lt; Joedata.length; i++)
			dataChartModel26.addValue(&quot;Joe&quot;, i, Joedata[i]);
		
		//================================================================================
	    // Stacked column
	    //================================================================================

		chartComp27 = (ZHighCharts) getFellow(&quot;chartComp27&quot;);
		chartComp27.setType(&quot;column&quot;);
		chartComp27.setTitle(&quot;Stacked column chart&quot;);
		chartComp27.setxAxisOptions(&quot;{&quot; +
				&quot;categories: [&quot; +
					&quot;'Apples',&quot; +
					&quot;'Oranges', &quot; +
					&quot;'Pears', &quot; +
					&quot;'Grapes', &quot; +
					&quot;'Bananas'&quot; +
				&quot;]&quot; +
			&quot;}&quot;);
		chartComp27.setyAxisOptions(&quot;{&quot; +
					&quot;min: 0,&quot; +
					&quot;stackLabels: {&quot; +
						&quot;enabled: true,&quot; +
						&quot;style: {&quot; +
							&quot;fontWeight: 'bold',&quot; +
							&quot;color: (Highcharts.theme &amp;&amp; Highcharts.theme.textColor) || 'gray'&quot; +
						&quot;}&quot; +
					&quot;}&quot; +
				&quot;}&quot;);
		chartComp27.setYAxisTitle(&quot;Total fruit consumption&quot;);
		chartComp27.setTooltipFormatter(&quot;function formatTooltip(obj){ &quot; +
					&quot;return '&lt;b&gt;'+ obj.x +'&lt;/b&gt;&lt;br/&gt;&quot; +
					&quot;'+obj.series.name +': '+ obj.y +'&lt;br/&gt;&quot; +
					&quot;'+'Total: '+ obj.point.stackTotal;&quot; +
				&quot;}&quot;);
		chartComp27.setLegend(&quot;{&quot; +
					&quot;align: 'right',&quot; +
					&quot;x: -100, &quot; +
					&quot;verticalAlign: 'top', &quot; +
					&quot;y: 20,&quot; +
					&quot;floating: true,&quot; +
					&quot;backgroundColor: (Highcharts.theme &amp;&amp; Highcharts.theme.legendBackgroundColorSolid) || 'white',&quot; +
					&quot;borderColor: '#CCC',&quot; +
					&quot;borderWidth: 1, &quot; +
					&quot;shadow: false&quot; +
				&quot;}&quot;);
		chartComp27.setPlotOptions(&quot;{&quot; +
					&quot;column: {&quot; +
						&quot;stacking: 'normal',&quot; +
						&quot;dataLabels: { &quot; +
							&quot;enabled: true,&quot; +
							&quot;color: (Highcharts.theme &amp;&amp; Highcharts.theme.dataLabelsColor) || 'white'&quot; +
						&quot;}&quot; +
					&quot;}&quot; +
				&quot;}&quot;);
		
		chartComp27.setModel(dataChartModel27);
		
		Number Johndata27 [] = { 5, 3, 4, 7, 2};
		for(int i = 0; i &lt; Johndata27.length; i++)
			dataChartModel27.addValue(&quot;John&quot;, i, Johndata27[i]);
		
		Number Janedata27 [] = {2, 2, 3, 2, 1};
		for(int i = 0; i &lt; Janedata27.length; i++)
			dataChartModel27.addValue(&quot;Jane&quot;, i, Janedata27[i]);
		
		Number Joedata27 [] = { 3, 4, 4, 2, 5};
		for(int i = 0; i &lt; Joedata27.length; i++)
			dataChartModel27.addValue(&quot;Joe&quot;, i, Joedata27[i]);
		
		//================================================================================
	    // Stacked and grouped column
	    //================================================================================

		chartComp28 = (ZHighCharts) getFellow(&quot;chartComp28&quot;);
		chartComp28.setType(&quot;column&quot;);
		chartComp28.setTitle(&quot;Total fruit consumtion, grouped by gender&quot;);
		chartComp28.setxAxisOptions(&quot;{&quot; +
				&quot;categories: [&quot; +
					&quot;'Apples',&quot; +
					&quot;'Oranges', &quot; +
					&quot;'Pears', &quot; +
					&quot;'Grapes', &quot; +
					&quot;'Bananas'&quot; +
				&quot;]&quot; +
			&quot;}&quot;);
		chartComp28.setyAxisOptions(&quot;{&quot; +
					&quot;min: 0,&quot; +
					&quot;allowDecimals: false,&quot; +
				&quot;}&quot;);
		chartComp28.setYAxisTitle(&quot;Number of fruits&quot;);
		chartComp28.setTooltipFormatter(&quot;function formatTooltip(obj){ &quot; +
					&quot;return '&lt;b&gt;'+ obj.x +'&lt;/b&gt;&lt;br/&gt;&quot; +
					&quot;'+obj.series.name +': '+ obj.y +'&lt;br/&gt;&quot; +
					&quot;'+'Total: '+ obj.point.stackTotal;&quot; +
				&quot;}&quot;);
		chartComp28.setPlotOptions(&quot;{&quot; +
					&quot;column: {&quot; +
						&quot;stacking: 'normal'&quot; +
					&quot;}&quot; +
				&quot;}&quot;);
		
		chartComp28.setModel(dataChartModel28);
		
		Number Johndata28 [] = { 5, 3, 4, 7, 2};
		for(int i = 0; i &lt; Johndata28.length; i++)
			dataChartModel28.addValue(&quot;John&quot;, i, Johndata28[i]);
		
		style = new HashMap();
		style.put(&quot;stack&quot;, &quot;male&quot;);
		chartComp28.setSeriesOptions(&quot;John&quot;, style);

		Number Joedata28 [] = { 3, 4, 4, 2, 5};
		for(int i = 0; i &lt; Joedata28.length; i++)
			dataChartModel28.addValue(&quot;Joe&quot;, i, Joedata28[i]);
		
		style = new HashMap();
		style.put(&quot;stack&quot;, &quot;male&quot;);
		chartComp28.setSeriesOptions(&quot;Joe&quot;, style);
		
		Number Janedata28 [] = {2, 5, 6, 2, 1};
		for(int i = 0; i &lt; Janedata28.length; i++)
			dataChartModel28.addValue(&quot;Jane&quot;, i, Janedata28[i]);
		
		style = new HashMap();
		style.put(&quot;stack&quot;, &quot;female&quot;);
		chartComp28.setSeriesOptions(&quot;Jane&quot;, style);
		
		Number Janetdata28 [] = {3, 0, 4, 4, 3};
		for(int i = 0; i &lt; Janetdata28.length; i++)
			dataChartModel28.addValue(&quot;Janet&quot;, i, Janetdata28[i]);
		
		style = new HashMap();
		style.put(&quot;stack&quot;, &quot;female&quot;);
		chartComp28.setSeriesOptions(&quot;Janet&quot;, style);
		
		
		//================================================================================
	    // Stacked percentage column
	    //================================================================================

		chartComp29 = (ZHighCharts) getFellow(&quot;chartComp29&quot;);
		chartComp29.setType(&quot;column&quot;);
		chartComp29.setTitle(&quot;Stacked column chart&quot;);
		chartComp29.setxAxisOptions(&quot;{&quot; +
				&quot;categories: [&quot; +
					&quot;'Apples',&quot; +
					&quot;'Oranges', &quot; +
					&quot;'Pears', &quot; +
					&quot;'Grapes', &quot; +
					&quot;'Bananas'&quot; +
				&quot;]&quot; +
			&quot;}&quot;);
		chartComp29.setyAxisOptions(&quot;{&quot; +
					&quot;min: 0&quot; +
				&quot;}&quot;);
		chartComp29.setYAxisTitle(&quot;Total fruit consumption&quot;);
		chartComp29.setTooltipFormatter(&quot;function formatTooltip(obj){ &quot; +
					&quot;return ''+  obj.series.name +': '+ obj.y +' ('+ Math.round(obj.percentage) +'%)';&quot; +
				&quot;}&quot;);
		chartComp29.setPlotOptions(&quot;{&quot; +
					&quot;column: {&quot; +
						&quot;stacking: 'percent',&quot; +
					&quot;}&quot; +
				&quot;}&quot;);
		
		chartComp29.setModel(dataChartModel29);
		
		Number Johndata29 [] = { 5, 3, 4, 7, 2};
		for(int i = 0; i &lt; Johndata29.length; i++)
			dataChartModel29.addValue(&quot;John&quot;, i, Johndata29[i]);
		
		Number Janedata29 [] = {2, 2, 3, 2, 1};
		for(int i = 0; i &lt; Janedata29.length; i++)
			dataChartModel29.addValue(&quot;Jane&quot;, i, Janedata29[i]);
		
		Number Joedata29 [] = { 3, 4, 4, 2, 5};
		for(int i = 0; i &lt; Joedata29.length; i++)
			dataChartModel29.addValue(&quot;Joe&quot;, i, Joedata29[i]);
		
		//================================================================================
	    // Column with rotated labels
	    //================================================================================

		chartComp30 = (ZHighCharts) getFellow(&quot;chartComp30&quot;);
		chartComp30.setType(&quot;column&quot;);
		chartComp30.setOptions(&quot;{margin: [ 50, 50, 100, 80]}&quot;);
		chartComp30.setTitle(&quot;World\'s largest cities per 2008&quot;);
		chartComp30.setxAxisOptions(&quot;{&quot; +
				&quot;categories: [&quot; +
					&quot;'Tokyo',&quot;+
	                &quot;'Jakarta',&quot;+
	                &quot;'New York',&quot;+
	                &quot;'Seoul',&quot;+
	                &quot;'Manila',&quot;+
	                &quot;'Mumbai',&quot;+
	                &quot;'Sao Paulo',&quot;+
	                &quot;'Mexico City',&quot;+
	                &quot;'Dehli',&quot;+
	                &quot;'Osaka',&quot;+
	                &quot;'Cairo',&quot;+
	                &quot;'Kolkata',&quot;+
	                &quot;'Los Angeles',&quot;+
	                &quot;'Shanghai',&quot;+
	                &quot;'Moscow',&quot;+
	                &quot;'Beijing',&quot;+
	                &quot;'Buenos Aires',&quot;+
	                &quot;'Guangzhou',&quot;+
	                &quot;'Shenzhen',&quot;+
	                &quot;'Istanbul'&quot;+
				&quot;],&quot;+
                &quot;labels: {&quot;+
                    &quot;rotation: -45,&quot;+
                    &quot;align: 'right',&quot;+
                    &quot;style: {&quot;+
                        &quot;fontSize: '13px',&quot;+
                        &quot;fontFamily: 'Verdana, sans-serif'&quot;+
                    &quot;}&quot;+
                &quot;}&quot; +
			&quot;}&quot;);
		chartComp30.setyAxisOptions(&quot;{&quot; +
					&quot;min: 0&quot; +
				&quot;}&quot;);
		chartComp30.setYAxisTitle(&quot;Population (millions)&quot;);
		chartComp30.setLegend(&quot;{&quot;+
                &quot;enabled: false&quot;+
            &quot;}&quot;);
		chartComp30.setTooltipFormatter(&quot;function formatTooltip(obj){ &quot; +
					&quot;return '&lt;b&gt;'+ obj.x +'&lt;/b&gt;&lt;br/&gt;&quot; +
					&quot;'+'Population in 2008: '+Highcharts.numberFormat(obj.y, 1) +' millions';&quot; +
				&quot;}&quot;);
		
		chartComp30.setModel(dataChartModel30);
		
		Number Populationdata30 [] = { 34.4, 21.8, 20.1, 20, 19.6, 19.5, 19.1, 18.4, 18,
                17.3, 16.8, 15, 14.7, 14.5, 13.3, 12.8, 12.4, 11.8,
                11.7, 11.2};
		for(int i = 0; i &lt; Populationdata30.length; i++)
			dataChartModel30.addValue(&quot;Population&quot;, i, Populationdata30[i]);
		
		Map series = new HashMap();
		Map dataLabels = new HashMap();
		dataLabels.put(&quot;enabled&quot;, true);
		dataLabels.put(&quot;rotation&quot;, -90);
		dataLabels.put(&quot;color&quot;, &quot;#FFFFFF&quot;);
		dataLabels.put(&quot;align&quot;, &quot;right&quot;);
		dataLabels.put(&quot;x&quot;, -3);
		dataLabels.put(&quot;y&quot;, 10);
		style = new HashMap();
		style.put(&quot;fontSize&quot;, &quot;13px&quot;);
		style.put(&quot;fontFamily&quot;, &quot;Verdana, sans-serif&quot;);
		dataLabels.put(&quot;style&quot;, style);
		series.put(&quot;dataLabels&quot;, dataLabels);
		chartComp30.setSeriesOptions(&quot;Population&quot;, series);
		
		//================================================================================
	    // Column and line
	    //================================================================================

		chartComp31 = (ZHighCharts) getFellow(&quot;chartComp31&quot;);
		chartComp31.setType(&quot;line&quot;); //Mandatory!
		chartComp31.setTitle(&quot;Combination chart&quot;);
		chartComp31.setxAxisOptions(&quot;{&quot; +
				&quot;categories: [&quot; +
					&quot;'Apples',&quot; +
					&quot;'Oranges', &quot; +
					&quot;'Pears', &quot; +
					&quot;'Bananas', &quot; +
					&quot;'Plums'&quot; +
				&quot;]&quot; +
			&quot;}&quot;);

		chartComp31.setTooltipFormatter(&quot;function formatTooltip(obj){ &quot; +
					&quot;return ''+obj.x  +': '+ obj.y;&quot; +
				&quot;}&quot;);
		
		chartComp31.setModel(dataChartModel31);
		
		Map seriesType = new HashMap();
		seriesType.put(&quot;type&quot;, &quot;column&quot;);
		
		Number Johndata31 [] = {2, 3, 5, 7, 6};
		for(int i = 0; i &lt; Johndata31.length; i++)
			dataChartModel31.addValue(&quot;John&quot;, i, Johndata31[i]);
		chartComp31.setSeriesOptions(&quot;John&quot;, seriesType);

		
		Number Janedata31 [] = {3, 2, 1, 3, 4};
		for(int i = 0; i &lt; Janedata31.length; i++)
			dataChartModel31.addValue(&quot;Jane&quot;, i, Janedata31[i]);
		chartComp31.setSeriesOptions(&quot;Jane&quot;, seriesType);

		
		Number Joedata31 [] = { 4, 3, 3, 9, 0};
		for(int i = 0; i &lt; Joedata31.length; i++)
			dataChartModel31.addValue(&quot;Joe&quot;, i, Joedata31[i]);
		chartComp31.setSeriesOptions(&quot;Joe&quot;, seriesType);
		
		Number AVGdata31 [] = { 3, 2.67, 3, 6.33, 3.33};
		for(int i = 0; i &lt; AVGdata31.length; i++)
			dataChartModel31.addValue(&quot;Average&quot;, i, AVGdata31[i]);
		
		seriesType = new HashMap();
		seriesType.put(&quot;type&quot;, &quot;spline&quot;);
		chartComp31.setSeriesOptions(&quot;Average&quot;, seriesType);	
		
		//================================================================================
		// Angular gauge
		//================================================================================
				
				chartComp32 = (ZHighCharts) getFellow(&quot;chartComp32&quot;);
				chartComp32.setType(&quot;gauge&quot;);
				chartComp32.setOptions(&quot;{&quot; +
							&quot;alignTicks: false,&quot; +
							&quot;plotBackgroundColor: null,&quot; +
							&quot;plotBackgroundImage: null,&quot; +
							&quot;plotBorderWidth: 0,&quot; +
							&quot;plotShadow: false&quot; +
						&quot;}&quot;);
				chartComp32.setTitle(&quot;Speedometer&quot;);
				chartComp32.setPane(&quot;{ &quot; +
							&quot;startAngle: -150, &quot; +
							&quot;endAngle: 150, &quot; +
							&quot;background: [&quot; +
								&quot;{ &quot; +
									&quot;backgroundColor: { &quot; +
										&quot;linearGradient: { &quot; +
											&quot;x1: 0, &quot; +
											&quot;y1: 0, &quot; +
											&quot;x2: 0, &quot; +
											&quot;y2: 1 &quot; +
										&quot;}, &quot; +
										&quot;stops: [ &quot; +
											&quot;[0, '#FFF'], &quot; +
											&quot;[1, '#333'] &quot; +
										&quot;] &quot; +
									&quot;}, &quot; +
									&quot;borderWidth: 0, &quot; +
									&quot;outerRadius: '109%' &quot; +
								&quot;}, &quot; +
								&quot;{ &quot; +
									&quot;backgroundColor: { &quot; +
										&quot;linearGradient: { &quot; +
											&quot;x1: 0, &quot; +
											&quot;y1: 0, &quot; +
											&quot;x2: 0, &quot; +
											&quot;y2: 1 &quot; +
										&quot;}, &quot; +
										&quot;stops: [ &quot; +
											&quot;[0, '#333'], &quot; +
											&quot;[1, '#FFF'] &quot; +
										&quot;] &quot; +
									&quot;}, &quot; +
									&quot;borderWidth: 1, &quot; +
									&quot;outerRadius: '107%' &quot; +
								&quot;},&quot; +
								&quot;{ &quot; +// default background
								&quot;}, &quot; +
								&quot;{ &quot; +
									&quot;backgroundColor: '#DDD', &quot; +
									&quot;borderWidth: 0, &quot; +
									&quot;outerRadius: '105%', &quot; +
									&quot;innerRadius: '103%' &quot; +
								&quot;}&quot; +
							&quot;] &quot; +
						&quot;}&quot;);
				
				chartComp32.setyAxisOptions(&quot;{ &quot; +
							&quot;min: 0, &quot; +
							&quot;max: 200,  &quot; +
							&quot;minorTickInterval: 'auto', &quot; +
							&quot;minorTickWidth: 1, &quot; +
							&quot;minorTickLength: 10, &quot; +
							&quot;minorTickPosition: 'inside', &quot; +
							&quot;minorTickColor: '#666',  &quot; +
							&quot;tickPixelInterval: 30, &quot; +
							&quot;tickWidth: 2, &quot; +
							&quot;tickPosition: 'inside', &quot; +
							&quot;tickLength: 10, &quot; +
							&quot;tickColor: '#666', &quot; +
							&quot;labels: { &quot; +
								&quot;step: 2, &quot; +
								&quot;rotation: 'auto' &quot; +
							&quot;}, &quot; +
							&quot;title: { &quot; +
								&quot;text: 'km/h' &quot; +
							&quot;}, &quot; +
							&quot;plotBands: [&quot; +
								&quot;{ &quot; +
									&quot;from: 0, &quot; +
									&quot;to: 120, &quot; +
									&quot;color: '#55BF3B' &quot; + // green
								&quot;}, &quot; +
								&quot;{ &quot; +
									&quot;from: 120, &quot; +
									&quot;to: 160, &quot; +
									&quot;color: '#DDDF0D' &quot; + // yellow
								&quot;}, &quot; +
								&quot;{ &quot; +
									&quot;from: 160, &quot; +
									&quot;to: 200, &quot; +
									&quot;color: '#DF5353' &quot; + // red
								&quot;}&quot; +
							&quot;] &quot; +
						&quot;}&quot;);
				
				chartComp32.setTooltipOptions(&quot;{enabled : false}&quot;);
				chartComp32.setModel(dataChartModel32);
				
				series = new HashMap();
		        dataLabels = new HashMap();
		        dataLabels.put(&quot;formatter&quot;, &quot;function () { &quot; +
		        			&quot;var kmh = this.y, mph = Math.round(kmh * 0.621);&quot; +
		        			&quot;return '&lt;span&gt;'+ kmh + ' km/h&lt;/span&gt;&lt;br/&gt;&quot; +
		        			&quot;' + '&lt;span&gt;' + mph + ' mph&lt;/span&gt;';&quot; +
		        		&quot;}&quot;);
		        style = new HashMap();
		        series.put(&quot;dataLabels&quot;, dataLabels);
		        chartComp32.setSeriesOptions(&quot;Speed&quot;, series); 
		        
				//Initial Value
				dataChartModel32.addValue(&quot;Speed&quot;, 0, 20);		
				
				//================================================================================
			    // Gauge with dual axes
			    //================================================================================

				chartComp33 = (ZHighCharts) getFellow(&quot;chartComp33&quot;);
				chartComp33.setType(&quot;gauge&quot;);
				chartComp33.setOptions(&quot;{&quot; +
							&quot;alignTicks: false,&quot; +
							&quot;plotBackgroundColor: null,&quot; +
							&quot;plotBackgroundImage: null,&quot; +
							&quot;plotBorderWidth: 0,&quot; +
							&quot;plotShadow: false&quot; +
						&quot;}&quot;);
				chartComp33.setTitle(&quot;Speedometer with dual axes&quot;);
				chartComp33.setPane(&quot;{&quot; +
							&quot;startAngle: -150,&quot; +
							&quot;endAngle: 150&quot; +
						&quot;}&quot;);
				chartComp33.setyAxisOptions(&quot;[&quot; +
							&quot;{ &quot; +
								&quot;min: 0, &quot; +
								&quot;max: 200, &quot; +
								&quot;lineColor: '#339', &quot; +
								&quot;tickColor: '#339', &quot; +
								&quot;minorTickColor: '#339', &quot; +
								&quot;offset: -25, &quot; +
								&quot;lineWidth: 2, &quot; +
								&quot;labels: { &quot; +
									&quot;distance: -20, &quot; +
									&quot;rotation: 'auto' &quot; +
								&quot;}, &quot; +
								&quot;tickLength: 5, &quot; +
								&quot;minorTickLength: 5, &quot; +
								&quot;endOnTick: false &quot; +
							&quot;}, &quot; +
							&quot;{ &quot; +
								&quot;min: 0, &quot; +
								&quot;max: 124, &quot; +
								&quot;tickPosition: 'outside', &quot; +
								&quot;lineColor: '#933', &quot; +
								&quot;lineWidth: 2, &quot; +
								&quot;minorTickPosition: 'outside', &quot; +
								&quot;tickColor: '#933', &quot; +
								&quot;minorTickColor: '#933', &quot; +
								&quot;tickLength: 5, &quot; +
								&quot;minorTickLength: 5, &quot; +
								&quot;labels: { &quot; +
									&quot;distance: 12, &quot; +
									&quot;rotation: 'auto' &quot; +
								&quot;}, &quot; +
								&quot;offset: -20, &quot; +
								&quot;endOnTick: false &quot; +
							&quot;}&quot; +
						&quot;]&quot;);
				chartComp33.setTooltipOptions(&quot;{enabled : false}&quot;);

				series = new HashMap();
		        dataLabels = new HashMap();
		        dataLabels.put(&quot;formatter&quot;, &quot;function () { &quot; +
		        			&quot;var kmh = this.y, mph = Math.round(kmh * 0.621);&quot; +
		        			&quot;return '&lt;span&gt;'+ kmh + ' km/h&lt;/span&gt;&lt;br/&gt;&quot; +
		        			&quot;' + '&lt;span&gt;' + mph + ' mph&lt;/span&gt;';&quot; +
		        		&quot;}&quot;);
		        style = new HashMap();
		        series.put(&quot;dataLabels&quot;, dataLabels);
		        chartComp33.setSeriesOptions(&quot;Speed&quot;, series); 
				chartComp33.setModel(dataChartModel33);
				
				//Initial Value
				dataChartModel33.addValue(&quot;Speed&quot;, 0, 20);		
				
				
				//================================================================================
			    // VU meter
			    //================================================================================

				chartComp34 = (ZHighCharts) getFellow(&quot;chartComp34&quot;);
				chartComp34.setType(&quot;gauge&quot;);
				chartComp34.setOptions(&quot;{&quot; +
							&quot;plotBorderWidth: 1, &quot; +
							&quot;plotBackgroundColor: { &quot; +
								&quot;linearGradient: { &quot; +
									&quot;x1: 0, &quot; +
									&quot;y1: 0, &quot; +
									&quot;x2: 0, &quot; +
									&quot;y2: 1 &quot; +
								&quot;}, &quot; +
								&quot;stops: [ &quot; +
									&quot;[0, '#FFF4C6'], &quot; +
									&quot;[0.3, '#FFFFFF'], &quot; +
									&quot;[1, '#FFF4C6'] &quot; +
								&quot;] &quot; +
							&quot;}, &quot; +
							&quot;plotBackgroundImage: null, &quot; +
							&quot;height: 200&quot; + 
						&quot;}&quot;);
				chartComp34.setTitle(&quot;VU meter&quot;);
				chartComp34.setPane(&quot;[&quot; +
							&quot;{ &quot; +
								&quot;startAngle: -45, &quot; +
								&quot;endAngle: 45, &quot; +
								&quot;background: null, &quot; +
								&quot;center: ['25%', '145%'], &quot; +
								&quot;size: 300 &quot; +
							&quot;}, &quot; +
							&quot;{ &quot; +
								&quot;startAngle: -45, &quot; +
								&quot;endAngle: 45, &quot; +
								&quot;background: null, &quot; +
								&quot;center: ['75%', '145%'], &quot; +
								&quot;size: 300 &quot; +
							&quot;}&quot; +
						&quot;]&quot;);
				chartComp34.setyAxisOptions(&quot;[&quot; +
							&quot;{&quot; +
								&quot;min: -20, &quot; +
								&quot;max: 6, &quot; +
								&quot;minorTickPosition: 'outside', &quot; +
								&quot;tickPosition: 'outside', &quot; +
								&quot;labels: { &quot; +
									&quot;rotation: 'auto', &quot; +
									&quot;distance: 20 &quot; +
								&quot;}, &quot; +
								&quot;plotBands: [&quot; +
									&quot;{ &quot; +
										&quot;from: 0, &quot; +
										&quot;to: 6, &quot; +
										&quot;color: '#C02316', &quot; +
										&quot;innerRadius: '100%', &quot; +
										&quot;outerRadius: '105%' &quot; +
									&quot;}&quot; +
								&quot;], &quot; +
								&quot;pane: 0, &quot; +
								&quot;title: { &quot; +
									&quot;text: 'VU&lt;br/&gt;&lt;span style=\&quot;font-size:8px\&quot;&gt;Channel A&lt;/span&gt;', &quot; +
									&quot;y: -40 &quot; +
								&quot;} &quot; +
							&quot;}, &quot; +
							&quot;{ &quot; +
								&quot;min: -20, &quot; +
								&quot;max: 6, &quot; +
								&quot;minorTickPosition: 'outside', &quot; +
								&quot;tickPosition: 'outside', &quot; +
								&quot;labels: { &quot; +
									&quot;rotation: 'auto', &quot; +
									&quot;distance: 20 &quot; +
								&quot;}, &quot; +
								&quot;plotBands: [&quot; +
									&quot;{ &quot; +
										&quot;from: 0, &quot; +
										&quot;to: 6, &quot; +
										&quot;color: '#C02316', &quot; +
										&quot;innerRadius: '100%', &quot; +
										&quot;outerRadius: '105%' &quot; +
									&quot;}&quot; +
								&quot;], &quot; +
								&quot;pane: 1, &quot; +
								&quot;title: { &quot; +
									&quot;text: 'VU&lt;br/&gt;&lt;span style=\&quot;font-size:8px\&quot;&gt;Channel B&lt;/span&gt;', &quot; +
									&quot;y: -40 &quot; +
								&quot;} &quot; +
							&quot;}&quot; +
						&quot;]&quot;);
				
				chartComp34.setPlotOptions(&quot;{ &quot; +
							&quot;gauge: { &quot; +
								&quot;dataLabels: { &quot; +
									&quot;enabled: false &quot; +
								&quot;}, &quot; +
								&quot;dial: { &quot; +
									&quot;radius: '100%' &quot; +
								&quot;}&quot; +
							&quot;} &quot; +
						&quot;}&quot;);
				
				series = new HashMap();
				series.put(&quot;yAxis&quot;, 0);
				chartComp34.setSeriesOptions(&quot;Channel A&quot;, series); 
				
				series = new HashMap();
				series.put(&quot;yAxis&quot;, 1);
				chartComp34.setSeriesOptions(&quot;Channel B&quot;, series); 

				
				chartComp34.setModel(dataChartModel34);
				
				//Initial Value
				dataChartModel34.addValue(&quot;Channel A&quot;, 0, -10);		
				dataChartModel34.addValue(&quot;Channel B&quot;, 0, -5);		
				
				//================================================================================
			    // Doublebox onOK Listener
			    //================================================================================

				doubleB= (Doublebox) getFellow(&quot;doubleB&quot;);
				doubleB.addEventListener(&quot;onOK&quot;, this);		
				
				//================================================================================
				// Polar chart
			    //================================================================================

				chartComp35 = (ZHighCharts) getFellow(&quot;chartComp35&quot;);
				chartComp35.setType(&quot;line&quot;);
				chartComp35.setOptions(&quot;{&quot; +
							&quot;polar: true&quot; +
						&quot;}&quot;);
				
				chartComp35.setTitle(&quot;Highcharts Polar Chart&quot;);
				chartComp35.setPane(&quot;{&quot; +
							&quot;startAngle: 0,&quot; +
							&quot;endAngle: 360&quot; +
						&quot;}&quot;);
				chartComp35.setxAxisOptions(&quot;{&quot; +
							&quot;tickInterval: 45,&quot; +
							&quot;min: 0, &quot; +
							&quot;max: 360, &quot; +
							&quot;labels: { &quot; +
								&quot;formatter: function () { &quot; +
									&quot;return this.value + '&#x00b0;'; &quot; +
								&quot;} &quot; +
							&quot;} &quot; +
						&quot;}&quot;);
				chartComp35.setyAxisOptions(&quot;{&quot; +
							&quot;min:0&quot; +
						&quot;}&quot;);
				chartComp35.setPlotOptions(&quot;{ &quot; +
							&quot;series: { &quot; +
								&quot;pointStart: 0, &quot; +
								&quot;pointInterval: 45 &quot; +
							&quot;}, &quot; +
							&quot;column: { &quot; +
								&quot;pointPadding: 0, &quot; +
								&quot;groupPadding: 0 &quot; +
							&quot;} &quot; +
						&quot;}&quot;);
				chartComp35.setTooltipFormatter(&quot;function formatTooltip(obj){ &quot; +
						&quot;return obj.x + '&lt;br/&gt;&quot; +
						&quot;&lt;span style=\&quot;color:'+ obj.series.color +';\&quot;&gt;'+ obj.series.name +'&lt;/span&gt; : &lt;b&gt;'+ obj.y +'&lt;/b&gt;';&quot; +
					&quot;}&quot;);
				
				series = new HashMap();
				series.put(&quot;type&quot;, &quot;column&quot;);
				series.put(&quot;pointPlacement&quot;, &quot;between&quot;);
				chartComp35.setSeriesOptions(&quot;Column&quot;, series); 
				
				series = new HashMap();
				series.put(&quot;type&quot;, &quot;line&quot;);
				chartComp35.setSeriesOptions(&quot;Line&quot;, series); 

				series = new HashMap();
				series.put(&quot;type&quot;, &quot;area&quot;);
				chartComp35.setSeriesOptions(&quot;Area&quot;, series); 
				
				chartComp35.setModel(dataChartModel35);
				
				//Add some date to the model
				Number colData[] = {8, 7, 6, 5, 4, 3, 2, 1};
				

				for (int i = 0;i&lt;colData.length;i++){
					dataChartModel35.addValue(&quot;Column&quot;, i * 45, colData[i]);
				}
				
				Number lineData[] = {1, 2, 3, 4, 5, 6, 7, 8};
				
				for (int i = 0;i&lt;lineData.length;i++){
					dataChartModel35.addValue(&quot;Line&quot;, i * 45, lineData[i]);
				}
				
				Number areaData[] = {1, 8, 2, 7, 3, 6, 4, 5};
				
				for (int i = 0;i&lt;areaData.length;i++){
					dataChartModel35.addValue(&quot;Area&quot;, i * 45, areaData[i]);
				}
				
				//================================================================================
				// Spiderweb
			    //================================================================================

				chartComp36 = (ZHighCharts) getFellow(&quot;chartComp36&quot;);
				chartComp36.setType(&quot;line&quot;);
				chartComp36.setOptions(&quot;{&quot; +
							&quot;polar: true,&quot; +
							&quot;plotBackgroundColor: null,&quot; +
							&quot;plotBackgroundImage: null,&quot; +
							&quot;plotBorderWidth: 0,&quot; +
							&quot;plotShadow: false&quot; +
						&quot;}&quot;);
				chartComp36.setTitle(&quot;Spiderweb&quot;);
				chartComp36.setSubTitle(&quot;Budget vs spending&quot;);
				chartComp36.setPane(&quot;{&quot; +
							&quot;size: '80%'&quot; +
						&quot;}&quot;);
				chartComp36.setxAxisOptions(&quot;{ &quot; +
							&quot;categories: [&quot; +
								&quot;'Sales', &quot; +
								&quot;'Marketing', &quot; +
								&quot;'Development', &quot; +
								&quot;'Customer Support', &quot; +
								&quot;'Information Technology', &quot; +
								&quot;'Administration'&quot; +
							&quot;],&quot; +
							&quot;tickmarkPlacement: 'on', &quot; +
							&quot;lineWidth: 0 &quot; +
						&quot;}&quot;);
				chartComp36.setyAxisOptions(&quot;{ &quot; +
							&quot;gridLineInterpolation: 'polygon',&quot; +
							&quot;lineWidth: 0,&quot; +
							&quot;min: 0&quot; +
						&quot;}&quot;);
				chartComp36.setTooltipOptions(&quot;{&quot; +
							&quot;shared: true&quot; +
						&quot;}&quot;);
				chartComp36.setTooltipFormatter(&quot;function formatTooltip(obj){ &quot; +
							&quot;return obj.x + '&lt;br/&gt;&quot; +
							&quot;&lt;span style=\&quot;color:'+ obj.points[0].series.color +';\&quot;&gt;'+ obj.points[0].series.name +'&lt;/span&gt; : &lt;b&gt;$'+ obj.points[0].y +'&lt;/b&gt;&lt;br/&gt;&quot; +
							&quot;&lt;span style=\&quot;color:'+ obj.points[1].series.color +';\&quot;&gt;'+ obj.points[1].series.name +'&lt;/span&gt; : &lt;b&gt;$'+ obj.points[1].y +'&lt;/b&gt;';&quot; + 
						&quot;}&quot;);

				chartComp36.setModel(dataChartModel36);
				
				
				series = new HashMap();
				series.put(&quot;pointPlacement&quot;, &quot;on&quot;);
				chartComp36.setSeriesOptions(&quot;Allocated Budget&quot;, series); 
				
				series = new HashMap();
				series.put(&quot;pointPlacement&quot;, &quot;on&quot;);
				chartComp36.setSeriesOptions(&quot;Actual Spending&quot;, series); 
				
				//Add some date to the model
				Number alloData[] = {43000, 19000, 60000, 35000, 17000, 10000};
				

				for (int i = 0;i&lt;alloData.length;i++){
					dataChartModel36.addValue(&quot;Allocated Budget&quot;, i , alloData[i]);
				}
				
				Number actuData[] = {50000, 39000, 42000, 31000, 26000, 14000};
				
				for (int i = 0;i&lt;actuData.length;i++){
					dataChartModel36.addValue(&quot;Actual Spending&quot;, i , actuData[i]);
				}

	}
	@Override
	public void onEvent(Event arg0) throws Exception {
		
		//Doublebox onOK Listener
		chartComp32.setGaugeValue(0, doubleB.getValue());
		chartComp33.setGaugeValue(0, doubleB.getValue());
		chartComp34.setGaugeValue(0, doubleB.getValue());
		chartComp34.setGaugeValue(1, doubleB.getValue() - 5);		
	}
	
	/**
	 * internal method to convert date&amp;time from string to epoch milliseconds
	 * 
	 * @param date
	 * @return
	 * @throws Exception
	 */
	private long getDateTime(String date) throws Exception {
		return sdf.parse(date).getTime();
	}

}
</pre>		               
				]]></html>
				</tabpanel>
			</tabpanels>
		</tabbox>				
	</window>
</zk>